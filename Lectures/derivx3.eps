%!PS-Adobe-2.0 EPSF-1.2
%%Creator: PGL v-2.00 by AnSoft, Inc.
%%Pages:   1
%%BoundingBox: 0 0 611 791
%%EndComments
%---------------------------------------------------------------------
%
%------------------ Copyright (C) 1991 AnSoft,Inc.--------------------
%
%---------------------------------------------------------------------
% Temporary variables used
%---------------------------------------------------------------------
%  PROC          VARIABLES
%  PatternFill : fx1,fx2,fy1,fy2,fwidth
%
%---------------------------------------------------------------------
%  PGL Global Data
%---------------------------------------------------------------------
/LineColor 1   def  % -1 turns off Line & Outline drawing
/LineStyle []  def  % 
/Phase     0   def  %
/AreaColor 1   def  % -1 turns off Area Fills
/FillFlag  1   def  % 1-Outline, 2-Fill, 3-Both
/FillStyle 0   def  % 
/FillMode  1   def  %  1-opaque, 0-transparent
/MaxColor  15  def  %
/CurFont   0   def  % FontNames index
/topFlagV  0   def  % Text Justification(Vertical) Flags 
/ctrFlagV  0   def  %                   (Vertical)
/ctrFlagH  0   def  %                   (Horizonal)
/LineWidth 1   def  %
/UnitWidth 1   def  % Unit Line thickness in 1/300'ths inches
/PatSize   3   def  % Fill Pattern Scale Factor
/PatChar   48  def  % Fill Pattern Ascii Value
/UserChar  60  def  % UserFill Pattern Ascii Value
/FillChar  (?) def  % UserFill Pattern Ascii Value
/UserFillPat <0000000000000000> def %- empty fill by default

%--------------------------------------------------------------------
% Bitmap support
%--------------------------------------------------------------------
/rleFlag   1 string def
/rleStr    2 string def
/bmStr     1 string def

%--------------------------------------------------------------------
%  Color Tables and Mappings
%--------------------------------------------------------------------
/bwColors 256 array def
0 1 255 { bwColors exch 0 put } for  % zero all colors to black
bwColors 0 1 put                     % index 0 - white, all others black

/grayColors 256 array def
0 1 255 { grayColors exch 0 put } for  % zero all colors to black
grayColors  0  1.00 put 
grayColors  1  0.11 put 
grayColors  2  0.59 put 
grayColors  3  0.70 put 
grayColors  4  0.30 put 
grayColors  5  0.41 put 
grayColors  6  0.40 put 
grayColors  7  0.97 put 
grayColors  8  0.50 put 
grayColors  9  0.40 put 
grayColors  10 0.73 put 
grayColors  11 0.80 put 
grayColors  12 0.53 put 
grayColors  13 0.60 put 
grayColors  14 0.93 put 
grayColors  15 0.00 put 

/rgbColors 256 array def
0 1 255 { rgbColors exch [0 0 0] put } for  % zero all colors to black
rgbColors  0  [1 1 1]           put         % white
rgbColors  1  [0 0 1]           put         % blue
rgbColors  2  [0 1 0]           put         % green
rgbColors  3  [0 1 1]           put         % cyan
rgbColors  4  [1 0 0]           put         % red
rgbColors  5  [1 0 1]           put         % magenta
rgbColors  6  [0.67  0.33  0]   put         % brown
rgbColors  7  [0.9 0.9 0.9]     put         % darkgray
rgbColors  8  [0.75 0.75 0.75]  put         % lightgray
rgbColors  9  [0.33 0.33 1]     put         % lightblue
rgbColors  10 [0.33  1 0.33]    put         % lightgreen
rgbColors  11 [0.33 1 1]        put         % lightcyan
rgbColors  12 [1 0.33  0.33]    put         % lightred
rgbColors  13 [1 0.33  1]       put         % lightmagenta
rgbColors  14 [1 1 0.33]        put         % yellow
rgbColors  15 [0 0 0]           put         % black
        
/ColorModel  0 def
/ColorChoices [ bwColors grayColors rgbColors ] def
/ColorMap ColorChoices ColorModel get def   % default colors=b&w

%--------------------------------------------------------------------
%----Page Size, Set By Main Pgm
%--------------------------------------------------------------------
%
/PX  1950 def
/PY  1194 def

%--------------------------------------------------------------------
%----Text Scale Factors
%--------------------------------------------------------------------
/SX  1800 def   % Base size of page width/height, 
/SY  1194 def   % for scaling fonts against

/FSX  [  6  7   8  10  12  9  10 ] def  % Unit Font Scale factors
/FSY  [ -2.3  -4.6 -4.6 -4.6 -4.6 -4.6 -4.6 ] def  % Neg's to invert Y axis

%--------------------------------------------------------------------
%---- Users Font Scale Factors
%--------------------------------------------------------------------
/FSXN 1 def
/FSXD 1 def
/FSYN 1 def
/FSYD 1 def

%---------------------------------------------------------------------
%  Fonts Names Used by PGL
%  These replace the following vector fonts provided with PGL
%  If you change these you may need to change the scale factors
%  in FSX and FSY.
%---------------------------------------------------------------------
/FontNames
[
  /Helvetica          % small
  /Courier            % simplex
  /Helvetica          % duplex
  /Times-Roman        % triplex
  /Times-BoldItalic   % gothic 
  /Courier-Oblique    % script simplex
  /Helvetica-Oblique  % script duplex
] def

%---------------------------------------------------------------------
%  Fill Pattern Font based on "PS Lang Ref Man (Red Book) - Chap 5"
%---------------------------------------------------------------------
/newfont 10 dict def
newfont 
begin
 /FontType 3 def
 /FontMatrix [ .125 0 0 .125 0 0 ] def
 /FontBBox   [ 0 0 8 8 ]     def

 /Encoding 256 array def
 0 1 255 { Encoding exch /.notdef put } for
  Encoding  48 /empty     put  % '0'
  Encoding  49 /solid     put  % '1'
  Encoding  50 /lfill     put  % '2'
  Encoding  51 /slash     put  % '3'
  Encoding  52 /hslash    put  % '4'
  Encoding  53 /hbkslash  put  % '5'
  Encoding  54 /bkslash   put  % '6'
  Encoding  55 /hatch     put  % '7'
  Encoding  56 /xhatch    put  % '8'
  Encoding  57 /intleav   put  % '9'
  Encoding  58 /widedot   put  % '10'
  Encoding  59 /closedot  put  % '11'
  Encoding  60 /patfill   put  % '12'

 /CharProcs 14 dict def
 CharProcs 
 begin
  /.notdef {} bind def
  /empty    { 8 8 true [1 0 0 1 0 0] { <0000000000000000> } imagemask } bind def
  /solid    { 8 8 true [1 0 0 1 0 0] { <ffffffffffffffff> } imagemask } bind def
  /lfill    { 8 8 true [1 0 0 1 0 0] { <ffff0000ffff0000> } imagemask } bind def
  /slash    { 8 8 true [1 0 0 1 0 0] { <0102040810204080> } imagemask } bind def 
  /hslash   { 8 8 true [1 0 0 1 0 0] { <e0c183070e1c3870> } imagemask } bind def 
  /hbkslash { 8 8 true [1 0 0 1 0 0] { <f0783c1e0f87c3e1> } imagemask } bind def 
  /bkslash  { 8 8 true [1 0 0 1 0 0] { <a5d269b45a2d964b> } imagemask } bind def 
  /hatch    { 8 8 true [1 0 0 1 0 0] { <ff888888ff888888> } imagemask } bind def 
  /xhatch   { 8 8 true [1 0 0 1 0 0] { <8142241818244281> } imagemask } bind def 
  /intleav  { 8 8 true [1 0 0 1 0 0] { <cc33cc33cc33cc33> } imagemask } bind def 
  /widedot  { 8 8 true [1 0 0 1 0 0] { <8000080080000800> } imagemask } bind def 
  /closedot { 8 8 true [1 0 0 1 0 0] { <8800220088002200> } imagemask } bind def 
  /patfill  { 8 8 true [1 0 0 1 0 0] { UserFillPat } imagemask } bind def 
 end

 /BuildChar
 {
    exch
    begin  
      dup UserChar eq{                 
        8 0 setcharwidth            % userfillstyle
      }{
        8 0 0 0 8 8 setcachedevice  % standard fillstyle
      }ifelse
      Encoding exch get  
      CharProcs exch get 
    end
    exec
 }def
end 

/FillFont newfont definefont pop
%----- End Of Area Fill Font Def--------------------------------------

%---------------------------------------------------------------------
%  PGL Redefinitions
%---------------------------------------------------------------------
/gs   { gsave } bind def         
/gr   { grestore } bind def  
/m    { moveto } bind def        
/l    { lineto currentpoint stroke moveto } bind def  
/rm   { rmoveto } bind def       
/rl   { rlineto } bind def  
/cp   { closepath } bind def     
/np   { newpath } bind def   
/sg   { setgray } bind def       
/st   { stroke } bind def     
/sd   { setdash } bind def       
/ex   { exch } bind def
/in   { index } bind def         
/sw   { stringwidth } bind def 
/cxy  { currentpoint } bind def  
/slw  { setlinewidth } bind def 

%---------------------------------------------------------------------
% str strlen nchars
%---------------------------------------------------------------------
/strlen
{
    dup           % str str
    /itmp 0 def
    { /itmp itmp 1 add def pop } forall  % count characters
    itmp          % nchars
} bind def

%---------------------------------------------------------------------
% string txtCtrH   % Center Justify a string Horiz
%---------------------------------------------------------------------
/txtCtrH { dup sw pop 2 div neg dup 0 rm /ctrFlagH exch def } bind def 

%---------------------------------------------------------------------
% wx wy string atxtCtrH   % Center Justify a string Horiz
%---------------------------------------------------------------------
/atxtCtrH { 
    3 -1 roll   % wy string wx
    dup        % wy string wx wx
    4 1 roll  % wx wy string wx
    /xW ex def % wx wy string
    strlen     % wx wy string nchars
    xW mul
    /xW ex def
    dup        % str str
    sw         % str wx wy
    pop        % str wx
    xW add     % str wx+xW
    2 div neg 
    dup 
    0 rm 
    /ctrFlagH exch def 
} bind def 

%---------------------------------------------------------------------
% txtCtrHend   % Finish Center Justifying a string Horiz
%                cp shoud be at center of string
%---------------------------------------------------------------------
/txtCtrHend { ctrFlagH 0 rm /ctrFlagH 0 def } bind def 

%---------------------------------------------------------------------
% string txtRtH   % Right Justify a string Horiz
%---------------------------------------------------------------------
/txtRtH  {dup sw pop neg 0 rm} bind def 

%---------------------------------------------------------------------
% string txtRtH   % Right Justify a string Horiz
%---------------------------------------------------------------------
/atxtRtH  {
    3 -1 roll   % wy string wx
    dup        % wy string wx wx
    4 1 roll  % wx wy string wx
    /xW ex def % wx wy string
    strlen     % wx wy string nchars
    xW mul
    /xW ex def
    dup 
    sw 
    pop 
    xW add     % str wx+xW
    neg 0 rm
} bind def 

%---------------------------------------------------------------------
% txtCtrV  % Center Justify a string Vertically
%---------------------------------------------------------------------
/txtCtrV { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 2 div 0 ex gr rm pop /ctrFlagV 1 def } bind def 

%---------------------------------------------------------------------
% txtCtrVend  % Center Justify a string Vertically
%---------------------------------------------------------------------
/txtCtrVend { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
              sub neg 2 div 0 ex gr neg rm pop /ctrFlagV 0 def } bind def 

%---------------------------------------------------------------------
% string txtTopV  % Top Justify a string Vertically
%---------------------------------------------------------------------
/txtTopV { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 0 ex gr rm pop /topFlagV 1 def } bind def 

%---------------------------------------------------------------------
% txtTopVend  % Top Justify a string Vertically
%---------------------------------------------------------------------
/txtTopVend { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 0 ex gr neg rm pop /topFlagV 0 def } bind def 

%---------------------------------------------------------------------
%  ash   display text & readjusts cp for Top & Center Vertical
%        text justification
%---------------------------------------------------------------------
/ash {
   ashow
   topFlagV 1 eq {
     txtTopVend
   } if
   ctrFlagV 1 eq {
     txtCtrVend
   } if
   ctrFlagH 0 ne {
     txtCtrHend
   } if
} bind def

%---------------------------------------------------------------------
%  sh   display text & readjusts cp for Top & Center Vertical
%       text justification
%---------------------------------------------------------------------
/sh {
   show
   topFlagV 1 eq {
     txtTopVend
   } if
   ctrFlagV 1 eq {
     txtCtrVend
   } if
   ctrFlagH 0 ne {
     txtCtrHend
   } if
} bind def

%---------------------------------------------------------------------
% xs  % Extended Stroke 
%---------------------------------------------------------------------
/xs { 
  LineColor -1 ne
  { cxy st m }{ cxy np m }ifelse 
} bind def                       

%---------------------------------------------------------------------
%  color SLC   % SetLineColor  % -1 turns off line drawing
%---------------------------------------------------------------------
/SLC { dup /LineColor exch def SCC }bind def

%---------------------------------------------------------------------
%  index [r g b] SRC   % SetRgbColor
%---------------------------------------------------------------------
/SRC { 
/rgbTmp   exch def
/rgbIndex exch def
/rgbAbs   0.0  def
rgbTmp 0 get 1. 255. div mul  rgbTmp exch 0 exch put
rgbTmp 1 get 1. 255. div mul  rgbTmp exch 1 exch put
rgbTmp 2 get 1. 255. div mul  rgbTmp exch 2 exch put
rgbColors rgbIndex rgbTmp put  
rgbTmp { dup mul rgbAbs add /rgbAbs exch def } forall
grayColors rgbIndex rgbAbs sqrt put
}bind def

%---------------------------------------------------------------------
%  color SCC  % SetCurColor
%---------------------------------------------------------------------
/SCC { 
  dup -1 ne 
  { % -1 turns of line drawing
     ColorMap exch get 
     dup type /arraytype ne { 
       setgray 
     }{ 
       {} forall setrgbcolor 
     } ifelse
  }{ 
     pop  % remove -1 from stack
  }ifelse
}bind def

%---------------------------------------------------------------------
%  [] phase SLS  % SetLineStyle
%---------------------------------------------------------------------
/SLS { 
   /Phase exch def
   /LineStyle exch def 
   LineStyle Phase setdash 
}bind def

%---------------------------------------------------------------------
%  width SLW % SetLineWidth ( 1/300 inch )
%---------------------------------------------------------------------
/SLW { 
   /LineWidth exch def 
   LineWidth UnitWidth mul setlinewidth 
}bind def

%---------------------------------------------------------------------
%   color SFC % SetFillColor
%---------------------------------------------------------------------
/SFC {  /AreaColor exch def }bind def

%---------------------------------------------------------------------
%  <pattern> SUF  % SetUserFill pattern = hex no 
%---------------------------------------------------------------------
/SUF {  
    /UserFillPat exch def  % set pattern
    /FillStyle 12 def      % set flag
}bind def

%---------------------------------------------------------------------
%  style SFS  % SetFillStyle style no (0-11)
%---------------------------------------------------------------------
/SFS {  /FillStyle exch def }bind def

%---------------------------------------------------------------------
%  mode SFM  % SetFillMode   ( 1-Opaque, 2-Transparent)
%---------------------------------------------------------------------
/SFM {  /FillMode exch def }bind def

%---------------------------------------------------------------------
%  fontno SCF SetCurFont
%---------------------------------------------------------------------
/SCF {
 dup  /CurFont exch def        % save font no.
 FontNames exch get findfont 
   [ FSX CurFont get FSXN mul FSXD div PX mul SX div 0 0
     FSY CurFont get FSYN mul FSYD div PY mul SY div 0 0 ]
   makefont setfont 
 }bind def

%---------------------------------------------------------------------
%  xn xd yn yd SFX    % SetFontScale
%---------------------------------------------------------------------
/SFX {
  /FSYD exch def    /FSYN exch def  
  /FSXD exch def    /FSXN exch def
  CurFont SCF
}bind def

%---------------------------------------------------------------------
%  [ f1 f2 f3 f4 f5 f6 f7 ] SFNS   % SetFontNames
%---------------------------------------------------------------------
/SFNS {
  /FontNames exch def
}bind def

%---------------------------------------------------------------------
% [7 xsizes] [7 ysizes] SFZ  % SetFontSizes
%---------------------------------------------------------------------
/SFSZ {
  /FSY exch def
  /FSX exch def
}bind def

%---------------------------------------------------------------------
%  px py SPS  % SetPageSize
%---------------------------------------------------------------------
/SPS { /PY exch def  /PX exch def }bind def

%---------------------------------------------------------------------
%  x y color Pix  % SetPixel  1-Pixel = 1/300" pixel!
%---------------------------------------------------------------------
/Pix { 
gsave                     %
SCC moveto                % set color & position
1 linewidth [] 0 setdash  % set attributes
1 0 rlineto stroke        % do it!
grestore                  %
} bind def                       

%---------------------------------------------------------------------
%  x1 x2 y2 y2 Ln  % Line
%---------------------------------------------------------------------
/Ln { gs np 4 -2 roll m l st gr } bind def                       

%---------------------------------------------------------------------
%  x1 y1 x2 y2 flag Rect   (flag: 1-outline,2-fill,3-both)
%---------------------------------------------------------------------
/Rect { 
    /FillFlag exch def 
    gs np DrawRect FillArea OutLine gr 
} bind def

%---------------------------------------------------------------------
% x1 y1 x2 y2 x3 y3 .... flag PolyF  % PolyFill - fill current path
%---------------------------------------------------------------------
/PolyF { 
    /FillFlag exch def 
    gs closepath FillArea OutLine gr 
} bind def

%---------------------------------------------------------------------
%  x1 y1 x2 y2 ClipR % ClipRect 
%---------------------------------------------------------------------
/ClipR { 
    cxy 6 2 roll       % cx cy x1 y1 x2 y2
    gr gs
    0 setlinewidth
    np DrawRect eoclip np 
    m 
    %-- Reset graphics state
    LineWidth SLW
    LineColor SLC
    FSXN FSXD FSYN FSYD SFX
    CurFont   SCF
    LineStyle 0 setdash
} bind def

%-PRIVATE-------------------------------------------------------------
%  x1 y1 x2 y2 DrawRect 
%---------------------------------------------------------------------
/DrawRect { 
    3 in 3 in moveto 
    1 in 3 in lineto 
    3 in 1 in 4 -2 roll lineto lineto pop pop closepath % lineto
} bind def

%-PRIVATE-------------------------------------------------------------
%  xc yc sa ea rx ry DrawArc    
%---------------------------------------------------------------------
/DrawArc { 
   /savematrix matrix currentmatrix def 
   6 -2 roll translate    
   scale 
   0 0 1 5 -2 roll 
   1 -1 scale arc 1 -1 scale
   savematrix setmatrix
}bind def

%---------------------------------------------------------------------
%  xc yc sa ea rx ry Arc
%---------------------------------------------------------------------
/Arc { gs np DrawArc [] 0 sd st gr } bind def   

%---------------------------------------------------------------------
%  xc yc sa ea rx ry flag Pie   (flag: 1-Outline,2-Fill,3-Both)
%---------------------------------------------------------------------
/Pie { 
    /FillFlag exch def
    gs np 6 -2 roll 2 copy 2 copy m 8 4 roll 
    DrawArc cp FillArea OutLine gr 
} bind def   

%---------------------------------------------------------------------
%  xc yc rx ry flag ELLIPSE (flag: 1-Outline,2-Fill,3-Both)
%---------------------------------------------------------------------
/Ellipse { 
    /FillFlag exch def
     gs np 0 360 4 2 roll DrawArc FillArea OutLine gr 
}bind def   

%-PRIVATE-------------------------------------------------------------
%  OutLine
%---------------------------------------------------------------------
/OutLine  { 
  FillFlag 1 and 1 eq { 
    [] 0 sd LineColor SCC st 
  }if 
}bind def

%-PRIVATE-------------------------------------------------------------
%  FillArea  - fills current path
%---------------------------------------------------------------------
/FillArea { 
  FillFlag 2 and 2 eq { 
     gs eoclip 
     AreaColor SCC
     PatternFill
     gr
  }if 
}bind def

%-PRIVATE-------------------------------------------------------------
%  PatternFill 
%---------------------------------------------------------------------
/PatternFill {
   /psize 8 PatSize mul def
   /FillFont findfont psize scalefont setfont % set Pattern font
   FillChar 0 FillStyle PatChar add put               % fill char index
   FillMode 1 eq { gsave 1 setgray fill grestore }if  % erase background
   pathbbox                                           % llx lly  urx ury
   newpath              
   ceiling cvi /fy2 exch def 
   ceiling cvi /fx2 exch def 
   cvi 7 not and /fy1 exch def 
   cvi 7 not and /fx1 exch def
   fx2 fx1 sub psize div ceiling cvi
   /fwidth exch def
   fy1 psize fy2                          %
   {                                      %
     fx1 exch moveto                      %
     fwidth { FillChar show } repeat      %
   } for                                  %
} bind def

%---------------------------------------------------------------------
%  savePGL
%---------------------------------------------------------------------
/savePGL{
   /saveObj save def
}bind def

%---------------------------------------------------------------------
%  #copies newPage
%---------------------------------------------------------------------
/newPage{
   /#copies exch def
   showpage saveObj restore
   /#copies 1 def
}bind def

%----------------------------------------------------------------------
% x,y,npixels bmRow  % Bitmap row data, 1 row at a time...
%----------------------------------------------------------------------
/bmRow {
  /bmPixels  exch def
  /bmY       exch def
  /bmX       exch def

  currentpoint stroke moveto % save x,y stroke and moveto
  gsave                      % save graphics state
  1 setlinewidth             % linewidth
  0 setlinecap               % but cap
  [] 0 setdash               % solid style
  bmX .5 add bmY .5 add moveto % move to start of row
  %
  %  Read & decompress  a whole row of pixel color data via RLE
  %
  currentfile rleFlag readhexstring pop 
  0 get 1 eq 
  { /cumBytes 0 def
    { 
      currentfile rleStr readhexstring pop 
      dup 
      0 get 1 add exch % count rleStr
      1 get SCC        % count 
      dup              % dup count
      0 rlineto        % draw
      currentpoint stroke moveto     
      /cumBytes exch cumBytes add def 
      cumBytes bmPixels ge { exit } if 
    }loop 
  }{ 
    1 1 bmPixels
    {
      pop
      currentfile bmStr readhexstring pop 
      0 get SCC
      1 0 rlineto
      currentpoint stroke moveto     
    }for
  }ifelse 

  grestore
}bind def

%----------------------------------------------------------------------
% DPI PMAXX PMAXY PageHght TopMgn LftMgn LandFlag ColorModel initPGL
%----------------------------------------------------------------------
/initPGL {
   %---Page Constants
   /ColorModel exch def  /LandFlag exch def 
   /LeftMgn exch def     /TopMgn exch def
   /PageHeight exch def  /PY exch def       /PX exch def

   %---Select/Set Color model
   /ColorMap ColorChoices ColorModel get def   % default colors=b&w
   
   %---Save state & set output res
   savePGL 
   
   %---Set output res scaling, dpi on stack(300?)
   /dpiRes  exch def             % dots per inch
   /dphiRes dpiRes 100 div def   % pots per 1/100 inches (hinches)
   72 dpiRes div dup scale

   %---Set coordinate origin, & dir
   LandFlag 1 ne { 
      % Portrait Setup
      LeftMgn dphiRes mul PageHeight TopMgn sub dphiRes mul 
   }{
      % Landscape Setup
      90 rotate LeftMgn dphiRes mul TopMgn dphiRes mul neg 
   }ifelse
   translate 1 -1 scale

   %---Adjust font scale factor sizes, relative to 5000x5000
   0 1 6 { dup FSX exch get 4999 PX div mul FSX 3 1 roll put } for
   0 1 6 { dup FSY exch get 4999 PY div mul FSY 3 1 roll put } for

   %---Set default graphics state
   np 0 0 m
   1  SLC
   1  SLW
   [] 0 SLS
   1 1 1 1 SFX
   0 SCF
   <0000000000000000> SUF
   10 setmiterlimit
    0 setlinejoin 
    0 setlinecap
    gs  % save for clipping
    xs 0 0 PX PY ClipR
}bind def

1 setlinecap

%%EndProlog
 %%Page: 1 1
 300 3295 2543 1100 0 0 1 0 initPGL
 0 SCF
 [] 0 SLS
 1 SLW
 <ffffffffffffffff> SUF
 1 SFC
 1 SFS
 1 SFC
 1 SFM
 0 0 3295 2543 ClipR
 0 0 3295 2543 ClipR
 xs 1 SLC
 [] 0 SLS
 1 SLW
 xs 0 SLC
 1 SLW
 xs 15 SLC
 229 2311 3145 2311 Ln
 229 158 3145 158 Ln
 228 2312 3145 2312 Ln
 228 158 3145 158 Ln
 227 2313 3145 2313 Ln
 227 157 3145 157 Ln
 226 2313 3145 2313 Ln
 226 156 3145 156 Ln
 226 2314 3145 2314 Ln
 226 155 3145 155 Ln
 229 2311 229 2285 Ln
 229 158 229 185 Ln
 593 2311 593 2285 Ln
 593 158 593 185 Ln
 494 2424 584 2424 Ln
 633 2364 687 2364 Ln
 687 2364 658 2405 Ln
 658 2405 672 2405 Ln
 672 2405 683 2410 Ln
 683 2410 687 2414 Ln
 687 2414 692 2430 Ln
 692 2430 692 2440 Ln
 692 2440 687 2454 Ln
 687 2454 678 2465 Ln
 678 2465 663 2470 Ln
 663 2470 647 2470 Ln
 647 2470 633 2465 Ln
 633 2465 628 2460 Ln
 628 2460 623 2450 Ln
 958 2311 958 2285 Ln
 958 158 958 185 Ln
 859 2424 948 2424 Ln
 992 2389 992 2384 Ln
 992 2384 997 2375 Ln
 997 2375 1002 2369 Ln
 1002 2369 1012 2364 Ln
 1012 2364 1032 2364 Ln
 1032 2364 1042 2369 Ln
 1042 2369 1047 2375 Ln
 1047 2375 1052 2384 Ln
 1052 2384 1052 2394 Ln
 1052 2394 1047 2405 Ln
 1047 2405 1037 2419 Ln
 1037 2419 988 2470 Ln
 988 2470 1057 2470 Ln
 1322 2311 1322 2285 Ln
 1322 158 1322 185 Ln
 1223 2424 1313 2424 Ln
 1367 2384 1376 2379 Ln
 1376 2379 1392 2364 Ln
 1392 2364 1392 2470 Ln
 1687 2311 1687 2285 Ln
 1687 158 1687 185 Ln
 1680 2364 1665 2369 Ln
 1665 2369 1655 2384 Ln
 1655 2384 1651 2410 Ln
 1651 2410 1651 2424 Ln
 1651 2424 1655 2450 Ln
 1655 2450 1665 2465 Ln
 1665 2465 1680 2470 Ln
 1680 2470 1690 2470 Ln
 1690 2470 1705 2465 Ln
 1705 2465 1715 2450 Ln
 1715 2450 1720 2424 Ln
 1720 2424 1720 2410 Ln
 1720 2410 1715 2384 Ln
 1715 2384 1705 2369 Ln
 1705 2369 1690 2364 Ln
 1690 2364 1680 2364 Ln
 2051 2311 2051 2285 Ln
 2051 158 2051 185 Ln
 2030 2384 2039 2379 Ln
 2039 2379 2055 2364 Ln
 2055 2364 2055 2470 Ln
 2416 2311 2416 2285 Ln
 2416 158 2416 185 Ln
 2384 2389 2384 2384 Ln
 2384 2384 2389 2375 Ln
 2389 2375 2394 2369 Ln
 2394 2369 2404 2364 Ln
 2404 2364 2424 2364 Ln
 2424 2364 2434 2369 Ln
 2434 2369 2439 2375 Ln
 2439 2375 2444 2384 Ln
 2444 2384 2444 2394 Ln
 2444 2394 2439 2405 Ln
 2439 2405 2429 2419 Ln
 2429 2419 2380 2470 Ln
 2380 2470 2449 2470 Ln
 2780 2311 2780 2285 Ln
 2780 158 2780 185 Ln
 2754 2364 2808 2364 Ln
 2808 2364 2779 2405 Ln
 2779 2405 2793 2405 Ln
 2793 2405 2804 2410 Ln
 2804 2410 2808 2414 Ln
 2808 2414 2813 2430 Ln
 2813 2430 2813 2440 Ln
 2813 2440 2808 2454 Ln
 2808 2454 2799 2465 Ln
 2799 2465 2784 2470 Ln
 2784 2470 2768 2470 Ln
 2768 2470 2754 2465 Ln
 2754 2465 2749 2460 Ln
 2749 2460 2744 2450 Ln
 3145 2311 3145 2285 Ln
 3145 158 3145 185 Ln
 3158 2364 3109 2435 Ln
 3109 2435 3183 2435 Ln
 3158 2364 3158 2470 Ln
 229 2311 229 158 Ln
 3145 2311 3145 158 Ln
 228 2310 228 158 Ln
 3146 2312 3146 158 Ln
 227 2309 227 158 Ln
 3146 2313 3146 157 Ln
 226 2309 226 158 Ln
 3147 2313 3147 156 Ln
 226 2308 226 158 Ln
 3148 2314 3148 155 Ln
 229 2311 255 2311 Ln
 3145 2311 3119 2311 Ln
 229 2096 255 2096 Ln
 3145 2096 3119 2096 Ln
 148 2249 148 2158 Ln
 113 2114 108 2114 Ln
 108 2114 98 2109 Ln
 98 2109 93 2104 Ln
 93 2104 88 2094 Ln
 88 2094 88 2074 Ln
 88 2074 93 2063 Ln
 93 2063 98 2058 Ln
 98 2058 108 2053 Ln
 108 2053 118 2053 Ln
 118 2053 128 2058 Ln
 128 2058 143 2069 Ln
 143 2069 193 2119 Ln
 193 2119 193 2048 Ln
 88 1982 93 1998 Ln
 93 1998 108 2008 Ln
 108 2008 133 2013 Ln
 133 2013 148 2013 Ln
 148 2013 172 2008 Ln
 172 2008 188 1998 Ln
 188 1998 193 1982 Ln
 193 1982 193 1973 Ln
 193 1973 188 1957 Ln
 188 1957 172 1947 Ln
 172 1947 148 1942 Ln
 148 1942 133 1942 Ln
 133 1942 108 1947 Ln
 108 1947 93 1957 Ln
 93 1957 88 1973 Ln
 88 1973 88 1982 Ln
 229 1880 255 1880 Ln
 3145 1880 3119 1880 Ln
 229 1665 255 1665 Ln
 3145 1665 3119 1665 Ln
 229 1450 255 1450 Ln
 3145 1450 3119 1450 Ln
 148 1550 148 1460 Ln
 88 1359 88 1410 Ln
 88 1410 133 1415 Ln
 133 1415 128 1410 Ln
 128 1410 123 1395 Ln
 123 1395 123 1380 Ln
 123 1380 128 1364 Ln
 128 1364 138 1355 Ln
 138 1355 153 1350 Ln
 153 1350 163 1350 Ln
 163 1350 177 1355 Ln
 177 1355 188 1364 Ln
 188 1364 193 1380 Ln
 193 1380 193 1395 Ln
 193 1395 188 1410 Ln
 188 1410 183 1415 Ln
 183 1415 172 1420 Ln
 229 1235 255 1235 Ln
 3145 1235 3119 1235 Ln
 229 1019 255 1019 Ln
 3145 1019 3119 1019 Ln
 88 996 88 1046 Ln
 88 1046 133 1051 Ln
 133 1051 128 1046 Ln
 128 1046 123 1032 Ln
 123 1032 123 1016 Ln
 123 1016 128 1001 Ln
 128 1001 138 991 Ln
 138 991 153 986 Ln
 153 986 163 986 Ln
 163 986 177 991 Ln
 177 991 188 1001 Ln
 188 1001 193 1016 Ln
 193 1016 193 1032 Ln
 193 1032 188 1046 Ln
 188 1046 183 1051 Ln
 183 1051 172 1056 Ln
 229 804 255 804 Ln
 3145 804 3119 804 Ln
 229 589 255 589 Ln
 3145 589 3119 589 Ln
 108 664 103 654 Ln
 103 654 88 639 Ln
 88 639 193 639 Ln
 88 513 88 564 Ln
 88 564 133 569 Ln
 133 569 128 564 Ln
 128 564 123 549 Ln
 123 549 123 534 Ln
 123 534 128 518 Ln
 128 518 138 508 Ln
 138 508 153 503 Ln
 153 503 163 503 Ln
 163 503 177 508 Ln
 177 508 188 518 Ln
 188 518 193 534 Ln
 193 534 193 549 Ln
 193 549 188 564 Ln
 188 564 183 569 Ln
 183 569 172 573 Ln
 229 374 255 374 Ln
 3145 374 3119 374 Ln
 229 158 255 158 Ln
 3145 158 3119 158 Ln
 113 243 108 243 Ln
 108 243 98 238 Ln
 98 238 93 233 Ln
 93 233 88 224 Ln
 88 224 88 203 Ln
 88 203 93 193 Ln
 93 193 98 188 Ln
 98 188 108 183 Ln
 108 183 118 183 Ln
 118 183 128 188 Ln
 128 188 143 198 Ln
 143 198 193 248 Ln
 193 248 193 178 Ln
 88 83 88 133 Ln
 88 133 133 138 Ln
 133 138 128 133 Ln
 128 133 123 119 Ln
 123 119 123 103 Ln
 123 103 128 88 Ln
 128 88 138 78 Ln
 138 78 153 73 Ln
 153 73 163 73 Ln
 163 73 177 78 Ln
 177 78 188 88 Ln
 188 88 193 103 Ln
 193 103 193 119 Ln
 193 119 188 133 Ln
 188 133 183 138 Ln
 183 138 172 143 Ln
 xs 10 SLC
 1 SLW
 621 2311 638 2262 Ln
 638 2262 659 2198 Ln
 659 2198 682 2137 Ln
 682 2137 704 2079 Ln
 704 2079 726 2023 Ln
 726 2023 748 1970 Ln
 748 1970 770 1920 Ln
 770 1920 792 1871 Ln
 792 1871 815 1825 Ln
 815 1825 836 1782 Ln
 836 1782 858 1740 Ln
 858 1740 881 1701 Ln
 881 1701 902 1664 Ln
 902 1664 925 1629 Ln
 925 1629 947 1595 Ln
 947 1595 969 1563 Ln
 969 1563 991 1534 Ln
 991 1534 1013 1506 Ln
 1013 1506 1035 1481 Ln
 1035 1481 1058 1456 Ln
 1058 1456 1079 1434 Ln
 1079 1434 1101 1413 Ln
 1101 1413 1124 1394 Ln
 1124 1394 1145 1376 Ln
 1145 1376 1168 1359 Ln
 1168 1359 1190 1344 Ln
 1190 1344 1212 1330 Ln
 1212 1330 1234 1317 Ln
 1234 1317 1256 1306 Ln
 1256 1306 1278 1295 Ln
 1278 1295 1301 1286 Ln
 1301 1286 1322 1278 Ln
 1322 1278 1344 1271 Ln
 1344 1271 1367 1264 Ln
 1367 1264 1388 1258 Ln
 1388 1258 1411 1253 Ln
 1411 1253 1433 1249 Ln
 1433 1249 1455 1246 Ln
 1455 1246 1477 1243 Ln
 1477 1243 1499 1240 Ln
 1499 1240 1521 1239 Ln
 1521 1239 1544 1237 Ln
 1544 1237 1565 1236 Ln
 1565 1236 1587 1236 Ln
 1587 1236 1610 1236 Ln
 1610 1236 1631 1235 Ln
 1631 1235 1654 1235 Ln
 1654 1235 1676 1235 Ln
 1676 1235 1698 1235 Ln
 1698 1235 1720 1235 Ln
 1720 1235 1742 1235 Ln
 1742 1235 1764 1234 Ln
 1764 1234 1787 1234 Ln
 1787 1234 1808 1233 Ln
 1808 1233 1830 1232 Ln
 1830 1232 1853 1231 Ln
 1853 1231 1874 1229 Ln
 1874 1229 1897 1227 Ln
 1897 1227 1919 1223 Ln
 1919 1223 1941 1220 Ln
 1941 1220 1963 1216 Ln
 1963 1216 1985 1211 Ln
 1985 1211 2007 1205 Ln
 2007 1205 2030 1199 Ln
 2030 1199 2051 1192 Ln
 2051 1192 2073 1183 Ln
 2073 1183 2096 1174 Ln
 2096 1174 2117 1164 Ln
 2117 1164 2140 1152 Ln
 2140 1152 2162 1139 Ln
 2162 1139 2184 1125 Ln
 2184 1125 2206 1110 Ln
 2206 1110 2228 1094 Ln
 2228 1094 2250 1076 Ln
 2250 1076 2273 1056 Ln
 2273 1056 2294 1036 Ln
 2294 1036 2316 1013 Ln
 2316 1013 2339 988 Ln
 2339 988 2360 963 Ln
 2360 963 2383 935 Ln
 2383 935 2405 906 Ln
 2405 906 2427 874 Ln
 2427 874 2449 841 Ln
 2449 841 2471 806 Ln
 2471 806 2493 768 Ln
 2493 768 2516 729 Ln
 2516 729 2537 688 Ln
 2537 688 2559 644 Ln
 2559 644 2582 598 Ln
 2582 598 2603 550 Ln
 2603 550 2626 499 Ln
 2626 499 2648 446 Ln
 2648 446 2670 390 Ln
 2670 390 2692 332 Ln
 2692 332 2714 271 Ln
 2714 271 2736 207 Ln
 2736 207 2753 158 Ln
 xs 11 SLC
 635 158 638 164 Ln
 638 164 659 209 Ln
 659 209 668 225 Ln
 701 290 703 290 Ln
 701 290 726 337 Ln
 726 337 736 355 Ln
 772 420 774 420 Ln
 772 420 811 486 Ln
 848 551 850 551 Ln
 848 551 881 603 Ln
 881 603 890 617 Ln
 934 682 935 682 Ln
 934 682 969 733 Ln
 969 733 980 748 Ln
 1029 813 1030 813 Ln
 1029 813 1058 849 Ln
 1058 849 1079 876 Ln
 1079 876 1082 878 Ln
 1140 944 1141 944 Ln
 1140 944 1168 973 Ln
 1168 973 1190 994 Ln
 1190 994 1204 1009 Ln
 1268 1065 1270 1065 Ln
 1268 1065 1301 1090 Ln
 1301 1090 1322 1106 Ln
 1322 1106 1333 1113 Ln
 1397 1153 1399 1153 Ln
 1397 1153 1433 1172 Ln
 1433 1172 1455 1183 Ln
 1455 1183 1462 1186 Ln
 1527 1209 1528 1209 Ln
 1527 1209 1565 1220 Ln
 1565 1220 1587 1225 Ln
 1587 1225 1591 1226 Ln
 1655 1234 1657 1234 Ln
 1655 1234 1698 1235 Ln
 1698 1235 1720 1234 Ln
 1720 1234 1722 1234 Ln
 1785 1225 1787 1225 Ln
 1785 1225 1808 1220 Ln
 1808 1220 1830 1214 Ln
 1830 1214 1849 1209 Ln
 1914 1184 1915 1184 Ln
 1914 1184 1941 1172 Ln
 1941 1172 1963 1161 Ln
 1963 1161 1979 1152 Ln
 2043 1111 2045 1111 Ln
 2043 1111 2073 1090 Ln
 2073 1090 2096 1072 Ln
 2096 1072 2108 1062 Ln
 2172 1005 2174 1005 Ln
 2172 1005 2206 973 Ln
 2206 973 2228 950 Ln
 2228 950 2237 941 Ln
 2295 876 2297 876 Ln
 2295 876 2316 849 Ln
 2316 849 2339 822 Ln
 2339 822 2348 811 Ln
 2397 746 2398 746 Ln
 2397 746 2427 702 Ln
 2427 702 2443 679 Ln
 2487 614 2488 614 Ln
 2487 614 2516 568 Ln
 2516 568 2528 549 Ln
 2566 484 2568 484 Ln
 2566 484 2604 418 Ln
 2640 353 2641 353 Ln
 2640 353 2670 295 Ln
 2670 295 2675 287 Ln
 2708 222 2710 222 Ln
 2708 222 2736 164 Ln
 2736 164 2739 158 Ln
 xs 15 SLC
 1 newPage
 %%Trailer
 %!END
