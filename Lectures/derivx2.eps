%!PS-Adobe-2.0 EPSF-1.2
%%Creator: PGL v-2.00 by AnSoft, Inc.
%%Pages:   1
%%BoundingBox: 0 0 611 791
%%EndComments
%---------------------------------------------------------------------
%
%------------------ Copyright (C) 1991 AnSoft,Inc.--------------------
%
%---------------------------------------------------------------------
% Temporary variables used
%---------------------------------------------------------------------
%  PROC          VARIABLES
%  PatternFill : fx1,fx2,fy1,fy2,fwidth
%
%---------------------------------------------------------------------
%  PGL Global Data
%---------------------------------------------------------------------
/LineColor 1   def  % -1 turns off Line & Outline drawing
/LineStyle []  def  % 
/Phase     0   def  %
/AreaColor 1   def  % -1 turns off Area Fills
/FillFlag  1   def  % 1-Outline, 2-Fill, 3-Both
/FillStyle 0   def  % 
/FillMode  1   def  %  1-opaque, 0-transparent
/MaxColor  15  def  %
/CurFont   0   def  % FontNames index
/topFlagV  0   def  % Text Justification(Vertical) Flags 
/ctrFlagV  0   def  %                   (Vertical)
/ctrFlagH  0   def  %                   (Horizonal)
/LineWidth 1   def  %
/UnitWidth 1   def  % Unit Line thickness in 1/300'ths inches
/PatSize   3   def  % Fill Pattern Scale Factor
/PatChar   48  def  % Fill Pattern Ascii Value
/UserChar  60  def  % UserFill Pattern Ascii Value
/FillChar  (?) def  % UserFill Pattern Ascii Value
/UserFillPat <0000000000000000> def %- empty fill by default

%--------------------------------------------------------------------
% Bitmap support
%--------------------------------------------------------------------
/rleFlag   1 string def
/rleStr    2 string def
/bmStr     1 string def

%--------------------------------------------------------------------
%  Color Tables and Mappings
%--------------------------------------------------------------------
/bwColors 256 array def
0 1 255 { bwColors exch 0 put } for  % zero all colors to black
bwColors 0 1 put                     % index 0 - white, all others black

/grayColors 256 array def
0 1 255 { grayColors exch 0 put } for  % zero all colors to black
grayColors  0  1.00 put 
grayColors  1  0.11 put 
grayColors  2  0.59 put 
grayColors  3  0.70 put 
grayColors  4  0.30 put 
grayColors  5  0.41 put 
grayColors  6  0.40 put 
grayColors  7  0.97 put 
grayColors  8  0.50 put 
grayColors  9  0.40 put 
grayColors  10 0.73 put 
grayColors  11 0.80 put 
grayColors  12 0.53 put 
grayColors  13 0.60 put 
grayColors  14 0.93 put 
grayColors  15 0.00 put 

/rgbColors 256 array def
0 1 255 { rgbColors exch [0 0 0] put } for  % zero all colors to black
rgbColors  0  [1 1 1]           put         % white
rgbColors  1  [0 0 1]           put         % blue
rgbColors  2  [0 1 0]           put         % green
rgbColors  3  [0 1 1]           put         % cyan
rgbColors  4  [1 0 0]           put         % red
rgbColors  5  [1 0 1]           put         % magenta
rgbColors  6  [0.67  0.33  0]   put         % brown
rgbColors  7  [0.9 0.9 0.9]     put         % darkgray
rgbColors  8  [0.75 0.75 0.75]  put         % lightgray
rgbColors  9  [0.33 0.33 1]     put         % lightblue
rgbColors  10 [0.33  1 0.33]    put         % lightgreen
rgbColors  11 [0.33 1 1]        put         % lightcyan
rgbColors  12 [1 0.33  0.33]    put         % lightred
rgbColors  13 [1 0.33  1]       put         % lightmagenta
rgbColors  14 [1 1 0.33]        put         % yellow
rgbColors  15 [0 0 0]           put         % black
        
/ColorModel  0 def
/ColorChoices [ bwColors grayColors rgbColors ] def
/ColorMap ColorChoices ColorModel get def   % default colors=b&w

%--------------------------------------------------------------------
%----Page Size, Set By Main Pgm
%--------------------------------------------------------------------
%
/PX  1950 def
/PY  1194 def

%--------------------------------------------------------------------
%----Text Scale Factors
%--------------------------------------------------------------------
/SX  1800 def   % Base size of page width/height, 
/SY  1194 def   % for scaling fonts against

/FSX  [  6  7   8  10  12  9  10 ] def  % Unit Font Scale factors
/FSY  [ -2.3  -4.6 -4.6 -4.6 -4.6 -4.6 -4.6 ] def  % Neg's to invert Y axis

%--------------------------------------------------------------------
%---- Users Font Scale Factors
%--------------------------------------------------------------------
/FSXN 1 def
/FSXD 1 def
/FSYN 1 def
/FSYD 1 def

%---------------------------------------------------------------------
%  Fonts Names Used by PGL
%  These replace the following vector fonts provided with PGL
%  If you change these you may need to change the scale factors
%  in FSX and FSY.
%---------------------------------------------------------------------
/FontNames
[
  /Helvetica          % small
  /Courier            % simplex
  /Helvetica          % duplex
  /Times-Roman        % triplex
  /Times-BoldItalic   % gothic 
  /Courier-Oblique    % script simplex
  /Helvetica-Oblique  % script duplex
] def

%---------------------------------------------------------------------
%  Fill Pattern Font based on "PS Lang Ref Man (Red Book) - Chap 5"
%---------------------------------------------------------------------
/newfont 10 dict def
newfont 
begin
 /FontType 3 def
 /FontMatrix [ .125 0 0 .125 0 0 ] def
 /FontBBox   [ 0 0 8 8 ]     def

 /Encoding 256 array def
 0 1 255 { Encoding exch /.notdef put } for
  Encoding  48 /empty     put  % '0'
  Encoding  49 /solid     put  % '1'
  Encoding  50 /lfill     put  % '2'
  Encoding  51 /slash     put  % '3'
  Encoding  52 /hslash    put  % '4'
  Encoding  53 /hbkslash  put  % '5'
  Encoding  54 /bkslash   put  % '6'
  Encoding  55 /hatch     put  % '7'
  Encoding  56 /xhatch    put  % '8'
  Encoding  57 /intleav   put  % '9'
  Encoding  58 /widedot   put  % '10'
  Encoding  59 /closedot  put  % '11'
  Encoding  60 /patfill   put  % '12'

 /CharProcs 14 dict def
 CharProcs 
 begin
  /.notdef {} bind def
  /empty    { 8 8 true [1 0 0 1 0 0] { <0000000000000000> } imagemask } bind def
  /solid    { 8 8 true [1 0 0 1 0 0] { <ffffffffffffffff> } imagemask } bind def
  /lfill    { 8 8 true [1 0 0 1 0 0] { <ffff0000ffff0000> } imagemask } bind def
  /slash    { 8 8 true [1 0 0 1 0 0] { <0102040810204080> } imagemask } bind def 
  /hslash   { 8 8 true [1 0 0 1 0 0] { <e0c183070e1c3870> } imagemask } bind def 
  /hbkslash { 8 8 true [1 0 0 1 0 0] { <f0783c1e0f87c3e1> } imagemask } bind def 
  /bkslash  { 8 8 true [1 0 0 1 0 0] { <a5d269b45a2d964b> } imagemask } bind def 
  /hatch    { 8 8 true [1 0 0 1 0 0] { <ff888888ff888888> } imagemask } bind def 
  /xhatch   { 8 8 true [1 0 0 1 0 0] { <8142241818244281> } imagemask } bind def 
  /intleav  { 8 8 true [1 0 0 1 0 0] { <cc33cc33cc33cc33> } imagemask } bind def 
  /widedot  { 8 8 true [1 0 0 1 0 0] { <8000080080000800> } imagemask } bind def 
  /closedot { 8 8 true [1 0 0 1 0 0] { <8800220088002200> } imagemask } bind def 
  /patfill  { 8 8 true [1 0 0 1 0 0] { UserFillPat } imagemask } bind def 
 end

 /BuildChar
 {
    exch
    begin  
      dup UserChar eq{                 
        8 0 setcharwidth            % userfillstyle
      }{
        8 0 0 0 8 8 setcachedevice  % standard fillstyle
      }ifelse
      Encoding exch get  
      CharProcs exch get 
    end
    exec
 }def
end 

/FillFont newfont definefont pop
%----- End Of Area Fill Font Def--------------------------------------

%---------------------------------------------------------------------
%  PGL Redefinitions
%---------------------------------------------------------------------
/gs   { gsave } bind def         
/gr   { grestore } bind def  
/m    { moveto } bind def        
/l    { lineto currentpoint stroke moveto } bind def  
/rm   { rmoveto } bind def       
/rl   { rlineto } bind def  
/cp   { closepath } bind def     
/np   { newpath } bind def   
/sg   { setgray } bind def       
/st   { stroke } bind def     
/sd   { setdash } bind def       
/ex   { exch } bind def
/in   { index } bind def         
/sw   { stringwidth } bind def 
/cxy  { currentpoint } bind def  
/slw  { setlinewidth } bind def 

%---------------------------------------------------------------------
% str strlen nchars
%---------------------------------------------------------------------
/strlen
{
    dup           % str str
    /itmp 0 def
    { /itmp itmp 1 add def pop } forall  % count characters
    itmp          % nchars
} bind def

%---------------------------------------------------------------------
% string txtCtrH   % Center Justify a string Horiz
%---------------------------------------------------------------------
/txtCtrH { dup sw pop 2 div neg dup 0 rm /ctrFlagH exch def } bind def 

%---------------------------------------------------------------------
% wx wy string atxtCtrH   % Center Justify a string Horiz
%---------------------------------------------------------------------
/atxtCtrH { 
    3 -1 roll   % wy string wx
    dup        % wy string wx wx
    4 1 roll  % wx wy string wx
    /xW ex def % wx wy string
    strlen     % wx wy string nchars
    xW mul
    /xW ex def
    dup        % str str
    sw         % str wx wy
    pop        % str wx
    xW add     % str wx+xW
    2 div neg 
    dup 
    0 rm 
    /ctrFlagH exch def 
} bind def 

%---------------------------------------------------------------------
% txtCtrHend   % Finish Center Justifying a string Horiz
%                cp shoud be at center of string
%---------------------------------------------------------------------
/txtCtrHend { ctrFlagH 0 rm /ctrFlagH 0 def } bind def 

%---------------------------------------------------------------------
% string txtRtH   % Right Justify a string Horiz
%---------------------------------------------------------------------
/txtRtH  {dup sw pop neg 0 rm} bind def 

%---------------------------------------------------------------------
% string txtRtH   % Right Justify a string Horiz
%---------------------------------------------------------------------
/atxtRtH  {
    3 -1 roll   % wy string wx
    dup        % wy string wx wx
    4 1 roll  % wx wy string wx
    /xW ex def % wx wy string
    strlen     % wx wy string nchars
    xW mul
    /xW ex def
    dup 
    sw 
    pop 
    xW add     % str wx+xW
    neg 0 rm
} bind def 

%---------------------------------------------------------------------
% txtCtrV  % Center Justify a string Vertically
%---------------------------------------------------------------------
/txtCtrV { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 2 div 0 ex gr rm pop /ctrFlagV 1 def } bind def 

%---------------------------------------------------------------------
% txtCtrVend  % Center Justify a string Vertically
%---------------------------------------------------------------------
/txtCtrVend { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
              sub neg 2 div 0 ex gr neg rm pop /ctrFlagV 0 def } bind def 

%---------------------------------------------------------------------
% string txtTopV  % Top Justify a string Vertically
%---------------------------------------------------------------------
/txtTopV { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 0 ex gr rm pop /topFlagV 1 def } bind def 

%---------------------------------------------------------------------
% txtTopVend  % Top Justify a string Vertically
%---------------------------------------------------------------------
/txtTopVend { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 0 ex gr neg rm pop /topFlagV 0 def } bind def 

%---------------------------------------------------------------------
%  ash   display text & readjusts cp for Top & Center Vertical
%        text justification
%---------------------------------------------------------------------
/ash {
   ashow
   topFlagV 1 eq {
     txtTopVend
   } if
   ctrFlagV 1 eq {
     txtCtrVend
   } if
   ctrFlagH 0 ne {
     txtCtrHend
   } if
} bind def

%---------------------------------------------------------------------
%  sh   display text & readjusts cp for Top & Center Vertical
%       text justification
%---------------------------------------------------------------------
/sh {
   show
   topFlagV 1 eq {
     txtTopVend
   } if
   ctrFlagV 1 eq {
     txtCtrVend
   } if
   ctrFlagH 0 ne {
     txtCtrHend
   } if
} bind def

%---------------------------------------------------------------------
% xs  % Extended Stroke 
%---------------------------------------------------------------------
/xs { 
  LineColor -1 ne
  { cxy st m }{ cxy np m }ifelse 
} bind def                       

%---------------------------------------------------------------------
%  color SLC   % SetLineColor  % -1 turns off line drawing
%---------------------------------------------------------------------
/SLC { dup /LineColor exch def SCC }bind def

%---------------------------------------------------------------------
%  index [r g b] SRC   % SetRgbColor
%---------------------------------------------------------------------
/SRC { 
/rgbTmp   exch def
/rgbIndex exch def
/rgbAbs   0.0  def
rgbTmp 0 get 1. 255. div mul  rgbTmp exch 0 exch put
rgbTmp 1 get 1. 255. div mul  rgbTmp exch 1 exch put
rgbTmp 2 get 1. 255. div mul  rgbTmp exch 2 exch put
rgbColors rgbIndex rgbTmp put  
rgbTmp { dup mul rgbAbs add /rgbAbs exch def } forall
grayColors rgbIndex rgbAbs sqrt put
}bind def

%---------------------------------------------------------------------
%  color SCC  % SetCurColor
%---------------------------------------------------------------------
/SCC { 
  dup -1 ne 
  { % -1 turns of line drawing
     ColorMap exch get 
     dup type /arraytype ne { 
       setgray 
     }{ 
       {} forall setrgbcolor 
     } ifelse
  }{ 
     pop  % remove -1 from stack
  }ifelse
}bind def

%---------------------------------------------------------------------
%  [] phase SLS  % SetLineStyle
%---------------------------------------------------------------------
/SLS { 
   /Phase exch def
   /LineStyle exch def 
   LineStyle Phase setdash 
}bind def

%---------------------------------------------------------------------
%  width SLW % SetLineWidth ( 1/300 inch )
%---------------------------------------------------------------------
/SLW { 
   /LineWidth exch def 
   LineWidth UnitWidth mul setlinewidth 
}bind def

%---------------------------------------------------------------------
%   color SFC % SetFillColor
%---------------------------------------------------------------------
/SFC {  /AreaColor exch def }bind def

%---------------------------------------------------------------------
%  <pattern> SUF  % SetUserFill pattern = hex no 
%---------------------------------------------------------------------
/SUF {  
    /UserFillPat exch def  % set pattern
    /FillStyle 12 def      % set flag
}bind def

%---------------------------------------------------------------------
%  style SFS  % SetFillStyle style no (0-11)
%---------------------------------------------------------------------
/SFS {  /FillStyle exch def }bind def

%---------------------------------------------------------------------
%  mode SFM  % SetFillMode   ( 1-Opaque, 2-Transparent)
%---------------------------------------------------------------------
/SFM {  /FillMode exch def }bind def

%---------------------------------------------------------------------
%  fontno SCF SetCurFont
%---------------------------------------------------------------------
/SCF {
 dup  /CurFont exch def        % save font no.
 FontNames exch get findfont 
   [ FSX CurFont get FSXN mul FSXD div PX mul SX div 0 0
     FSY CurFont get FSYN mul FSYD div PY mul SY div 0 0 ]
   makefont setfont 
 }bind def

%---------------------------------------------------------------------
%  xn xd yn yd SFX    % SetFontScale
%---------------------------------------------------------------------
/SFX {
  /FSYD exch def    /FSYN exch def  
  /FSXD exch def    /FSXN exch def
  CurFont SCF
}bind def

%---------------------------------------------------------------------
%  [ f1 f2 f3 f4 f5 f6 f7 ] SFNS   % SetFontNames
%---------------------------------------------------------------------
/SFNS {
  /FontNames exch def
}bind def

%---------------------------------------------------------------------
% [7 xsizes] [7 ysizes] SFZ  % SetFontSizes
%---------------------------------------------------------------------
/SFSZ {
  /FSY exch def
  /FSX exch def
}bind def

%---------------------------------------------------------------------
%  px py SPS  % SetPageSize
%---------------------------------------------------------------------
/SPS { /PY exch def  /PX exch def }bind def

%---------------------------------------------------------------------
%  x y color Pix  % SetPixel  1-Pixel = 1/300" pixel!
%---------------------------------------------------------------------
/Pix { 
gsave                     %
SCC moveto                % set color & position
1 linewidth [] 0 setdash  % set attributes
1 0 rlineto stroke        % do it!
grestore                  %
} bind def                       

%---------------------------------------------------------------------
%  x1 x2 y2 y2 Ln  % Line
%---------------------------------------------------------------------
/Ln { gs np 4 -2 roll m l st gr } bind def                       

%---------------------------------------------------------------------
%  x1 y1 x2 y2 flag Rect   (flag: 1-outline,2-fill,3-both)
%---------------------------------------------------------------------
/Rect { 
    /FillFlag exch def 
    gs np DrawRect FillArea OutLine gr 
} bind def

%---------------------------------------------------------------------
% x1 y1 x2 y2 x3 y3 .... flag PolyF  % PolyFill - fill current path
%---------------------------------------------------------------------
/PolyF { 
    /FillFlag exch def 
    gs closepath FillArea OutLine gr 
} bind def

%---------------------------------------------------------------------
%  x1 y1 x2 y2 ClipR % ClipRect 
%---------------------------------------------------------------------
/ClipR { 
    cxy 6 2 roll       % cx cy x1 y1 x2 y2
    gr gs
    0 setlinewidth
    np DrawRect eoclip np 
    m 
    %-- Reset graphics state
    LineWidth SLW
    LineColor SLC
    FSXN FSXD FSYN FSYD SFX
    CurFont   SCF
    LineStyle 0 setdash
} bind def

%-PRIVATE-------------------------------------------------------------
%  x1 y1 x2 y2 DrawRect 
%---------------------------------------------------------------------
/DrawRect { 
    3 in 3 in moveto 
    1 in 3 in lineto 
    3 in 1 in 4 -2 roll lineto lineto pop pop closepath % lineto
} bind def

%-PRIVATE-------------------------------------------------------------
%  xc yc sa ea rx ry DrawArc    
%---------------------------------------------------------------------
/DrawArc { 
   /savematrix matrix currentmatrix def 
   6 -2 roll translate    
   scale 
   0 0 1 5 -2 roll 
   1 -1 scale arc 1 -1 scale
   savematrix setmatrix
}bind def

%---------------------------------------------------------------------
%  xc yc sa ea rx ry Arc
%---------------------------------------------------------------------
/Arc { gs np DrawArc [] 0 sd st gr } bind def   

%---------------------------------------------------------------------
%  xc yc sa ea rx ry flag Pie   (flag: 1-Outline,2-Fill,3-Both)
%---------------------------------------------------------------------
/Pie { 
    /FillFlag exch def
    gs np 6 -2 roll 2 copy 2 copy m 8 4 roll 
    DrawArc cp FillArea OutLine gr 
} bind def   

%---------------------------------------------------------------------
%  xc yc rx ry flag ELLIPSE (flag: 1-Outline,2-Fill,3-Both)
%---------------------------------------------------------------------
/Ellipse { 
    /FillFlag exch def
     gs np 0 360 4 2 roll DrawArc FillArea OutLine gr 
}bind def   

%-PRIVATE-------------------------------------------------------------
%  OutLine
%---------------------------------------------------------------------
/OutLine  { 
  FillFlag 1 and 1 eq { 
    [] 0 sd LineColor SCC st 
  }if 
}bind def

%-PRIVATE-------------------------------------------------------------
%  FillArea  - fills current path
%---------------------------------------------------------------------
/FillArea { 
  FillFlag 2 and 2 eq { 
     gs eoclip 
     AreaColor SCC
     PatternFill
     gr
  }if 
}bind def

%-PRIVATE-------------------------------------------------------------
%  PatternFill 
%---------------------------------------------------------------------
/PatternFill {
   /psize 8 PatSize mul def
   /FillFont findfont psize scalefont setfont % set Pattern font
   FillChar 0 FillStyle PatChar add put               % fill char index
   FillMode 1 eq { gsave 1 setgray fill grestore }if  % erase background
   pathbbox                                           % llx lly  urx ury
   newpath              
   ceiling cvi /fy2 exch def 
   ceiling cvi /fx2 exch def 
   cvi 7 not and /fy1 exch def 
   cvi 7 not and /fx1 exch def
   fx2 fx1 sub psize div ceiling cvi
   /fwidth exch def
   fy1 psize fy2                          %
   {                                      %
     fx1 exch moveto                      %
     fwidth { FillChar show } repeat      %
   } for                                  %
} bind def

%---------------------------------------------------------------------
%  savePGL
%---------------------------------------------------------------------
/savePGL{
   /saveObj save def
}bind def

%---------------------------------------------------------------------
%  #copies newPage
%---------------------------------------------------------------------
/newPage{
   /#copies exch def
   showpage saveObj restore
   /#copies 1 def
}bind def

%----------------------------------------------------------------------
% x,y,npixels bmRow  % Bitmap row data, 1 row at a time...
%----------------------------------------------------------------------
/bmRow {
  /bmPixels  exch def
  /bmY       exch def
  /bmX       exch def

  currentpoint stroke moveto % save x,y stroke and moveto
  gsave                      % save graphics state
  1 setlinewidth             % linewidth
  0 setlinecap               % but cap
  [] 0 setdash               % solid style
  bmX .5 add bmY .5 add moveto % move to start of row
  %
  %  Read & decompress  a whole row of pixel color data via RLE
  %
  currentfile rleFlag readhexstring pop 
  0 get 1 eq 
  { /cumBytes 0 def
    { 
      currentfile rleStr readhexstring pop 
      dup 
      0 get 1 add exch % count rleStr
      1 get SCC        % count 
      dup              % dup count
      0 rlineto        % draw
      currentpoint stroke moveto     
      /cumBytes exch cumBytes add def 
      cumBytes bmPixels ge { exit } if 
    }loop 
  }{ 
    1 1 bmPixels
    {
      pop
      currentfile bmStr readhexstring pop 
      0 get SCC
      1 0 rlineto
      currentpoint stroke moveto     
    }for
  }ifelse 

  grestore
}bind def

%----------------------------------------------------------------------
% DPI PMAXX PMAXY PageHght TopMgn LftMgn LandFlag ColorModel initPGL
%----------------------------------------------------------------------
/initPGL {
   %---Page Constants
   /ColorModel exch def  /LandFlag exch def 
   /LeftMgn exch def     /TopMgn exch def
   /PageHeight exch def  /PY exch def       /PX exch def

   %---Select/Set Color model
   /ColorMap ColorChoices ColorModel get def   % default colors=b&w
   
   %---Save state & set output res
   savePGL 
   
   %---Set output res scaling, dpi on stack(300?)
   /dpiRes  exch def             % dots per inch
   /dphiRes dpiRes 100 div def   % pots per 1/100 inches (hinches)
   72 dpiRes div dup scale

   %---Set coordinate origin, & dir
   LandFlag 1 ne { 
      % Portrait Setup
      LeftMgn dphiRes mul PageHeight TopMgn sub dphiRes mul 
   }{
      % Landscape Setup
      90 rotate LeftMgn dphiRes mul TopMgn dphiRes mul neg 
   }ifelse
   translate 1 -1 scale

   %---Adjust font scale factor sizes, relative to 5000x5000
   0 1 6 { dup FSX exch get 4999 PX div mul FSX 3 1 roll put } for
   0 1 6 { dup FSY exch get 4999 PY div mul FSY 3 1 roll put } for

   %---Set default graphics state
   np 0 0 m
   1  SLC
   1  SLW
   [] 0 SLS
   1 1 1 1 SFX
   0 SCF
   <0000000000000000> SUF
   10 setmiterlimit
    0 setlinejoin 
    0 setlinecap
    gs  % save for clipping
    xs 0 0 PX PY ClipR
}bind def

1 setlinecap

%%EndProlog
 %%Page: 1 1
 300 3295 2543 1100 0 0 1 0 initPGL
 0 SCF
 [] 0 SLS
 1 SLW
 <ffffffffffffffff> SUF
 1 SFC
 1 SFS
 1 SFC
 1 SFM
 0 0 3295 2543 ClipR
 0 0 3295 2543 ClipR
 xs 1 SLC
 [] 0 SLS
 1 SLW
 xs 0 SLC
 1 SLW
 xs 15 SLC
 229 2311 3145 2311 Ln
 229 158 3145 158 Ln
 228 2312 3145 2312 Ln
 228 158 3145 158 Ln
 227 2313 3145 2313 Ln
 227 157 3145 157 Ln
 226 2313 3145 2313 Ln
 226 156 3145 156 Ln
 226 2314 3145 2314 Ln
 226 155 3145 155 Ln
 229 2311 229 2285 Ln
 229 158 229 185 Ln
 593 2311 593 2285 Ln
 593 158 593 185 Ln
 494 2424 584 2424 Ln
 633 2364 687 2364 Ln
 687 2364 658 2405 Ln
 658 2405 672 2405 Ln
 672 2405 683 2410 Ln
 683 2410 687 2414 Ln
 687 2414 692 2430 Ln
 692 2430 692 2440 Ln
 692 2440 687 2454 Ln
 687 2454 678 2465 Ln
 678 2465 663 2470 Ln
 663 2470 647 2470 Ln
 647 2470 633 2465 Ln
 633 2465 628 2460 Ln
 628 2460 623 2450 Ln
 958 2311 958 2285 Ln
 958 158 958 185 Ln
 859 2424 948 2424 Ln
 992 2389 992 2384 Ln
 992 2384 997 2375 Ln
 997 2375 1002 2369 Ln
 1002 2369 1012 2364 Ln
 1012 2364 1032 2364 Ln
 1032 2364 1042 2369 Ln
 1042 2369 1047 2375 Ln
 1047 2375 1052 2384 Ln
 1052 2384 1052 2394 Ln
 1052 2394 1047 2405 Ln
 1047 2405 1037 2419 Ln
 1037 2419 988 2470 Ln
 988 2470 1057 2470 Ln
 1322 2311 1322 2285 Ln
 1322 158 1322 185 Ln
 1223 2424 1313 2424 Ln
 1367 2384 1376 2379 Ln
 1376 2379 1392 2364 Ln
 1392 2364 1392 2470 Ln
 1687 2311 1687 2285 Ln
 1687 158 1687 185 Ln
 1680 2364 1665 2369 Ln
 1665 2369 1655 2384 Ln
 1655 2384 1651 2410 Ln
 1651 2410 1651 2424 Ln
 1651 2424 1655 2450 Ln
 1655 2450 1665 2465 Ln
 1665 2465 1680 2470 Ln
 1680 2470 1690 2470 Ln
 1690 2470 1705 2465 Ln
 1705 2465 1715 2450 Ln
 1715 2450 1720 2424 Ln
 1720 2424 1720 2410 Ln
 1720 2410 1715 2384 Ln
 1715 2384 1705 2369 Ln
 1705 2369 1690 2364 Ln
 1690 2364 1680 2364 Ln
 2051 2311 2051 2285 Ln
 2051 158 2051 185 Ln
 2030 2384 2039 2379 Ln
 2039 2379 2055 2364 Ln
 2055 2364 2055 2470 Ln
 2416 2311 2416 2285 Ln
 2416 158 2416 185 Ln
 2384 2389 2384 2384 Ln
 2384 2384 2389 2375 Ln
 2389 2375 2394 2369 Ln
 2394 2369 2404 2364 Ln
 2404 2364 2424 2364 Ln
 2424 2364 2434 2369 Ln
 2434 2369 2439 2375 Ln
 2439 2375 2444 2384 Ln
 2444 2384 2444 2394 Ln
 2444 2394 2439 2405 Ln
 2439 2405 2429 2419 Ln
 2429 2419 2380 2470 Ln
 2380 2470 2449 2470 Ln
 2780 2311 2780 2285 Ln
 2780 158 2780 185 Ln
 2754 2364 2808 2364 Ln
 2808 2364 2779 2405 Ln
 2779 2405 2793 2405 Ln
 2793 2405 2804 2410 Ln
 2804 2410 2808 2414 Ln
 2808 2414 2813 2430 Ln
 2813 2430 2813 2440 Ln
 2813 2440 2808 2454 Ln
 2808 2454 2799 2465 Ln
 2799 2465 2784 2470 Ln
 2784 2470 2768 2470 Ln
 2768 2470 2754 2465 Ln
 2754 2465 2749 2460 Ln
 2749 2460 2744 2450 Ln
 3145 2311 3145 2285 Ln
 3145 158 3145 185 Ln
 3158 2364 3109 2435 Ln
 3109 2435 3183 2435 Ln
 3158 2364 3158 2470 Ln
 229 2311 229 158 Ln
 3145 2311 3145 158 Ln
 228 2310 228 158 Ln
 3146 2312 3146 158 Ln
 227 2309 227 158 Ln
 3146 2313 3146 157 Ln
 226 2309 226 158 Ln
 3147 2313 3147 156 Ln
 226 2308 226 158 Ln
 3148 2314 3148 155 Ln
 229 2311 255 2311 Ln
 3145 2311 3119 2311 Ln
 148 2411 148 2321 Ln
 88 2256 93 2271 Ln
 93 2271 103 2276 Ln
 103 2276 113 2276 Ln
 113 2276 123 2271 Ln
 123 2271 128 2261 Ln
 128 2261 133 2241 Ln
 133 2241 138 2225 Ln
 138 2225 148 2216 Ln
 148 2216 158 2211 Ln
 158 2211 172 2211 Ln
 172 2211 183 2216 Ln
 183 2216 188 2220 Ln
 188 2220 193 2236 Ln
 193 2236 193 2256 Ln
 193 2256 188 2271 Ln
 188 2271 183 2276 Ln
 183 2276 172 2281 Ln
 172 2281 158 2281 Ln
 158 2281 148 2276 Ln
 148 2276 138 2266 Ln
 138 2266 133 2251 Ln
 133 2251 128 2231 Ln
 128 2231 123 2220 Ln
 123 2220 113 2216 Ln
 113 2216 103 2216 Ln
 103 2216 93 2220 Ln
 93 2220 88 2236 Ln
 88 2236 88 2256 Ln
 229 2221 255 2221 Ln
 3145 2221 3119 2221 Ln
 229 2132 255 2132 Ln
 3145 2132 3119 2132 Ln
 229 2042 255 2042 Ln
 3145 2042 3119 2042 Ln
 229 1952 255 1952 Ln
 3145 1952 3119 1952 Ln
 148 2052 148 1962 Ln
 88 1872 158 1922 Ln
 158 1922 158 1847 Ln
 88 1872 193 1872 Ln
 229 1863 255 1863 Ln
 3145 1863 3119 1863 Ln
 229 1773 255 1773 Ln
 3145 1773 3119 1773 Ln
 229 1683 255 1683 Ln
 3145 1683 3119 1683 Ln
 229 1593 255 1593 Ln
 3145 1593 3119 1593 Ln
 88 1600 93 1615 Ln
 93 1615 108 1625 Ln
 108 1625 133 1630 Ln
 133 1630 148 1630 Ln
 148 1630 172 1625 Ln
 172 1625 188 1615 Ln
 188 1615 193 1600 Ln
 193 1600 193 1590 Ln
 193 1590 188 1575 Ln
 188 1575 172 1565 Ln
 172 1565 148 1560 Ln
 148 1560 133 1560 Ln
 133 1560 108 1565 Ln
 108 1565 93 1575 Ln
 93 1575 88 1590 Ln
 88 1590 88 1600 Ln
 229 1504 255 1504 Ln
 3145 1504 3119 1504 Ln
 229 1414 255 1414 Ln
 3145 1414 3119 1414 Ln
 229 1324 255 1324 Ln
 3145 1324 3119 1324 Ln
 88 1351 88 1296 Ln
 88 1296 128 1326 Ln
 128 1326 128 1311 Ln
 128 1311 133 1301 Ln
 133 1301 138 1296 Ln
 138 1296 153 1291 Ln
 153 1291 163 1291 Ln
 163 1291 177 1296 Ln
 177 1296 188 1306 Ln
 188 1306 193 1321 Ln
 193 1321 193 1337 Ln
 193 1337 188 1351 Ln
 188 1351 183 1356 Ln
 183 1356 172 1361 Ln
 229 1235 255 1235 Ln
 3145 1235 3119 1235 Ln
 229 1145 255 1145 Ln
 3145 1145 3119 1145 Ln
 229 1055 255 1055 Ln
 3145 1055 3119 1055 Ln
 103 1027 93 1032 Ln
 93 1032 88 1047 Ln
 88 1047 88 1057 Ln
 88 1057 93 1072 Ln
 93 1072 108 1082 Ln
 108 1082 133 1087 Ln
 133 1087 158 1087 Ln
 158 1087 177 1082 Ln
 177 1082 188 1072 Ln
 188 1072 193 1057 Ln
 193 1057 193 1052 Ln
 193 1052 188 1037 Ln
 188 1037 177 1027 Ln
 177 1027 163 1022 Ln
 163 1022 158 1022 Ln
 158 1022 143 1027 Ln
 143 1027 133 1037 Ln
 133 1037 128 1052 Ln
 128 1052 128 1057 Ln
 128 1057 133 1072 Ln
 133 1072 143 1082 Ln
 143 1082 158 1087 Ln
 229 966 255 966 Ln
 3145 966 3119 966 Ln
 229 876 255 876 Ln
 3145 876 3119 876 Ln
 229 786 255 786 Ln
 3145 786 3119 786 Ln
 123 758 138 763 Ln
 138 763 148 773 Ln
 148 773 153 788 Ln
 153 788 153 793 Ln
 153 793 148 808 Ln
 148 808 138 818 Ln
 138 818 123 823 Ln
 123 823 118 823 Ln
 118 823 103 818 Ln
 103 818 93 808 Ln
 93 808 88 793 Ln
 88 793 88 788 Ln
 88 788 93 773 Ln
 93 773 103 763 Ln
 103 763 123 758 Ln
 123 758 148 758 Ln
 148 758 172 763 Ln
 172 763 188 773 Ln
 188 773 193 788 Ln
 193 788 193 799 Ln
 193 799 188 813 Ln
 188 813 177 818 Ln
 229 697 255 697 Ln
 3145 697 3119 697 Ln
 229 607 255 607 Ln
 3145 607 3119 607 Ln
 229 517 255 517 Ln
 3145 517 3119 517 Ln
 108 592 103 582 Ln
 103 582 88 567 Ln
 88 567 193 567 Ln
 113 497 108 497 Ln
 108 497 98 492 Ln
 98 492 93 487 Ln
 93 487 88 477 Ln
 88 477 88 457 Ln
 88 457 93 446 Ln
 93 446 98 441 Ln
 98 441 108 437 Ln
 108 437 118 437 Ln
 118 437 128 441 Ln
 128 441 143 452 Ln
 143 452 193 502 Ln
 193 502 193 432 Ln
 229 428 255 428 Ln
 3145 428 3119 428 Ln
 229 338 255 338 Ln
 3145 338 3119 338 Ln
 229 248 255 248 Ln
 3145 248 3119 248 Ln
 229 158 255 158 Ln
 3145 158 3119 158 Ln
 108 233 103 224 Ln
 103 224 88 208 Ln
 88 208 193 208 Ln
 103 78 93 83 Ln
 93 83 88 98 Ln
 88 98 88 108 Ln
 88 108 93 123 Ln
 93 123 108 133 Ln
 108 133 133 138 Ln
 133 138 158 138 Ln
 158 138 177 133 Ln
 177 133 188 123 Ln
 188 123 193 108 Ln
 193 108 193 103 Ln
 193 103 188 88 Ln
 188 88 177 78 Ln
 177 78 163 73 Ln
 163 73 158 73 Ln
 158 73 143 78 Ln
 143 78 133 88 Ln
 133 88 128 103 Ln
 128 103 128 108 Ln
 128 108 133 123 Ln
 133 123 143 133 Ln
 143 133 158 138 Ln
 xs 10 SLC
 1 SLW
 229 158 230 158 Ln
 229 158 259 216 Ln
 259 216 288 272 Ln
 288 272 317 327 Ln
 317 327 346 381 Ln
 346 381 376 434 Ln
 376 434 406 485 Ln
 406 485 435 536 Ln
 435 536 465 585 Ln
 465 585 494 633 Ln
 494 633 523 679 Ln
 523 679 553 725 Ln
 553 725 582 770 Ln
 582 770 612 813 Ln
 612 813 641 856 Ln
 641 856 671 896 Ln
 671 896 700 936 Ln
 700 936 729 975 Ln
 729 975 759 1012 Ln
 759 1012 789 1049 Ln
 789 1049 818 1084 Ln
 818 1084 848 1118 Ln
 848 1118 877 1151 Ln
 877 1151 906 1183 Ln
 906 1183 936 1213 Ln
 936 1213 965 1242 Ln
 965 1242 995 1270 Ln
 995 1270 1024 1297 Ln
 1024 1297 1054 1323 Ln
 1054 1323 1083 1347 Ln
 1083 1347 1112 1371 Ln
 1112 1371 1142 1393 Ln
 1142 1393 1171 1414 Ln
 1171 1414 1201 1434 Ln
 1201 1434 1231 1452 Ln
 1231 1452 1260 1470 Ln
 1260 1470 1289 1487 Ln
 1289 1487 1318 1502 Ln
 1318 1502 1348 1516 Ln
 1348 1516 1378 1529 Ln
 1378 1529 1407 1540 Ln
 1407 1540 1437 1551 Ln
 1437 1551 1466 1561 Ln
 1466 1561 1495 1569 Ln
 1495 1569 1525 1576 Ln
 1525 1576 1554 1581 Ln
 1554 1581 1584 1586 Ln
 1584 1586 1613 1590 Ln
 1613 1590 1643 1592 Ln
 1643 1592 1672 1593 Ln
 1672 1593 1701 1593 Ln
 1701 1593 1731 1592 Ln
 1731 1592 1761 1590 Ln
 1761 1590 1790 1586 Ln
 1790 1586 1820 1581 Ln
 1820 1581 1849 1576 Ln
 1849 1576 1878 1569 Ln
 1878 1569 1908 1561 Ln
 1908 1561 1937 1551 Ln
 1937 1551 1967 1540 Ln
 1967 1540 1996 1529 Ln
 1996 1529 2026 1516 Ln
 2026 1516 2055 1502 Ln
 2055 1502 2084 1487 Ln
 2084 1487 2114 1470 Ln
 2114 1470 2143 1452 Ln
 2143 1452 2173 1434 Ln
 2173 1434 2203 1414 Ln
 2203 1414 2232 1393 Ln
 2232 1393 2261 1371 Ln
 2261 1371 2290 1347 Ln
 2290 1347 2320 1323 Ln
 2320 1323 2350 1297 Ln
 2350 1297 2379 1270 Ln
 2379 1270 2409 1242 Ln
 2409 1242 2438 1213 Ln
 2438 1213 2467 1183 Ln
 2467 1183 2497 1151 Ln
 2497 1151 2526 1118 Ln
 2526 1118 2556 1084 Ln
 2556 1084 2585 1049 Ln
 2585 1049 2615 1012 Ln
 2615 1012 2644 975 Ln
 2644 975 2673 936 Ln
 2673 936 2703 896 Ln
 2703 896 2733 856 Ln
 2733 856 2762 813 Ln
 2762 813 2792 770 Ln
 2792 770 2821 725 Ln
 2821 725 2850 679 Ln
 2850 679 2880 633 Ln
 2880 633 2909 585 Ln
 2909 585 2939 536 Ln
 2939 536 2968 485 Ln
 2968 485 2998 434 Ln
 2998 434 3027 381 Ln
 3027 381 3056 327 Ln
 3056 327 3086 272 Ln
 3086 272 3115 216 Ln
 3115 216 3145 158 Ln
 xs 11 SLC
 229 2311 230 2311 Ln
 229 2311 259 2296 Ln
 259 2296 288 2282 Ln
 288 2282 294 2278 Ln
 358 2247 360 2247 Ln
 358 2247 406 2224 Ln
 406 2224 423 2216 Ln
 487 2183 489 2183 Ln
 487 2183 523 2166 Ln
 523 2166 552 2151 Ln
 617 2119 618 2119 Ln
 617 2119 671 2093 Ln
 671 2093 681 2088 Ln
 745 2057 747 2057 Ln
 745 2057 789 2035 Ln
 789 2035 811 2024 Ln
 875 1992 877 1992 Ln
 875 1992 906 1977 Ln
 906 1977 936 1963 Ln
 936 1963 939 1961 Ln
 1004 1929 1005 1929 Ln
 1004 1929 1054 1905 Ln
 1054 1905 1069 1897 Ln
 1133 1866 1135 1866 Ln
 1133 1866 1171 1847 Ln
 1171 1847 1198 1833 Ln
 1262 1802 1264 1802 Ln
 1262 1802 1318 1774 Ln
 1318 1774 1327 1770 Ln
 1392 1739 1393 1739 Ln
 1392 1739 1437 1717 Ln
 1437 1717 1456 1706 Ln
 1520 1675 1522 1675 Ln
 1520 1675 1554 1659 Ln
 1554 1659 1584 1644 Ln
 1584 1644 1587 1642 Ln
 1650 1611 1651 1611 Ln
 1650 1611 1701 1586 Ln
 1701 1586 1714 1580 Ln
 1779 1548 1780 1548 Ln
 1779 1548 1820 1528 Ln
 1820 1528 1844 1515 Ln
 1908 1485 1910 1485 Ln
 1908 1485 1937 1470 Ln
 1937 1470 1967 1456 Ln
 1967 1456 1972 1452 Ln
 2037 1421 2038 1421 Ln
 2037 1421 2084 1398 Ln
 2084 1398 2102 1389 Ln
 2166 1357 2168 1357 Ln
 2166 1357 2203 1340 Ln
 2203 1340 2231 1325 Ln
 2295 1294 2297 1294 Ln
 2295 1294 2350 1267 Ln
 2350 1267 2360 1262 Ln
 2425 1230 2426 1230 Ln
 2425 1230 2467 1209 Ln
 2467 1209 2489 1198 Ln
 2553 1167 2555 1167 Ln
 2553 1167 2585 1152 Ln
 2585 1152 2615 1137 Ln
 2615 1137 2619 1134 Ln
 2683 1103 2685 1103 Ln
 2683 1103 2733 1079 Ln
 2733 1079 2747 1071 Ln
 2812 1040 2813 1040 Ln
 2812 1040 2850 1021 Ln
 2850 1021 2877 1007 Ln
 2941 975 2943 975 Ln
 2941 975 2998 949 Ln
 2998 949 3006 944 Ln
 3070 913 3072 913 Ln
 3070 913 3115 891 Ln
 3115 891 3135 880 Ln
 xs 15 SLC
 1 newPage
 %%Trailer
 %!END
