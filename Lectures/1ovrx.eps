%!PS-Adobe-2.0 EPSF-1.2
%%Creator: PGL v-2.00 by AnSoft, Inc.
%%Pages:   1
%%BoundingBox: 0 0 611 791
%%EndComments
%---------------------------------------------------------------------
%
%------------------ Copyright (C) 1991 AnSoft,Inc.--------------------
%
%---------------------------------------------------------------------
% Temporary variables used
%---------------------------------------------------------------------
%  PROC          VARIABLES
%  PatternFill : fx1,fx2,fy1,fy2,fwidth
%
%---------------------------------------------------------------------
%  PGL Global Data
%---------------------------------------------------------------------
/LineColor 1   def  % -1 turns off Line & Outline drawing
/LineStyle []  def  % 
/Phase     0   def  %
/AreaColor 1   def  % -1 turns off Area Fills
/FillFlag  1   def  % 1-Outline, 2-Fill, 3-Both
/FillStyle 0   def  % 
/FillMode  1   def  %  1-opaque, 0-transparent
/MaxColor  15  def  %
/CurFont   0   def  % FontNames index
/topFlagV  0   def  % Text Justification(Vertical) Flags 
/ctrFlagV  0   def  %                   (Vertical)
/ctrFlagH  0   def  %                   (Horizonal)
/LineWidth 1   def  %
/UnitWidth 1   def  % Unit Line thickness in 1/300'ths inches
/PatSize   3   def  % Fill Pattern Scale Factor
/PatChar   48  def  % Fill Pattern Ascii Value
/UserChar  60  def  % UserFill Pattern Ascii Value
/FillChar  (?) def  % UserFill Pattern Ascii Value
/UserFillPat <0000000000000000> def %- empty fill by default

%--------------------------------------------------------------------
% Bitmap support
%--------------------------------------------------------------------
/rleFlag   1 string def
/rleStr    2 string def
/bmStr     1 string def

%--------------------------------------------------------------------
%  Color Tables and Mappings
%--------------------------------------------------------------------
/bwColors 256 array def
0 1 255 { bwColors exch 0 put } for  % zero all colors to black
bwColors 0 1 put                     % index 0 - white, all others black

/grayColors 256 array def
0 1 255 { grayColors exch 0 put } for  % zero all colors to black
grayColors  0  1.00 put 
grayColors  1  0.11 put 
grayColors  2  0.59 put 
grayColors  3  0.70 put 
grayColors  4  0.30 put 
grayColors  5  0.41 put 
grayColors  6  0.40 put 
grayColors  7  0.97 put 
grayColors  8  0.50 put 
grayColors  9  0.40 put 
grayColors  10 0.73 put 
grayColors  11 0.80 put 
grayColors  12 0.53 put 
grayColors  13 0.60 put 
grayColors  14 0.93 put 
grayColors  15 0.00 put 

/rgbColors 256 array def
0 1 255 { rgbColors exch [0 0 0] put } for  % zero all colors to black
rgbColors  0  [1 1 1]           put         % white
rgbColors  1  [0 0 1]           put         % blue
rgbColors  2  [0 1 0]           put         % green
rgbColors  3  [0 1 1]           put         % cyan
rgbColors  4  [1 0 0]           put         % red
rgbColors  5  [1 0 1]           put         % magenta
rgbColors  6  [0.67  0.33  0]   put         % brown
rgbColors  7  [0.9 0.9 0.9]     put         % darkgray
rgbColors  8  [0.75 0.75 0.75]  put         % lightgray
rgbColors  9  [0.33 0.33 1]     put         % lightblue
rgbColors  10 [0.33  1 0.33]    put         % lightgreen
rgbColors  11 [0.33 1 1]        put         % lightcyan
rgbColors  12 [1 0.33  0.33]    put         % lightred
rgbColors  13 [1 0.33  1]       put         % lightmagenta
rgbColors  14 [1 1 0.33]        put         % yellow
rgbColors  15 [0 0 0]           put         % black
        
/ColorModel  0 def
/ColorChoices [ bwColors grayColors rgbColors ] def
/ColorMap ColorChoices ColorModel get def   % default colors=b&w

%--------------------------------------------------------------------
%----Page Size, Set By Main Pgm
%--------------------------------------------------------------------
%
/PX  1950 def
/PY  1194 def

%--------------------------------------------------------------------
%----Text Scale Factors
%--------------------------------------------------------------------
/SX  1800 def   % Base size of page width/height, 
/SY  1194 def   % for scaling fonts against

/FSX  [  6  7   8  10  12  9  10 ] def  % Unit Font Scale factors
/FSY  [ -2.3  -4.6 -4.6 -4.6 -4.6 -4.6 -4.6 ] def  % Neg's to invert Y axis

%--------------------------------------------------------------------
%---- Users Font Scale Factors
%--------------------------------------------------------------------
/FSXN 1 def
/FSXD 1 def
/FSYN 1 def
/FSYD 1 def

%---------------------------------------------------------------------
%  Fonts Names Used by PGL
%  These replace the following vector fonts provided with PGL
%  If you change these you may need to change the scale factors
%  in FSX and FSY.
%---------------------------------------------------------------------
/FontNames
[
  /Helvetica          % small
  /Courier            % simplex
  /Helvetica          % duplex
  /Times-Roman        % triplex
  /Times-BoldItalic   % gothic 
  /Courier-Oblique    % script simplex
  /Helvetica-Oblique  % script duplex
] def

%---------------------------------------------------------------------
%  Fill Pattern Font based on "PS Lang Ref Man (Red Book) - Chap 5"
%---------------------------------------------------------------------
/newfont 10 dict def
newfont 
begin
 /FontType 3 def
 /FontMatrix [ .125 0 0 .125 0 0 ] def
 /FontBBox   [ 0 0 8 8 ]     def

 /Encoding 256 array def
 0 1 255 { Encoding exch /.notdef put } for
  Encoding  48 /empty     put  % '0'
  Encoding  49 /solid     put  % '1'
  Encoding  50 /lfill     put  % '2'
  Encoding  51 /slash     put  % '3'
  Encoding  52 /hslash    put  % '4'
  Encoding  53 /hbkslash  put  % '5'
  Encoding  54 /bkslash   put  % '6'
  Encoding  55 /hatch     put  % '7'
  Encoding  56 /xhatch    put  % '8'
  Encoding  57 /intleav   put  % '9'
  Encoding  58 /widedot   put  % '10'
  Encoding  59 /closedot  put  % '11'
  Encoding  60 /patfill   put  % '12'

 /CharProcs 14 dict def
 CharProcs 
 begin
  /.notdef {} bind def
  /empty    { 8 8 true [1 0 0 1 0 0] { <0000000000000000> } imagemask } bind def
  /solid    { 8 8 true [1 0 0 1 0 0] { <ffffffffffffffff> } imagemask } bind def
  /lfill    { 8 8 true [1 0 0 1 0 0] { <ffff0000ffff0000> } imagemask } bind def
  /slash    { 8 8 true [1 0 0 1 0 0] { <0102040810204080> } imagemask } bind def 
  /hslash   { 8 8 true [1 0 0 1 0 0] { <e0c183070e1c3870> } imagemask } bind def 
  /hbkslash { 8 8 true [1 0 0 1 0 0] { <f0783c1e0f87c3e1> } imagemask } bind def 
  /bkslash  { 8 8 true [1 0 0 1 0 0] { <a5d269b45a2d964b> } imagemask } bind def 
  /hatch    { 8 8 true [1 0 0 1 0 0] { <ff888888ff888888> } imagemask } bind def 
  /xhatch   { 8 8 true [1 0 0 1 0 0] { <8142241818244281> } imagemask } bind def 
  /intleav  { 8 8 true [1 0 0 1 0 0] { <cc33cc33cc33cc33> } imagemask } bind def 
  /widedot  { 8 8 true [1 0 0 1 0 0] { <8000080080000800> } imagemask } bind def 
  /closedot { 8 8 true [1 0 0 1 0 0] { <8800220088002200> } imagemask } bind def 
  /patfill  { 8 8 true [1 0 0 1 0 0] { UserFillPat } imagemask } bind def 
 end

 /BuildChar
 {
    exch
    begin  
      dup UserChar eq{                 
        8 0 setcharwidth            % userfillstyle
      }{
        8 0 0 0 8 8 setcachedevice  % standard fillstyle
      }ifelse
      Encoding exch get  
      CharProcs exch get 
    end
    exec
 }def
end 

/FillFont newfont definefont pop
%----- End Of Area Fill Font Def--------------------------------------

%---------------------------------------------------------------------
%  PGL Redefinitions
%---------------------------------------------------------------------
/gs   { gsave } bind def         
/gr   { grestore } bind def  
/m    { moveto } bind def        
/l    { lineto currentpoint stroke moveto } bind def  
/rm   { rmoveto } bind def       
/rl   { rlineto } bind def  
/cp   { closepath } bind def     
/np   { newpath } bind def   
/sg   { setgray } bind def       
/st   { stroke } bind def     
/sd   { setdash } bind def       
/ex   { exch } bind def
/in   { index } bind def         
/sw   { stringwidth } bind def 
/cxy  { currentpoint } bind def  
/slw  { setlinewidth } bind def 

%---------------------------------------------------------------------
% str strlen nchars
%---------------------------------------------------------------------
/strlen
{
    dup           % str str
    /itmp 0 def
    { /itmp itmp 1 add def pop } forall  % count characters
    itmp          % nchars
} bind def

%---------------------------------------------------------------------
% string txtCtrH   % Center Justify a string Horiz
%---------------------------------------------------------------------
/txtCtrH { dup sw pop 2 div neg dup 0 rm /ctrFlagH exch def } bind def 

%---------------------------------------------------------------------
% wx wy string atxtCtrH   % Center Justify a string Horiz
%---------------------------------------------------------------------
/atxtCtrH { 
    3 -1 roll   % wy string wx
    dup        % wy string wx wx
    4 1 roll  % wx wy string wx
    /xW ex def % wx wy string
    strlen     % wx wy string nchars
    xW mul
    /xW ex def
    dup        % str str
    sw         % str wx wy
    pop        % str wx
    xW add     % str wx+xW
    2 div neg 
    dup 
    0 rm 
    /ctrFlagH exch def 
} bind def 

%---------------------------------------------------------------------
% txtCtrHend   % Finish Center Justifying a string Horiz
%                cp shoud be at center of string
%---------------------------------------------------------------------
/txtCtrHend { ctrFlagH 0 rm /ctrFlagH 0 def } bind def 

%---------------------------------------------------------------------
% string txtRtH   % Right Justify a string Horiz
%---------------------------------------------------------------------
/txtRtH  {dup sw pop neg 0 rm} bind def 

%---------------------------------------------------------------------
% string txtRtH   % Right Justify a string Horiz
%---------------------------------------------------------------------
/atxtRtH  {
    3 -1 roll   % wy string wx
    dup        % wy string wx wx
    4 1 roll  % wx wy string wx
    /xW ex def % wx wy string
    strlen     % wx wy string nchars
    xW mul
    /xW ex def
    dup 
    sw 
    pop 
    xW add     % str wx+xW
    neg 0 rm
} bind def 

%---------------------------------------------------------------------
% txtCtrV  % Center Justify a string Vertically
%---------------------------------------------------------------------
/txtCtrV { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 2 div 0 ex gr rm pop /ctrFlagV 1 def } bind def 

%---------------------------------------------------------------------
% txtCtrVend  % Center Justify a string Vertically
%---------------------------------------------------------------------
/txtCtrVend { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
              sub neg 2 div 0 ex gr neg rm pop /ctrFlagV 0 def } bind def 

%---------------------------------------------------------------------
% string txtTopV  % Top Justify a string Vertically
%---------------------------------------------------------------------
/txtTopV { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 0 ex gr rm pop /topFlagV 1 def } bind def 

%---------------------------------------------------------------------
% txtTopVend  % Top Justify a string Vertically
%---------------------------------------------------------------------
/txtTopVend { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 0 ex gr neg rm pop /topFlagV 0 def } bind def 

%---------------------------------------------------------------------
%  ash   display text & readjusts cp for Top & Center Vertical
%        text justification
%---------------------------------------------------------------------
/ash {
   ashow
   topFlagV 1 eq {
     txtTopVend
   } if
   ctrFlagV 1 eq {
     txtCtrVend
   } if
   ctrFlagH 0 ne {
     txtCtrHend
   } if
} bind def

%---------------------------------------------------------------------
%  sh   display text & readjusts cp for Top & Center Vertical
%       text justification
%---------------------------------------------------------------------
/sh {
   show
   topFlagV 1 eq {
     txtTopVend
   } if
   ctrFlagV 1 eq {
     txtCtrVend
   } if
   ctrFlagH 0 ne {
     txtCtrHend
   } if
} bind def

%---------------------------------------------------------------------
% xs  % Extended Stroke 
%---------------------------------------------------------------------
/xs { 
  LineColor -1 ne
  { cxy st m }{ cxy np m }ifelse 
} bind def                       

%---------------------------------------------------------------------
%  color SLC   % SetLineColor  % -1 turns off line drawing
%---------------------------------------------------------------------
/SLC { dup /LineColor exch def SCC }bind def

%---------------------------------------------------------------------
%  index [r g b] SRC   % SetRgbColor
%---------------------------------------------------------------------
/SRC { 
/rgbTmp   exch def
/rgbIndex exch def
/rgbAbs   0.0  def
rgbTmp 0 get 1. 255. div mul  rgbTmp exch 0 exch put
rgbTmp 1 get 1. 255. div mul  rgbTmp exch 1 exch put
rgbTmp 2 get 1. 255. div mul  rgbTmp exch 2 exch put
rgbColors rgbIndex rgbTmp put  
rgbTmp { dup mul rgbAbs add /rgbAbs exch def } forall
grayColors rgbIndex rgbAbs sqrt put
}bind def

%---------------------------------------------------------------------
%  color SCC  % SetCurColor
%---------------------------------------------------------------------
/SCC { 
  dup -1 ne 
  { % -1 turns of line drawing
     ColorMap exch get 
     dup type /arraytype ne { 
       setgray 
     }{ 
       {} forall setrgbcolor 
     } ifelse
  }{ 
     pop  % remove -1 from stack
  }ifelse
}bind def

%---------------------------------------------------------------------
%  [] phase SLS  % SetLineStyle
%---------------------------------------------------------------------
/SLS { 
   /Phase exch def
   /LineStyle exch def 
   LineStyle Phase setdash 
}bind def

%---------------------------------------------------------------------
%  width SLW % SetLineWidth ( 1/300 inch )
%---------------------------------------------------------------------
/SLW { 
   /LineWidth exch def 
   LineWidth UnitWidth mul setlinewidth 
}bind def

%---------------------------------------------------------------------
%   color SFC % SetFillColor
%---------------------------------------------------------------------
/SFC {  /AreaColor exch def }bind def

%---------------------------------------------------------------------
%  <pattern> SUF  % SetUserFill pattern = hex no 
%---------------------------------------------------------------------
/SUF {  
    /UserFillPat exch def  % set pattern
    /FillStyle 12 def      % set flag
}bind def

%---------------------------------------------------------------------
%  style SFS  % SetFillStyle style no (0-11)
%---------------------------------------------------------------------
/SFS {  /FillStyle exch def }bind def

%---------------------------------------------------------------------
%  mode SFM  % SetFillMode   ( 1-Opaque, 2-Transparent)
%---------------------------------------------------------------------
/SFM {  /FillMode exch def }bind def

%---------------------------------------------------------------------
%  fontno SCF SetCurFont
%---------------------------------------------------------------------
/SCF {
 dup  /CurFont exch def        % save font no.
 FontNames exch get findfont 
   [ FSX CurFont get FSXN mul FSXD div PX mul SX div 0 0
     FSY CurFont get FSYN mul FSYD div PY mul SY div 0 0 ]
   makefont setfont 
 }bind def

%---------------------------------------------------------------------
%  xn xd yn yd SFX    % SetFontScale
%---------------------------------------------------------------------
/SFX {
  /FSYD exch def    /FSYN exch def  
  /FSXD exch def    /FSXN exch def
  CurFont SCF
}bind def

%---------------------------------------------------------------------
%  [ f1 f2 f3 f4 f5 f6 f7 ] SFNS   % SetFontNames
%---------------------------------------------------------------------
/SFNS {
  /FontNames exch def
}bind def

%---------------------------------------------------------------------
% [7 xsizes] [7 ysizes] SFZ  % SetFontSizes
%---------------------------------------------------------------------
/SFSZ {
  /FSY exch def
  /FSX exch def
}bind def

%---------------------------------------------------------------------
%  px py SPS  % SetPageSize
%---------------------------------------------------------------------
/SPS { /PY exch def  /PX exch def }bind def

%---------------------------------------------------------------------
%  x y color Pix  % SetPixel  1-Pixel = 1/300" pixel!
%---------------------------------------------------------------------
/Pix { 
gsave                     %
SCC moveto                % set color & position
1 linewidth [] 0 setdash  % set attributes
1 0 rlineto stroke        % do it!
grestore                  %
} bind def                       

%---------------------------------------------------------------------
%  x1 x2 y2 y2 Ln  % Line
%---------------------------------------------------------------------
/Ln { gs np 4 -2 roll m l st gr } bind def                       

%---------------------------------------------------------------------
%  x1 y1 x2 y2 flag Rect   (flag: 1-outline,2-fill,3-both)
%---------------------------------------------------------------------
/Rect { 
    /FillFlag exch def 
    gs np DrawRect FillArea OutLine gr 
} bind def

%---------------------------------------------------------------------
% x1 y1 x2 y2 x3 y3 .... flag PolyF  % PolyFill - fill current path
%---------------------------------------------------------------------
/PolyF { 
    /FillFlag exch def 
    gs closepath FillArea OutLine gr 
} bind def

%---------------------------------------------------------------------
%  x1 y1 x2 y2 ClipR % ClipRect 
%---------------------------------------------------------------------
/ClipR { 
    cxy 6 2 roll       % cx cy x1 y1 x2 y2
    gr gs
    0 setlinewidth
    np DrawRect eoclip np 
    m 
    %-- Reset graphics state
    LineWidth SLW
    LineColor SLC
    FSXN FSXD FSYN FSYD SFX
    CurFont   SCF
    LineStyle 0 setdash
} bind def

%-PRIVATE-------------------------------------------------------------
%  x1 y1 x2 y2 DrawRect 
%---------------------------------------------------------------------
/DrawRect { 
    3 in 3 in moveto 
    1 in 3 in lineto 
    3 in 1 in 4 -2 roll lineto lineto pop pop closepath % lineto
} bind def

%-PRIVATE-------------------------------------------------------------
%  xc yc sa ea rx ry DrawArc    
%---------------------------------------------------------------------
/DrawArc { 
   /savematrix matrix currentmatrix def 
   6 -2 roll translate    
   scale 
   0 0 1 5 -2 roll 
   1 -1 scale arc 1 -1 scale
   savematrix setmatrix
}bind def

%---------------------------------------------------------------------
%  xc yc sa ea rx ry Arc
%---------------------------------------------------------------------
/Arc { gs np DrawArc [] 0 sd st gr } bind def   

%---------------------------------------------------------------------
%  xc yc sa ea rx ry flag Pie   (flag: 1-Outline,2-Fill,3-Both)
%---------------------------------------------------------------------
/Pie { 
    /FillFlag exch def
    gs np 6 -2 roll 2 copy 2 copy m 8 4 roll 
    DrawArc cp FillArea OutLine gr 
} bind def   

%---------------------------------------------------------------------
%  xc yc rx ry flag ELLIPSE (flag: 1-Outline,2-Fill,3-Both)
%---------------------------------------------------------------------
/Ellipse { 
    /FillFlag exch def
     gs np 0 360 4 2 roll DrawArc FillArea OutLine gr 
}bind def   

%-PRIVATE-------------------------------------------------------------
%  OutLine
%---------------------------------------------------------------------
/OutLine  { 
  FillFlag 1 and 1 eq { 
    [] 0 sd LineColor SCC st 
  }if 
}bind def

%-PRIVATE-------------------------------------------------------------
%  FillArea  - fills current path
%---------------------------------------------------------------------
/FillArea { 
  FillFlag 2 and 2 eq { 
     gs eoclip 
     AreaColor SCC
     PatternFill
     gr
  }if 
}bind def

%-PRIVATE-------------------------------------------------------------
%  PatternFill 
%---------------------------------------------------------------------
/PatternFill {
   /psize 8 PatSize mul def
   /FillFont findfont psize scalefont setfont % set Pattern font
   FillChar 0 FillStyle PatChar add put               % fill char index
   FillMode 1 eq { gsave 1 setgray fill grestore }if  % erase background
   pathbbox                                           % llx lly  urx ury
   newpath              
   ceiling cvi /fy2 exch def 
   ceiling cvi /fx2 exch def 
   cvi 7 not and /fy1 exch def 
   cvi 7 not and /fx1 exch def
   fx2 fx1 sub psize div ceiling cvi
   /fwidth exch def
   fy1 psize fy2                          %
   {                                      %
     fx1 exch moveto                      %
     fwidth { FillChar show } repeat      %
   } for                                  %
} bind def

%---------------------------------------------------------------------
%  savePGL
%---------------------------------------------------------------------
/savePGL{
   /saveObj save def
}bind def

%---------------------------------------------------------------------
%  #copies newPage
%---------------------------------------------------------------------
/newPage{
   /#copies exch def
   showpage saveObj restore
   /#copies 1 def
}bind def

%----------------------------------------------------------------------
% x,y,npixels bmRow  % Bitmap row data, 1 row at a time...
%----------------------------------------------------------------------
/bmRow {
  /bmPixels  exch def
  /bmY       exch def
  /bmX       exch def

  currentpoint stroke moveto % save x,y stroke and moveto
  gsave                      % save graphics state
  1 setlinewidth             % linewidth
  0 setlinecap               % but cap
  [] 0 setdash               % solid style
  bmX .5 add bmY .5 add moveto % move to start of row
  %
  %  Read & decompress  a whole row of pixel color data via RLE
  %
  currentfile rleFlag readhexstring pop 
  0 get 1 eq 
  { /cumBytes 0 def
    { 
      currentfile rleStr readhexstring pop 
      dup 
      0 get 1 add exch % count rleStr
      1 get SCC        % count 
      dup              % dup count
      0 rlineto        % draw
      currentpoint stroke moveto     
      /cumBytes exch cumBytes add def 
      cumBytes bmPixels ge { exit } if 
    }loop 
  }{ 
    1 1 bmPixels
    {
      pop
      currentfile bmStr readhexstring pop 
      0 get SCC
      1 0 rlineto
      currentpoint stroke moveto     
    }for
  }ifelse 

  grestore
}bind def

%----------------------------------------------------------------------
% DPI PMAXX PMAXY PageHght TopMgn LftMgn LandFlag ColorModel initPGL
%----------------------------------------------------------------------
/initPGL {
   %---Page Constants
   /ColorModel exch def  /LandFlag exch def 
   /LeftMgn exch def     /TopMgn exch def
   /PageHeight exch def  /PY exch def       /PX exch def

   %---Select/Set Color model
   /ColorMap ColorChoices ColorModel get def   % default colors=b&w
   
   %---Save state & set output res
   savePGL 
   
   %---Set output res scaling, dpi on stack(300?)
   /dpiRes  exch def             % dots per inch
   /dphiRes dpiRes 100 div def   % pots per 1/100 inches (hinches)
   72 dpiRes div dup scale

   %---Set coordinate origin, & dir
   LandFlag 1 ne { 
      % Portrait Setup
      LeftMgn dphiRes mul PageHeight TopMgn sub dphiRes mul 
   }{
      % Landscape Setup
      90 rotate LeftMgn dphiRes mul TopMgn dphiRes mul neg 
   }ifelse
   translate 1 -1 scale

   %---Adjust font scale factor sizes, relative to 5000x5000
   0 1 6 { dup FSX exch get 4999 PX div mul FSX 3 1 roll put } for
   0 1 6 { dup FSY exch get 4999 PY div mul FSY 3 1 roll put } for

   %---Set default graphics state
   np 0 0 m
   1  SLC
   1  SLW
   [] 0 SLS
   1 1 1 1 SFX
   0 SCF
   <0000000000000000> SUF
   10 setmiterlimit
    0 setlinejoin 
    0 setlinecap
    gs  % save for clipping
    xs 0 0 PX PY ClipR
}bind def

1 setlinecap

%%EndProlog
 %%Page: 1 1
 300 3295 2543 1100 0 0 1 0 initPGL
 0 SCF
 [] 0 SLS
 1 SLW
 <ffffffffffffffff> SUF
 1 SFC
 1 SFS
 1 SFC
 1 SFM
 0 0 3295 2543 ClipR
 0 0 3295 2543 ClipR
 xs 1 SLC
 [] 0 SLS
 1 SLW
 xs 0 SLC
 1 SLW
 xs 15 SLC
 229 2311 3142 2311 Ln
 229 101 3142 101 Ln
 228 2312 3142 2312 Ln
 228 101 3142 101 Ln
 227 2313 3142 2313 Ln
 227 100 3142 100 Ln
 226 2313 3142 2313 Ln
 226 99 3142 99 Ln
 226 2314 3142 2314 Ln
 226 98 3142 98 Ln
 229 2311 229 2285 Ln
 229 101 229 128 Ln
 520 2311 520 2285 Ln
 520 101 520 128 Ln
 421 2424 510 2424 Ln
 599 2364 550 2435 Ln
 550 2435 624 2435 Ln
 599 2364 599 2470 Ln
 811 2311 811 2285 Ln
 811 101 811 128 Ln
 1103 2311 1103 2285 Ln
 1103 101 1103 128 Ln
 1004 2424 1093 2424 Ln
 1137 2389 1137 2384 Ln
 1137 2384 1142 2375 Ln
 1142 2375 1147 2369 Ln
 1147 2369 1157 2364 Ln
 1157 2364 1177 2364 Ln
 1177 2364 1187 2369 Ln
 1187 2369 1192 2375 Ln
 1192 2375 1197 2384 Ln
 1197 2384 1197 2394 Ln
 1197 2394 1192 2405 Ln
 1192 2405 1182 2419 Ln
 1182 2419 1132 2470 Ln
 1132 2470 1202 2470 Ln
 1394 2311 1394 2285 Ln
 1394 101 1394 128 Ln
 1685 2311 1685 2285 Ln
 1685 101 1685 128 Ln
 1679 2364 1663 2369 Ln
 1663 2369 1654 2384 Ln
 1654 2384 1649 2410 Ln
 1649 2410 1649 2424 Ln
 1649 2424 1654 2450 Ln
 1654 2450 1663 2465 Ln
 1663 2465 1679 2470 Ln
 1679 2470 1688 2470 Ln
 1688 2470 1704 2465 Ln
 1704 2465 1713 2450 Ln
 1713 2450 1718 2424 Ln
 1718 2424 1718 2410 Ln
 1718 2410 1713 2384 Ln
 1713 2384 1704 2369 Ln
 1704 2369 1688 2364 Ln
 1688 2364 1679 2364 Ln
 1977 2311 1977 2285 Ln
 1977 101 1977 128 Ln
 1955 2384 1964 2379 Ln
 1964 2379 1980 2364 Ln
 1980 2364 1980 2470 Ln
 2268 2311 2268 2285 Ln
 2268 101 2268 128 Ln
 2236 2389 2236 2384 Ln
 2236 2384 2241 2375 Ln
 2241 2375 2246 2369 Ln
 2246 2369 2256 2364 Ln
 2256 2364 2276 2364 Ln
 2276 2364 2286 2369 Ln
 2286 2369 2291 2375 Ln
 2291 2375 2296 2384 Ln
 2296 2384 2296 2394 Ln
 2296 2394 2291 2405 Ln
 2291 2405 2281 2419 Ln
 2281 2419 2232 2470 Ln
 2232 2470 2301 2470 Ln
 2559 2311 2559 2285 Ln
 2559 101 2559 128 Ln
 2533 2364 2587 2364 Ln
 2587 2364 2557 2405 Ln
 2557 2405 2572 2405 Ln
 2572 2405 2582 2410 Ln
 2582 2410 2587 2414 Ln
 2587 2414 2592 2430 Ln
 2592 2430 2592 2440 Ln
 2592 2440 2587 2454 Ln
 2587 2454 2578 2465 Ln
 2578 2465 2562 2470 Ln
 2562 2470 2547 2470 Ln
 2547 2470 2533 2465 Ln
 2533 2465 2528 2460 Ln
 2528 2460 2523 2450 Ln
 2850 2311 2850 2285 Ln
 2850 101 2850 128 Ln
 2863 2364 2814 2435 Ln
 2814 2435 2888 2435 Ln
 2863 2364 2863 2470 Ln
 3142 2311 3142 2285 Ln
 3142 101 3142 128 Ln
 3165 2364 3115 2364 Ln
 3115 2364 3110 2410 Ln
 3110 2410 3115 2405 Ln
 3115 2405 3130 2399 Ln
 3130 2399 3145 2399 Ln
 3145 2399 3160 2405 Ln
 3160 2405 3170 2414 Ln
 3170 2414 3175 2430 Ln
 3175 2430 3175 2440 Ln
 3175 2440 3170 2454 Ln
 3170 2454 3160 2465 Ln
 3160 2465 3145 2470 Ln
 3145 2470 3130 2470 Ln
 3130 2470 3115 2465 Ln
 3115 2465 3110 2460 Ln
 3110 2460 3105 2450 Ln
 229 2311 229 101 Ln
 3142 2311 3142 101 Ln
 228 2310 228 101 Ln
 3142 2312 3142 101 Ln
 227 2309 227 101 Ln
 3143 2313 3143 100 Ln
 226 2309 226 101 Ln
 3144 2313 3144 99 Ln
 226 2308 226 101 Ln
 3145 2314 3145 98 Ln
 229 2311 255 2311 Ln
 3142 2311 3116 2311 Ln
 148 2411 148 2321 Ln
 88 2220 88 2271 Ln
 88 2271 133 2276 Ln
 133 2276 128 2271 Ln
 128 2271 123 2256 Ln
 123 2256 123 2241 Ln
 123 2241 128 2225 Ln
 128 2225 138 2216 Ln
 138 2216 153 2211 Ln
 153 2211 163 2211 Ln
 163 2211 177 2216 Ln
 177 2216 188 2225 Ln
 188 2225 193 2241 Ln
 193 2241 193 2256 Ln
 193 2256 188 2271 Ln
 188 2271 183 2276 Ln
 183 2276 172 2281 Ln
 229 2090 255 2090 Ln
 3142 2090 3116 2090 Ln
 229 1869 255 1869 Ln
 3142 1869 3116 1869 Ln
 148 1969 148 1879 Ln
 88 1829 88 1774 Ln
 88 1774 128 1804 Ln
 128 1804 128 1789 Ln
 128 1789 133 1779 Ln
 133 1779 138 1774 Ln
 138 1774 153 1769 Ln
 153 1769 163 1769 Ln
 163 1769 177 1774 Ln
 177 1774 188 1783 Ln
 188 1783 193 1799 Ln
 193 1799 193 1814 Ln
 193 1814 188 1829 Ln
 188 1829 183 1834 Ln
 183 1834 172 1839 Ln
 229 1648 255 1648 Ln
 3142 1648 3116 1648 Ln
 229 1427 255 1427 Ln
 3142 1427 3116 1427 Ln
 148 1527 148 1437 Ln
 108 1382 103 1373 Ln
 103 1373 88 1357 Ln
 88 1357 193 1357 Ln
 229 1206 255 1206 Ln
 3142 1206 3116 1206 Ln
 229 985 255 985 Ln
 3142 985 3116 985 Ln
 108 1007 103 997 Ln
 103 997 88 982 Ln
 88 982 193 982 Ln
 229 764 255 764 Ln
 3142 764 3116 764 Ln
 113 796 108 796 Ln
 108 796 98 791 Ln
 98 791 93 786 Ln
 93 786 88 777 Ln
 88 777 88 756 Ln
 88 756 93 746 Ln
 93 746 98 741 Ln
 98 741 108 736 Ln
 108 736 118 736 Ln
 118 736 128 741 Ln
 128 741 143 751 Ln
 143 751 193 801 Ln
 193 801 193 731 Ln
 229 543 255 543 Ln
 3142 543 3116 543 Ln
 88 570 88 515 Ln
 88 515 128 545 Ln
 128 545 128 530 Ln
 128 530 133 520 Ln
 133 520 138 515 Ln
 138 515 153 510 Ln
 153 510 163 510 Ln
 163 510 177 515 Ln
 177 515 188 525 Ln
 188 525 193 540 Ln
 193 540 193 556 Ln
 193 556 188 570 Ln
 188 570 183 575 Ln
 183 575 172 580 Ln
 229 322 255 322 Ln
 3142 322 3116 322 Ln
 88 309 158 359 Ln
 158 359 158 284 Ln
 88 309 193 309 Ln
 229 101 255 101 Ln
 3142 101 3116 101 Ln
 88 78 88 128 Ln
 88 128 133 133 Ln
 133 133 128 128 Ln
 128 128 123 114 Ln
 123 114 123 98 Ln
 123 98 128 83 Ln
 128 83 138 73 Ln
 138 73 153 68 Ln
 153 68 163 68 Ln
 163 68 177 73 Ln
 177 73 188 83 Ln
 188 83 193 98 Ln
 193 98 193 114 Ln
 193 114 188 128 Ln
 188 128 183 133 Ln
 183 133 172 138 Ln
 xs 10 SLC
 1 SLW
 229 1250 230 1250 Ln
 229 1250 258 1251 Ln
 258 1251 287 1252 Ln
 287 1252 317 1253 Ln
 317 1253 345 1254 Ln
 345 1254 374 1255 Ln
 374 1255 403 1257 Ln
 403 1257 432 1258 Ln
 432 1258 462 1259 Ln
 462 1259 491 1260 Ln
 491 1260 520 1262 Ln
 520 1262 549 1262 Ln
 549 1262 578 1264 Ln
 578 1264 608 1266 Ln
 608 1266 637 1267 Ln
 637 1267 666 1269 Ln
 666 1269 695 1271 Ln
 695 1271 724 1273 Ln
 724 1273 753 1275 Ln
 753 1275 782 1277 Ln
 782 1277 811 1280 Ln
 811 1280 840 1282 Ln
 840 1282 869 1285 Ln
 869 1285 899 1288 Ln
 899 1288 928 1291 Ln
 928 1291 957 1294 Ln
 957 1294 986 1298 Ln
 986 1298 1015 1302 Ln
 1015 1302 1045 1306 Ln
 1045 1306 1074 1311 Ln
 1074 1311 1103 1316 Ln
 1103 1316 1132 1323 Ln
 1132 1323 1161 1329 Ln
 1161 1329 1190 1336 Ln
 1190 1336 1219 1344 Ln
 1219 1344 1248 1354 Ln
 1248 1354 1277 1364 Ln
 1277 1364 1306 1376 Ln
 1306 1376 1336 1390 Ln
 1336 1390 1365 1407 Ln
 1365 1407 1394 1427 Ln
 1394 1427 1423 1452 Ln
 1423 1452 1452 1483 Ln
 1452 1483 1482 1522 Ln
 1482 1522 1511 1575 Ln
 1511 1575 1540 1648 Ln
 1540 1648 1569 1759 Ln
 1569 1759 1598 1942 Ln
 1598 1942 1627 2311 Ln
 1627 2311 1629 2311 Ln
 xs 11 SLC
 1743 101 1745 101 Ln
 1743 101 1773 470 Ln
 1773 470 1802 654 Ln
 1802 654 1831 764 Ln
 1831 764 1860 838 Ln
 1860 838 1889 891 Ln
 1889 891 1919 930 Ln
 1919 930 1948 961 Ln
 1948 961 1977 985 Ln
 1977 985 2005 1006 Ln
 2005 1006 2034 1022 Ln
 2034 1022 2064 1037 Ln
 2064 1037 2093 1048 Ln
 2093 1048 2122 1059 Ln
 2122 1059 2151 1068 Ln
 2151 1068 2180 1077 Ln
 2180 1077 2210 1083 Ln
 2210 1083 2239 1090 Ln
 2239 1090 2268 1096 Ln
 2268 1096 2297 1101 Ln
 2297 1101 2326 1106 Ln
 2326 1106 2355 1110 Ln
 2355 1110 2384 1114 Ln
 2384 1114 2413 1118 Ln
 2413 1118 2442 1121 Ln
 2442 1121 2471 1125 Ln
 2471 1125 2501 1127 Ln
 2501 1127 2530 1130 Ln
 2530 1130 2559 1133 Ln
 2559 1133 2588 1135 Ln
 2588 1135 2617 1137 Ln
 2617 1137 2647 1139 Ln
 2647 1139 2676 1141 Ln
 2676 1141 2705 1143 Ln
 2705 1143 2734 1145 Ln
 2734 1145 2763 1147 Ln
 2763 1147 2792 1148 Ln
 2792 1148 2821 1150 Ln
 2821 1150 2850 1151 Ln
 2850 1151 2879 1152 Ln
 2879 1152 2908 1153 Ln
 2908 1153 2938 1155 Ln
 2938 1155 2967 1156 Ln
 2967 1156 2996 1157 Ln
 2996 1157 3025 1158 Ln
 3025 1158 3054 1159 Ln
 3054 1159 3084 1161 Ln
 3084 1161 3113 1161 Ln
 3113 1161 3142 1162 Ln
 xs 15 SLC
 1 newPage
 %%Trailer
 %!END
