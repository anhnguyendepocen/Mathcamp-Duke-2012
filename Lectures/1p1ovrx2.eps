%!PS-Adobe-2.0 EPSF-1.2
%%Creator: PGL v-2.00 by AnSoft, Inc.
%%Pages:   1
%%BoundingBox: 0 0 611 791
%%EndComments
%---------------------------------------------------------------------
%
%------------------ Copyright (C) 1991 AnSoft,Inc.--------------------
%
%---------------------------------------------------------------------
% Temporary variables used
%---------------------------------------------------------------------
%  PROC          VARIABLES
%  PatternFill : fx1,fx2,fy1,fy2,fwidth
%
%---------------------------------------------------------------------
%  PGL Global Data
%---------------------------------------------------------------------
/LineColor 1   def  % -1 turns off Line & Outline drawing
/LineStyle []  def  % 
/Phase     0   def  %
/AreaColor 1   def  % -1 turns off Area Fills
/FillFlag  1   def  % 1-Outline, 2-Fill, 3-Both
/FillStyle 0   def  % 
/FillMode  1   def  %  1-opaque, 0-transparent
/MaxColor  15  def  %
/CurFont   0   def  % FontNames index
/topFlagV  0   def  % Text Justification(Vertical) Flags 
/ctrFlagV  0   def  %                   (Vertical)
/ctrFlagH  0   def  %                   (Horizonal)
/LineWidth 1   def  %
/UnitWidth 1   def  % Unit Line thickness in 1/300'ths inches
/PatSize   3   def  % Fill Pattern Scale Factor
/PatChar   48  def  % Fill Pattern Ascii Value
/UserChar  60  def  % UserFill Pattern Ascii Value
/FillChar  (?) def  % UserFill Pattern Ascii Value
/UserFillPat <0000000000000000> def %- empty fill by default

%--------------------------------------------------------------------
% Bitmap support
%--------------------------------------------------------------------
/rleFlag   1 string def
/rleStr    2 string def
/bmStr     1 string def

%--------------------------------------------------------------------
%  Color Tables and Mappings
%--------------------------------------------------------------------
/bwColors 256 array def
0 1 255 { bwColors exch 0 put } for  % zero all colors to black
bwColors 0 1 put                     % index 0 - white, all others black

/grayColors 256 array def
0 1 255 { grayColors exch 0 put } for  % zero all colors to black
grayColors  0  1.00 put 
grayColors  1  0.11 put 
grayColors  2  0.59 put 
grayColors  3  0.70 put 
grayColors  4  0.30 put 
grayColors  5  0.41 put 
grayColors  6  0.40 put 
grayColors  7  0.97 put 
grayColors  8  0.50 put 
grayColors  9  0.40 put 
grayColors  10 0.73 put 
grayColors  11 0.80 put 
grayColors  12 0.53 put 
grayColors  13 0.60 put 
grayColors  14 0.93 put 
grayColors  15 0.00 put 

/rgbColors 256 array def
0 1 255 { rgbColors exch [0 0 0] put } for  % zero all colors to black
rgbColors  0  [1 1 1]           put         % white
rgbColors  1  [0 0 1]           put         % blue
rgbColors  2  [0 1 0]           put         % green
rgbColors  3  [0 1 1]           put         % cyan
rgbColors  4  [1 0 0]           put         % red
rgbColors  5  [1 0 1]           put         % magenta
rgbColors  6  [0.67  0.33  0]   put         % brown
rgbColors  7  [0.9 0.9 0.9]     put         % darkgray
rgbColors  8  [0.75 0.75 0.75]  put         % lightgray
rgbColors  9  [0.33 0.33 1]     put         % lightblue
rgbColors  10 [0.33  1 0.33]    put         % lightgreen
rgbColors  11 [0.33 1 1]        put         % lightcyan
rgbColors  12 [1 0.33  0.33]    put         % lightred
rgbColors  13 [1 0.33  1]       put         % lightmagenta
rgbColors  14 [1 1 0.33]        put         % yellow
rgbColors  15 [0 0 0]           put         % black
        
/ColorModel  0 def
/ColorChoices [ bwColors grayColors rgbColors ] def
/ColorMap ColorChoices ColorModel get def   % default colors=b&w

%--------------------------------------------------------------------
%----Page Size, Set By Main Pgm
%--------------------------------------------------------------------
%
/PX  1950 def
/PY  1194 def

%--------------------------------------------------------------------
%----Text Scale Factors
%--------------------------------------------------------------------
/SX  1800 def   % Base size of page width/height, 
/SY  1194 def   % for scaling fonts against

/FSX  [  6  7   8  10  12  9  10 ] def  % Unit Font Scale factors
/FSY  [ -2.3  -4.6 -4.6 -4.6 -4.6 -4.6 -4.6 ] def  % Neg's to invert Y axis

%--------------------------------------------------------------------
%---- Users Font Scale Factors
%--------------------------------------------------------------------
/FSXN 1 def
/FSXD 1 def
/FSYN 1 def
/FSYD 1 def

%---------------------------------------------------------------------
%  Fonts Names Used by PGL
%  These replace the following vector fonts provided with PGL
%  If you change these you may need to change the scale factors
%  in FSX and FSY.
%---------------------------------------------------------------------
/FontNames
[
  /Helvetica          % small
  /Courier            % simplex
  /Helvetica          % duplex
  /Times-Roman        % triplex
  /Times-BoldItalic   % gothic 
  /Courier-Oblique    % script simplex
  /Helvetica-Oblique  % script duplex
] def

%---------------------------------------------------------------------
%  Fill Pattern Font based on "PS Lang Ref Man (Red Book) - Chap 5"
%---------------------------------------------------------------------
/newfont 10 dict def
newfont 
begin
 /FontType 3 def
 /FontMatrix [ .125 0 0 .125 0 0 ] def
 /FontBBox   [ 0 0 8 8 ]     def

 /Encoding 256 array def
 0 1 255 { Encoding exch /.notdef put } for
  Encoding  48 /empty     put  % '0'
  Encoding  49 /solid     put  % '1'
  Encoding  50 /lfill     put  % '2'
  Encoding  51 /slash     put  % '3'
  Encoding  52 /hslash    put  % '4'
  Encoding  53 /hbkslash  put  % '5'
  Encoding  54 /bkslash   put  % '6'
  Encoding  55 /hatch     put  % '7'
  Encoding  56 /xhatch    put  % '8'
  Encoding  57 /intleav   put  % '9'
  Encoding  58 /widedot   put  % '10'
  Encoding  59 /closedot  put  % '11'
  Encoding  60 /patfill   put  % '12'

 /CharProcs 14 dict def
 CharProcs 
 begin
  /.notdef {} bind def
  /empty    { 8 8 true [1 0 0 1 0 0] { <0000000000000000> } imagemask } bind def
  /solid    { 8 8 true [1 0 0 1 0 0] { <ffffffffffffffff> } imagemask } bind def
  /lfill    { 8 8 true [1 0 0 1 0 0] { <ffff0000ffff0000> } imagemask } bind def
  /slash    { 8 8 true [1 0 0 1 0 0] { <0102040810204080> } imagemask } bind def 
  /hslash   { 8 8 true [1 0 0 1 0 0] { <e0c183070e1c3870> } imagemask } bind def 
  /hbkslash { 8 8 true [1 0 0 1 0 0] { <f0783c1e0f87c3e1> } imagemask } bind def 
  /bkslash  { 8 8 true [1 0 0 1 0 0] { <a5d269b45a2d964b> } imagemask } bind def 
  /hatch    { 8 8 true [1 0 0 1 0 0] { <ff888888ff888888> } imagemask } bind def 
  /xhatch   { 8 8 true [1 0 0 1 0 0] { <8142241818244281> } imagemask } bind def 
  /intleav  { 8 8 true [1 0 0 1 0 0] { <cc33cc33cc33cc33> } imagemask } bind def 
  /widedot  { 8 8 true [1 0 0 1 0 0] { <8000080080000800> } imagemask } bind def 
  /closedot { 8 8 true [1 0 0 1 0 0] { <8800220088002200> } imagemask } bind def 
  /patfill  { 8 8 true [1 0 0 1 0 0] { UserFillPat } imagemask } bind def 
 end

 /BuildChar
 {
    exch
    begin  
      dup UserChar eq{                 
        8 0 setcharwidth            % userfillstyle
      }{
        8 0 0 0 8 8 setcachedevice  % standard fillstyle
      }ifelse
      Encoding exch get  
      CharProcs exch get 
    end
    exec
 }def
end 

/FillFont newfont definefont pop
%----- End Of Area Fill Font Def--------------------------------------

%---------------------------------------------------------------------
%  PGL Redefinitions
%---------------------------------------------------------------------
/gs   { gsave } bind def         
/gr   { grestore } bind def  
/m    { moveto } bind def        
/l    { lineto currentpoint stroke moveto } bind def  
/rm   { rmoveto } bind def       
/rl   { rlineto } bind def  
/cp   { closepath } bind def     
/np   { newpath } bind def   
/sg   { setgray } bind def       
/st   { stroke } bind def     
/sd   { setdash } bind def       
/ex   { exch } bind def
/in   { index } bind def         
/sw   { stringwidth } bind def 
/cxy  { currentpoint } bind def  
/slw  { setlinewidth } bind def 

%---------------------------------------------------------------------
% str strlen nchars
%---------------------------------------------------------------------
/strlen
{
    dup           % str str
    /itmp 0 def
    { /itmp itmp 1 add def pop } forall  % count characters
    itmp          % nchars
} bind def

%---------------------------------------------------------------------
% string txtCtrH   % Center Justify a string Horiz
%---------------------------------------------------------------------
/txtCtrH { dup sw pop 2 div neg dup 0 rm /ctrFlagH exch def } bind def 

%---------------------------------------------------------------------
% wx wy string atxtCtrH   % Center Justify a string Horiz
%---------------------------------------------------------------------
/atxtCtrH { 
    3 -1 roll   % wy string wx
    dup        % wy string wx wx
    4 1 roll  % wx wy string wx
    /xW ex def % wx wy string
    strlen     % wx wy string nchars
    xW mul
    /xW ex def
    dup        % str str
    sw         % str wx wy
    pop        % str wx
    xW add     % str wx+xW
    2 div neg 
    dup 
    0 rm 
    /ctrFlagH exch def 
} bind def 

%---------------------------------------------------------------------
% txtCtrHend   % Finish Center Justifying a string Horiz
%                cp shoud be at center of string
%---------------------------------------------------------------------
/txtCtrHend { ctrFlagH 0 rm /ctrFlagH 0 def } bind def 

%---------------------------------------------------------------------
% string txtRtH   % Right Justify a string Horiz
%---------------------------------------------------------------------
/txtRtH  {dup sw pop neg 0 rm} bind def 

%---------------------------------------------------------------------
% string txtRtH   % Right Justify a string Horiz
%---------------------------------------------------------------------
/atxtRtH  {
    3 -1 roll   % wy string wx
    dup        % wy string wx wx
    4 1 roll  % wx wy string wx
    /xW ex def % wx wy string
    strlen     % wx wy string nchars
    xW mul
    /xW ex def
    dup 
    sw 
    pop 
    xW add     % str wx+xW
    neg 0 rm
} bind def 

%---------------------------------------------------------------------
% txtCtrV  % Center Justify a string Vertically
%---------------------------------------------------------------------
/txtCtrV { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 2 div 0 ex gr rm pop /ctrFlagV 1 def } bind def 

%---------------------------------------------------------------------
% txtCtrVend  % Center Justify a string Vertically
%---------------------------------------------------------------------
/txtCtrVend { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
              sub neg 2 div 0 ex gr neg rm pop /ctrFlagV 0 def } bind def 

%---------------------------------------------------------------------
% string txtTopV  % Top Justify a string Vertically
%---------------------------------------------------------------------
/txtTopV { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 0 ex gr rm pop /topFlagV 1 def } bind def 

%---------------------------------------------------------------------
% txtTopVend  % Top Justify a string Vertically
%---------------------------------------------------------------------
/txtTopVend { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 0 ex gr neg rm pop /topFlagV 0 def } bind def 

%---------------------------------------------------------------------
%  ash   display text & readjusts cp for Top & Center Vertical
%        text justification
%---------------------------------------------------------------------
/ash {
   ashow
   topFlagV 1 eq {
     txtTopVend
   } if
   ctrFlagV 1 eq {
     txtCtrVend
   } if
   ctrFlagH 0 ne {
     txtCtrHend
   } if
} bind def

%---------------------------------------------------------------------
%  sh   display text & readjusts cp for Top & Center Vertical
%       text justification
%---------------------------------------------------------------------
/sh {
   show
   topFlagV 1 eq {
     txtTopVend
   } if
   ctrFlagV 1 eq {
     txtCtrVend
   } if
   ctrFlagH 0 ne {
     txtCtrHend
   } if
} bind def

%---------------------------------------------------------------------
% xs  % Extended Stroke 
%---------------------------------------------------------------------
/xs { 
  LineColor -1 ne
  { cxy st m }{ cxy np m }ifelse 
} bind def                       

%---------------------------------------------------------------------
%  color SLC   % SetLineColor  % -1 turns off line drawing
%---------------------------------------------------------------------
/SLC { dup /LineColor exch def SCC }bind def

%---------------------------------------------------------------------
%  index [r g b] SRC   % SetRgbColor
%---------------------------------------------------------------------
/SRC { 
/rgbTmp   exch def
/rgbIndex exch def
/rgbAbs   0.0  def
rgbTmp 0 get 1. 255. div mul  rgbTmp exch 0 exch put
rgbTmp 1 get 1. 255. div mul  rgbTmp exch 1 exch put
rgbTmp 2 get 1. 255. div mul  rgbTmp exch 2 exch put
rgbColors rgbIndex rgbTmp put  
rgbTmp { dup mul rgbAbs add /rgbAbs exch def } forall
grayColors rgbIndex rgbAbs sqrt put
}bind def

%---------------------------------------------------------------------
%  color SCC  % SetCurColor
%---------------------------------------------------------------------
/SCC { 
  dup -1 ne 
  { % -1 turns of line drawing
     ColorMap exch get 
     dup type /arraytype ne { 
       setgray 
     }{ 
       {} forall setrgbcolor 
     } ifelse
  }{ 
     pop  % remove -1 from stack
  }ifelse
}bind def

%---------------------------------------------------------------------
%  [] phase SLS  % SetLineStyle
%---------------------------------------------------------------------
/SLS { 
   /Phase exch def
   /LineStyle exch def 
   LineStyle Phase setdash 
}bind def

%---------------------------------------------------------------------
%  width SLW % SetLineWidth ( 1/300 inch )
%---------------------------------------------------------------------
/SLW { 
   /LineWidth exch def 
   LineWidth UnitWidth mul setlinewidth 
}bind def

%---------------------------------------------------------------------
%   color SFC % SetFillColor
%---------------------------------------------------------------------
/SFC {  /AreaColor exch def }bind def

%---------------------------------------------------------------------
%  <pattern> SUF  % SetUserFill pattern = hex no 
%---------------------------------------------------------------------
/SUF {  
    /UserFillPat exch def  % set pattern
    /FillStyle 12 def      % set flag
}bind def

%---------------------------------------------------------------------
%  style SFS  % SetFillStyle style no (0-11)
%---------------------------------------------------------------------
/SFS {  /FillStyle exch def }bind def

%---------------------------------------------------------------------
%  mode SFM  % SetFillMode   ( 1-Opaque, 2-Transparent)
%---------------------------------------------------------------------
/SFM {  /FillMode exch def }bind def

%---------------------------------------------------------------------
%  fontno SCF SetCurFont
%---------------------------------------------------------------------
/SCF {
 dup  /CurFont exch def        % save font no.
 FontNames exch get findfont 
   [ FSX CurFont get FSXN mul FSXD div PX mul SX div 0 0
     FSY CurFont get FSYN mul FSYD div PY mul SY div 0 0 ]
   makefont setfont 
 }bind def

%---------------------------------------------------------------------
%  xn xd yn yd SFX    % SetFontScale
%---------------------------------------------------------------------
/SFX {
  /FSYD exch def    /FSYN exch def  
  /FSXD exch def    /FSXN exch def
  CurFont SCF
}bind def

%---------------------------------------------------------------------
%  [ f1 f2 f3 f4 f5 f6 f7 ] SFNS   % SetFontNames
%---------------------------------------------------------------------
/SFNS {
  /FontNames exch def
}bind def

%---------------------------------------------------------------------
% [7 xsizes] [7 ysizes] SFZ  % SetFontSizes
%---------------------------------------------------------------------
/SFSZ {
  /FSY exch def
  /FSX exch def
}bind def

%---------------------------------------------------------------------
%  px py SPS  % SetPageSize
%---------------------------------------------------------------------
/SPS { /PY exch def  /PX exch def }bind def

%---------------------------------------------------------------------
%  x y color Pix  % SetPixel  1-Pixel = 1/300" pixel!
%---------------------------------------------------------------------
/Pix { 
gsave                     %
SCC moveto                % set color & position
1 linewidth [] 0 setdash  % set attributes
1 0 rlineto stroke        % do it!
grestore                  %
} bind def                       

%---------------------------------------------------------------------
%  x1 x2 y2 y2 Ln  % Line
%---------------------------------------------------------------------
/Ln { gs np 4 -2 roll m l st gr } bind def                       

%---------------------------------------------------------------------
%  x1 y1 x2 y2 flag Rect   (flag: 1-outline,2-fill,3-both)
%---------------------------------------------------------------------
/Rect { 
    /FillFlag exch def 
    gs np DrawRect FillArea OutLine gr 
} bind def

%---------------------------------------------------------------------
% x1 y1 x2 y2 x3 y3 .... flag PolyF  % PolyFill - fill current path
%---------------------------------------------------------------------
/PolyF { 
    /FillFlag exch def 
    gs closepath FillArea OutLine gr 
} bind def

%---------------------------------------------------------------------
%  x1 y1 x2 y2 ClipR % ClipRect 
%---------------------------------------------------------------------
/ClipR { 
    cxy 6 2 roll       % cx cy x1 y1 x2 y2
    gr gs
    0 setlinewidth
    np DrawRect eoclip np 
    m 
    %-- Reset graphics state
    LineWidth SLW
    LineColor SLC
    FSXN FSXD FSYN FSYD SFX
    CurFont   SCF
    LineStyle 0 setdash
} bind def

%-PRIVATE-------------------------------------------------------------
%  x1 y1 x2 y2 DrawRect 
%---------------------------------------------------------------------
/DrawRect { 
    3 in 3 in moveto 
    1 in 3 in lineto 
    3 in 1 in 4 -2 roll lineto lineto pop pop closepath % lineto
} bind def

%-PRIVATE-------------------------------------------------------------
%  xc yc sa ea rx ry DrawArc    
%---------------------------------------------------------------------
/DrawArc { 
   /savematrix matrix currentmatrix def 
   6 -2 roll translate    
   scale 
   0 0 1 5 -2 roll 
   1 -1 scale arc 1 -1 scale
   savematrix setmatrix
}bind def

%---------------------------------------------------------------------
%  xc yc sa ea rx ry Arc
%---------------------------------------------------------------------
/Arc { gs np DrawArc [] 0 sd st gr } bind def   

%---------------------------------------------------------------------
%  xc yc sa ea rx ry flag Pie   (flag: 1-Outline,2-Fill,3-Both)
%---------------------------------------------------------------------
/Pie { 
    /FillFlag exch def
    gs np 6 -2 roll 2 copy 2 copy m 8 4 roll 
    DrawArc cp FillArea OutLine gr 
} bind def   

%---------------------------------------------------------------------
%  xc yc rx ry flag ELLIPSE (flag: 1-Outline,2-Fill,3-Both)
%---------------------------------------------------------------------
/Ellipse { 
    /FillFlag exch def
     gs np 0 360 4 2 roll DrawArc FillArea OutLine gr 
}bind def   

%-PRIVATE-------------------------------------------------------------
%  OutLine
%---------------------------------------------------------------------
/OutLine  { 
  FillFlag 1 and 1 eq { 
    [] 0 sd LineColor SCC st 
  }if 
}bind def

%-PRIVATE-------------------------------------------------------------
%  FillArea  - fills current path
%---------------------------------------------------------------------
/FillArea { 
  FillFlag 2 and 2 eq { 
     gs eoclip 
     AreaColor SCC
     PatternFill
     gr
  }if 
}bind def

%-PRIVATE-------------------------------------------------------------
%  PatternFill 
%---------------------------------------------------------------------
/PatternFill {
   /psize 8 PatSize mul def
   /FillFont findfont psize scalefont setfont % set Pattern font
   FillChar 0 FillStyle PatChar add put               % fill char index
   FillMode 1 eq { gsave 1 setgray fill grestore }if  % erase background
   pathbbox                                           % llx lly  urx ury
   newpath              
   ceiling cvi /fy2 exch def 
   ceiling cvi /fx2 exch def 
   cvi 7 not and /fy1 exch def 
   cvi 7 not and /fx1 exch def
   fx2 fx1 sub psize div ceiling cvi
   /fwidth exch def
   fy1 psize fy2                          %
   {                                      %
     fx1 exch moveto                      %
     fwidth { FillChar show } repeat      %
   } for                                  %
} bind def

%---------------------------------------------------------------------
%  savePGL
%---------------------------------------------------------------------
/savePGL{
   /saveObj save def
}bind def

%---------------------------------------------------------------------
%  #copies newPage
%---------------------------------------------------------------------
/newPage{
   /#copies exch def
   showpage saveObj restore
   /#copies 1 def
}bind def

%----------------------------------------------------------------------
% x,y,npixels bmRow  % Bitmap row data, 1 row at a time...
%----------------------------------------------------------------------
/bmRow {
  /bmPixels  exch def
  /bmY       exch def
  /bmX       exch def

  currentpoint stroke moveto % save x,y stroke and moveto
  gsave                      % save graphics state
  1 setlinewidth             % linewidth
  0 setlinecap               % but cap
  [] 0 setdash               % solid style
  bmX .5 add bmY .5 add moveto % move to start of row
  %
  %  Read & decompress  a whole row of pixel color data via RLE
  %
  currentfile rleFlag readhexstring pop 
  0 get 1 eq 
  { /cumBytes 0 def
    { 
      currentfile rleStr readhexstring pop 
      dup 
      0 get 1 add exch % count rleStr
      1 get SCC        % count 
      dup              % dup count
      0 rlineto        % draw
      currentpoint stroke moveto     
      /cumBytes exch cumBytes add def 
      cumBytes bmPixels ge { exit } if 
    }loop 
  }{ 
    1 1 bmPixels
    {
      pop
      currentfile bmStr readhexstring pop 
      0 get SCC
      1 0 rlineto
      currentpoint stroke moveto     
    }for
  }ifelse 

  grestore
}bind def

%----------------------------------------------------------------------
% DPI PMAXX PMAXY PageHght TopMgn LftMgn LandFlag ColorModel initPGL
%----------------------------------------------------------------------
/initPGL {
   %---Page Constants
   /ColorModel exch def  /LandFlag exch def 
   /LeftMgn exch def     /TopMgn exch def
   /PageHeight exch def  /PY exch def       /PX exch def

   %---Select/Set Color model
   /ColorMap ColorChoices ColorModel get def   % default colors=b&w
   
   %---Save state & set output res
   savePGL 
   
   %---Set output res scaling, dpi on stack(300?)
   /dpiRes  exch def             % dots per inch
   /dphiRes dpiRes 100 div def   % pots per 1/100 inches (hinches)
   72 dpiRes div dup scale

   %---Set coordinate origin, & dir
   LandFlag 1 ne { 
      % Portrait Setup
      LeftMgn dphiRes mul PageHeight TopMgn sub dphiRes mul 
   }{
      % Landscape Setup
      90 rotate LeftMgn dphiRes mul TopMgn dphiRes mul neg 
   }ifelse
   translate 1 -1 scale

   %---Adjust font scale factor sizes, relative to 5000x5000
   0 1 6 { dup FSX exch get 4999 PX div mul FSX 3 1 roll put } for
   0 1 6 { dup FSY exch get 4999 PY div mul FSY 3 1 roll put } for

   %---Set default graphics state
   np 0 0 m
   1  SLC
   1  SLW
   [] 0 SLS
   1 1 1 1 SFX
   0 SCF
   <0000000000000000> SUF
   10 setmiterlimit
    0 setlinejoin 
    0 setlinecap
    gs  % save for clipping
    xs 0 0 PX PY ClipR
}bind def

1 setlinecap

%%EndProlog
 %%Page: 1 1
 300 3295 2543 1100 0 0 1 0 initPGL
 0 SCF
 [] 0 SLS
 1 SLW
 <ffffffffffffffff> SUF
 1 SFC
 1 SFS
 1 SFC
 1 SFM
 0 0 3295 2543 ClipR
 0 0 3295 2543 ClipR
 xs 1 SLC
 [] 0 SLS
 1 SLW
 xs 0 SLC
 1 SLW
 xs 15 SLC
 229 2311 3146 2311 Ln
 229 158 3146 158 Ln
 228 2312 3146 2312 Ln
 228 158 3146 158 Ln
 227 2313 3146 2313 Ln
 227 157 3146 157 Ln
 226 2313 3146 2313 Ln
 226 156 3146 156 Ln
 226 2314 3146 2314 Ln
 226 155 3146 155 Ln
 229 2311 229 2285 Ln
 229 158 229 185 Ln
 437 2311 437 2285 Ln
 437 158 437 185 Ln
 338 2424 428 2424 Ln
 531 2379 527 2369 Ln
 527 2369 511 2364 Ln
 511 2364 502 2364 Ln
 502 2364 486 2369 Ln
 486 2369 477 2384 Ln
 477 2384 472 2410 Ln
 472 2410 472 2435 Ln
 472 2435 477 2454 Ln
 477 2454 486 2465 Ln
 486 2465 502 2470 Ln
 502 2470 506 2470 Ln
 506 2470 522 2465 Ln
 522 2465 531 2454 Ln
 531 2454 536 2440 Ln
 536 2440 536 2435 Ln
 536 2435 531 2419 Ln
 531 2419 522 2410 Ln
 522 2410 506 2405 Ln
 506 2405 502 2405 Ln
 502 2405 486 2410 Ln
 486 2410 477 2419 Ln
 477 2419 472 2435 Ln
 646 2311 646 2285 Ln
 646 158 646 185 Ln
 854 2311 854 2285 Ln
 854 158 854 185 Ln
 755 2424 844 2424 Ln
 933 2364 884 2435 Ln
 884 2435 958 2435 Ln
 933 2364 933 2470 Ln
 1062 2311 1062 2285 Ln
 1062 158 1062 185 Ln
 1271 2311 1271 2285 Ln
 1271 158 1271 185 Ln
 1172 2424 1261 2424 Ln
 1305 2389 1305 2384 Ln
 1305 2384 1310 2375 Ln
 1310 2375 1315 2369 Ln
 1315 2369 1325 2364 Ln
 1325 2364 1345 2364 Ln
 1345 2364 1355 2369 Ln
 1355 2369 1360 2375 Ln
 1360 2375 1365 2384 Ln
 1365 2384 1365 2394 Ln
 1365 2394 1360 2405 Ln
 1360 2405 1350 2419 Ln
 1350 2419 1301 2470 Ln
 1301 2470 1370 2470 Ln
 1479 2311 1479 2285 Ln
 1479 158 1479 185 Ln
 1688 2311 1688 2285 Ln
 1688 158 1688 185 Ln
 1681 2364 1666 2369 Ln
 1666 2369 1656 2384 Ln
 1656 2384 1651 2410 Ln
 1651 2410 1651 2424 Ln
 1651 2424 1656 2450 Ln
 1656 2450 1666 2465 Ln
 1666 2465 1681 2470 Ln
 1681 2470 1691 2470 Ln
 1691 2470 1706 2465 Ln
 1706 2465 1716 2450 Ln
 1716 2450 1721 2424 Ln
 1721 2424 1721 2410 Ln
 1721 2410 1716 2384 Ln
 1716 2384 1706 2369 Ln
 1706 2369 1691 2364 Ln
 1691 2364 1681 2364 Ln
 1896 2311 1896 2285 Ln
 1896 158 1896 185 Ln
 1874 2384 1884 2379 Ln
 1884 2379 1899 2364 Ln
 1899 2364 1899 2470 Ln
 2104 2311 2104 2285 Ln
 2104 158 2104 185 Ln
 2073 2389 2073 2384 Ln
 2073 2384 2078 2375 Ln
 2078 2375 2083 2369 Ln
 2083 2369 2092 2364 Ln
 2092 2364 2112 2364 Ln
 2112 2364 2123 2369 Ln
 2123 2369 2128 2375 Ln
 2128 2375 2133 2384 Ln
 2133 2384 2133 2394 Ln
 2133 2394 2128 2405 Ln
 2128 2405 2117 2419 Ln
 2117 2419 2068 2470 Ln
 2068 2470 2137 2470 Ln
 2313 2311 2313 2285 Ln
 2313 158 2313 185 Ln
 2286 2364 2341 2364 Ln
 2341 2364 2311 2405 Ln
 2311 2405 2326 2405 Ln
 2326 2405 2336 2410 Ln
 2336 2410 2341 2414 Ln
 2341 2414 2346 2430 Ln
 2346 2430 2346 2440 Ln
 2346 2440 2341 2454 Ln
 2341 2454 2331 2465 Ln
 2331 2465 2316 2470 Ln
 2316 2470 2301 2470 Ln
 2301 2470 2286 2465 Ln
 2286 2465 2281 2460 Ln
 2281 2460 2277 2450 Ln
 2521 2311 2521 2285 Ln
 2521 158 2521 185 Ln
 2534 2364 2485 2435 Ln
 2485 2435 2559 2435 Ln
 2534 2364 2534 2470 Ln
 2730 2311 2730 2285 Ln
 2730 158 2730 185 Ln
 2753 2364 2703 2364 Ln
 2703 2364 2698 2410 Ln
 2698 2410 2703 2405 Ln
 2703 2405 2718 2399 Ln
 2718 2399 2733 2399 Ln
 2733 2399 2748 2405 Ln
 2748 2405 2758 2414 Ln
 2758 2414 2763 2430 Ln
 2763 2430 2763 2440 Ln
 2763 2440 2758 2454 Ln
 2758 2454 2748 2465 Ln
 2748 2465 2733 2470 Ln
 2733 2470 2718 2470 Ln
 2718 2470 2703 2465 Ln
 2703 2465 2698 2460 Ln
 2698 2460 2693 2450 Ln
 2938 2311 2938 2285 Ln
 2938 158 2938 185 Ln
 2966 2379 2961 2369 Ln
 2961 2369 2946 2364 Ln
 2946 2364 2936 2364 Ln
 2936 2364 2921 2369 Ln
 2921 2369 2911 2384 Ln
 2911 2384 2907 2410 Ln
 2907 2410 2907 2435 Ln
 2907 2435 2911 2454 Ln
 2911 2454 2921 2465 Ln
 2921 2465 2936 2470 Ln
 2936 2470 2941 2470 Ln
 2941 2470 2957 2465 Ln
 2957 2465 2966 2454 Ln
 2966 2454 2971 2440 Ln
 2971 2440 2971 2435 Ln
 2971 2435 2966 2419 Ln
 2966 2419 2957 2410 Ln
 2957 2410 2941 2405 Ln
 2941 2405 2936 2405 Ln
 2936 2405 2921 2410 Ln
 2921 2410 2911 2419 Ln
 2911 2419 2907 2435 Ln
 3146 2311 3146 2285 Ln
 3146 158 3146 185 Ln
 3179 2364 3130 2470 Ln
 3110 2364 3179 2364 Ln
 229 2311 229 158 Ln
 3146 2311 3146 158 Ln
 228 2310 228 158 Ln
 3147 2312 3147 158 Ln
 227 2309 227 158 Ln
 3148 2313 3148 157 Ln
 226 2309 226 158 Ln
 3149 2313 3149 156 Ln
 226 2308 226 158 Ln
 3150 2314 3150 155 Ln
 229 2311 255 2311 Ln
 3146 2311 3121 2311 Ln
 88 2317 93 2333 Ln
 93 2333 108 2343 Ln
 108 2343 133 2348 Ln
 133 2348 148 2348 Ln
 148 2348 172 2343 Ln
 172 2343 188 2333 Ln
 188 2333 193 2317 Ln
 193 2317 193 2308 Ln
 193 2308 188 2292 Ln
 188 2292 172 2282 Ln
 172 2282 148 2278 Ln
 148 2278 133 2278 Ln
 133 2278 108 2282 Ln
 108 2282 93 2292 Ln
 93 2292 88 2308 Ln
 88 2308 88 2317 Ln
 229 2096 255 2096 Ln
 3146 2096 3121 2096 Ln
 108 2118 103 2108 Ln
 103 2108 88 2092 Ln
 88 2092 193 2092 Ln
 229 1880 255 1880 Ln
 3146 1880 3121 1880 Ln
 113 1912 108 1912 Ln
 108 1912 98 1907 Ln
 98 1907 93 1902 Ln
 93 1902 88 1893 Ln
 88 1893 88 1872 Ln
 88 1872 93 1862 Ln
 93 1862 98 1857 Ln
 98 1857 108 1852 Ln
 108 1852 118 1852 Ln
 118 1852 128 1857 Ln
 128 1857 143 1867 Ln
 143 1867 193 1917 Ln
 193 1917 193 1847 Ln
 229 1665 255 1665 Ln
 3146 1665 3121 1665 Ln
 88 1692 88 1637 Ln
 88 1637 128 1667 Ln
 128 1667 128 1652 Ln
 128 1652 133 1642 Ln
 133 1642 138 1637 Ln
 138 1637 153 1632 Ln
 153 1632 163 1632 Ln
 163 1632 177 1637 Ln
 177 1637 188 1646 Ln
 188 1646 193 1662 Ln
 193 1662 193 1677 Ln
 193 1677 188 1692 Ln
 188 1692 183 1697 Ln
 183 1697 172 1702 Ln
 229 1450 255 1450 Ln
 3146 1450 3121 1450 Ln
 88 1437 158 1487 Ln
 158 1487 158 1412 Ln
 88 1437 193 1437 Ln
 229 1235 255 1235 Ln
 3146 1235 3121 1235 Ln
 88 1211 88 1262 Ln
 88 1262 133 1267 Ln
 133 1267 128 1262 Ln
 128 1262 123 1247 Ln
 123 1247 123 1231 Ln
 123 1231 128 1216 Ln
 128 1216 138 1206 Ln
 138 1206 153 1201 Ln
 153 1201 163 1201 Ln
 163 1201 177 1206 Ln
 177 1206 188 1216 Ln
 188 1216 193 1231 Ln
 193 1231 193 1247 Ln
 193 1247 188 1262 Ln
 188 1262 183 1267 Ln
 183 1267 172 1271 Ln
 229 1019 255 1019 Ln
 3146 1019 3121 1019 Ln
 103 991 93 996 Ln
 93 996 88 1011 Ln
 88 1011 88 1021 Ln
 88 1021 93 1037 Ln
 93 1037 108 1046 Ln
 108 1046 133 1051 Ln
 133 1051 158 1051 Ln
 158 1051 177 1046 Ln
 177 1046 188 1037 Ln
 188 1037 193 1021 Ln
 193 1021 193 1016 Ln
 193 1016 188 1001 Ln
 188 1001 177 991 Ln
 177 991 163 986 Ln
 163 986 158 986 Ln
 158 986 143 991 Ln
 143 991 133 1001 Ln
 133 1001 128 1016 Ln
 128 1016 128 1021 Ln
 128 1021 133 1037 Ln
 133 1037 143 1046 Ln
 143 1046 158 1051 Ln
 229 804 255 804 Ln
 3146 804 3121 804 Ln
 88 771 193 821 Ln
 88 841 88 771 Ln
 229 589 255 589 Ln
 3146 589 3121 589 Ln
 88 601 93 616 Ln
 93 616 103 621 Ln
 103 621 113 621 Ln
 113 621 123 616 Ln
 123 616 128 606 Ln
 128 606 133 586 Ln
 133 586 138 570 Ln
 138 570 148 560 Ln
 148 560 158 556 Ln
 158 556 172 556 Ln
 172 556 183 560 Ln
 183 560 188 565 Ln
 188 565 193 581 Ln
 193 581 193 601 Ln
 193 601 188 616 Ln
 188 616 183 621 Ln
 183 621 172 626 Ln
 172 626 158 626 Ln
 158 626 148 621 Ln
 148 621 138 611 Ln
 138 611 133 596 Ln
 133 596 128 576 Ln
 128 576 123 565 Ln
 123 565 113 560 Ln
 113 560 103 560 Ln
 103 560 93 565 Ln
 93 565 88 581 Ln
 88 581 88 601 Ln
 229 374 255 374 Ln
 3146 374 3121 374 Ln
 123 345 138 350 Ln
 138 350 148 361 Ln
 148 361 153 375 Ln
 153 375 153 380 Ln
 153 380 148 396 Ln
 148 396 138 406 Ln
 138 406 123 410 Ln
 123 410 118 410 Ln
 118 410 103 406 Ln
 103 406 93 396 Ln
 93 396 88 380 Ln
 88 380 88 375 Ln
 88 375 93 361 Ln
 93 361 103 350 Ln
 103 350 123 345 Ln
 123 345 148 345 Ln
 148 345 172 350 Ln
 172 350 188 361 Ln
 188 361 193 375 Ln
 193 375 193 386 Ln
 193 386 188 401 Ln
 188 401 177 406 Ln
 229 158 255 158 Ln
 3146 158 3121 158 Ln
 xs 10 SLC
 1 SLW
 229 2092 230 2092 Ln
 229 2092 259 2091 Ln
 259 2091 288 2091 Ln
 288 2091 317 2091 Ln
 317 2091 347 2091 Ln
 347 2091 376 2090 Ln
 376 2090 406 2090 Ln
 406 2090 435 2090 Ln
 435 2090 465 2089 Ln
 465 2089 494 2089 Ln
 494 2089 523 2089 Ln
 523 2089 553 2088 Ln
 553 2088 583 2088 Ln
 583 2088 612 2088 Ln
 612 2088 642 2088 Ln
 642 2088 671 2087 Ln
 671 2087 700 2086 Ln
 700 2086 730 2086 Ln
 730 2086 759 2085 Ln
 759 2085 789 2084 Ln
 789 2084 819 2083 Ln
 819 2083 848 2083 Ln
 848 2083 877 2082 Ln
 877 2082 906 2080 Ln
 906 2080 936 2079 Ln
 936 2079 966 2078 Ln
 966 2078 995 2076 Ln
 995 2076 1025 2075 Ln
 1025 2075 1054 2072 Ln
 1054 2072 1083 2070 Ln
 1083 2070 1113 2067 Ln
 1113 2067 1142 2064 Ln
 1142 2064 1172 2061 Ln
 1172 2061 1202 2057 Ln
 1202 2057 1231 2051 Ln
 1231 2051 1260 2044 Ln
 1260 2044 1290 2037 Ln
 1290 2037 1319 2027 Ln
 1319 2027 1349 2014 Ln
 1349 2014 1378 1998 Ln
 1378 1998 1408 1977 Ln
 1408 1977 1437 1946 Ln
 1437 1946 1466 1904 Ln
 1466 1904 1496 1841 Ln
 1496 1841 1526 1740 Ln
 1526 1740 1555 1564 Ln
 1555 1564 1585 1217 Ln
 1585 1217 1614 374 Ln
 1614 374 1619 158 Ln
 1756 158 1762 374 Ln
 1762 374 1791 1217 Ln
 1791 1217 1820 1564 Ln
 1820 1564 1849 1740 Ln
 1849 1740 1879 1841 Ln
 1879 1841 1909 1904 Ln
 1909 1904 1938 1946 Ln
 1938 1946 1968 1977 Ln
 1968 1977 1997 1998 Ln
 1997 1998 2026 2014 Ln
 2026 2014 2056 2027 Ln
 2056 2027 2085 2037 Ln
 2085 2037 2115 2044 Ln
 2115 2044 2145 2051 Ln
 2145 2051 2174 2057 Ln
 2174 2057 2203 2061 Ln
 2203 2061 2233 2064 Ln
 2233 2064 2262 2067 Ln
 2262 2067 2292 2070 Ln
 2292 2070 2321 2072 Ln
 2321 2072 2351 2075 Ln
 2351 2075 2380 2076 Ln
 2380 2076 2409 2078 Ln
 2409 2078 2439 2079 Ln
 2439 2079 2469 2080 Ln
 2469 2080 2498 2082 Ln
 2498 2082 2528 2083 Ln
 2528 2083 2557 2083 Ln
 2557 2083 2586 2084 Ln
 2586 2084 2616 2085 Ln
 2616 2085 2645 2086 Ln
 2645 2086 2675 2086 Ln
 2675 2086 2705 2087 Ln
 2705 2087 2734 2088 Ln
 2734 2088 2763 2088 Ln
 2763 2088 2792 2088 Ln
 2792 2088 2822 2088 Ln
 2822 2088 2852 2089 Ln
 2852 2089 2881 2089 Ln
 2881 2089 2911 2089 Ln
 2911 2089 2940 2090 Ln
 2940 2090 2969 2090 Ln
 2969 2090 2999 2090 Ln
 2999 2090 3028 2091 Ln
 3028 2091 3058 2091 Ln
 3058 2091 3088 2091 Ln
 3088 2091 3117 2091 Ln
 3117 2091 3146 2092 Ln
 xs 15 SLC
 1 newPage
 %%Trailer
 %!END
