%!PS-Adobe-2.0 EPSF-1.2
%%Creator: PGL v-2.00 by AnSoft, Inc.
%%Pages:   1
%%BoundingBox: 0 0 611 791
%%EndComments
%---------------------------------------------------------------------
%
%------------------ Copyright (C) 1991 AnSoft,Inc.--------------------
%
%---------------------------------------------------------------------
% Temporary variables used
%---------------------------------------------------------------------
%  PROC          VARIABLES
%  PatternFill : fx1,fx2,fy1,fy2,fwidth
%
%---------------------------------------------------------------------
%  PGL Global Data
%---------------------------------------------------------------------
/LineColor 1   def  % -1 turns off Line & Outline drawing
/LineStyle []  def  % 
/Phase     0   def  %
/AreaColor 1   def  % -1 turns off Area Fills
/FillFlag  1   def  % 1-Outline, 2-Fill, 3-Both
/FillStyle 0   def  % 
/FillMode  1   def  %  1-opaque, 0-transparent
/MaxColor  15  def  %
/CurFont   0   def  % FontNames index
/topFlagV  0   def  % Text Justification(Vertical) Flags 
/ctrFlagV  0   def  %                   (Vertical)
/ctrFlagH  0   def  %                   (Horizonal)
/LineWidth 1   def  %
/UnitWidth 1   def  % Unit Line thickness in 1/300'ths inches
/PatSize   3   def  % Fill Pattern Scale Factor
/PatChar   48  def  % Fill Pattern Ascii Value
/UserChar  60  def  % UserFill Pattern Ascii Value
/FillChar  (?) def  % UserFill Pattern Ascii Value
/UserFillPat <0000000000000000> def %- empty fill by default

%--------------------------------------------------------------------
% Bitmap support
%--------------------------------------------------------------------
/rleFlag   1 string def
/rleStr    2 string def
/bmStr     1 string def

%--------------------------------------------------------------------
%  Color Tables and Mappings
%--------------------------------------------------------------------
/bwColors 256 array def
0 1 255 { bwColors exch 0 put } for  % zero all colors to black
bwColors 0 1 put                     % index 0 - white, all others black

/grayColors 256 array def
0 1 255 { grayColors exch 0 put } for  % zero all colors to black
grayColors  0  1.00 put 
grayColors  1  0.11 put 
grayColors  2  0.59 put 
grayColors  3  0.70 put 
grayColors  4  0.30 put 
grayColors  5  0.41 put 
grayColors  6  0.40 put 
grayColors  7  0.97 put 
grayColors  8  0.50 put 
grayColors  9  0.40 put 
grayColors  10 0.73 put 
grayColors  11 0.80 put 
grayColors  12 0.53 put 
grayColors  13 0.60 put 
grayColors  14 0.93 put 
grayColors  15 0.00 put 

/rgbColors 256 array def
0 1 255 { rgbColors exch [0 0 0] put } for  % zero all colors to black
rgbColors  0  [1 1 1]           put         % white
rgbColors  1  [0 0 1]           put         % blue
rgbColors  2  [0 1 0]           put         % green
rgbColors  3  [0 1 1]           put         % cyan
rgbColors  4  [1 0 0]           put         % red
rgbColors  5  [1 0 1]           put         % magenta
rgbColors  6  [0.67  0.33  0]   put         % brown
rgbColors  7  [0.9 0.9 0.9]     put         % darkgray
rgbColors  8  [0.75 0.75 0.75]  put         % lightgray
rgbColors  9  [0.33 0.33 1]     put         % lightblue
rgbColors  10 [0.33  1 0.33]    put         % lightgreen
rgbColors  11 [0.33 1 1]        put         % lightcyan
rgbColors  12 [1 0.33  0.33]    put         % lightred
rgbColors  13 [1 0.33  1]       put         % lightmagenta
rgbColors  14 [1 1 0.33]        put         % yellow
rgbColors  15 [0 0 0]           put         % black
        
/ColorModel  0 def
/ColorChoices [ bwColors grayColors rgbColors ] def
/ColorMap ColorChoices ColorModel get def   % default colors=b&w

%--------------------------------------------------------------------
%----Page Size, Set By Main Pgm
%--------------------------------------------------------------------
%
/PX  1950 def
/PY  1194 def

%--------------------------------------------------------------------
%----Text Scale Factors
%--------------------------------------------------------------------
/SX  1800 def   % Base size of page width/height, 
/SY  1194 def   % for scaling fonts against

/FSX  [  6  7   8  10  12  9  10 ] def  % Unit Font Scale factors
/FSY  [ -2.3  -4.6 -4.6 -4.6 -4.6 -4.6 -4.6 ] def  % Neg's to invert Y axis

%--------------------------------------------------------------------
%---- Users Font Scale Factors
%--------------------------------------------------------------------
/FSXN 1 def
/FSXD 1 def
/FSYN 1 def
/FSYD 1 def

%---------------------------------------------------------------------
%  Fonts Names Used by PGL
%  These replace the following vector fonts provided with PGL
%  If you change these you may need to change the scale factors
%  in FSX and FSY.
%---------------------------------------------------------------------
/FontNames
[
  /Helvetica          % small
  /Courier            % simplex
  /Helvetica          % duplex
  /Times-Roman        % triplex
  /Times-BoldItalic   % gothic 
  /Courier-Oblique    % script simplex
  /Helvetica-Oblique  % script duplex
] def

%---------------------------------------------------------------------
%  Fill Pattern Font based on "PS Lang Ref Man (Red Book) - Chap 5"
%---------------------------------------------------------------------
/newfont 10 dict def
newfont 
begin
 /FontType 3 def
 /FontMatrix [ .125 0 0 .125 0 0 ] def
 /FontBBox   [ 0 0 8 8 ]     def

 /Encoding 256 array def
 0 1 255 { Encoding exch /.notdef put } for
  Encoding  48 /empty     put  % '0'
  Encoding  49 /solid     put  % '1'
  Encoding  50 /lfill     put  % '2'
  Encoding  51 /slash     put  % '3'
  Encoding  52 /hslash    put  % '4'
  Encoding  53 /hbkslash  put  % '5'
  Encoding  54 /bkslash   put  % '6'
  Encoding  55 /hatch     put  % '7'
  Encoding  56 /xhatch    put  % '8'
  Encoding  57 /intleav   put  % '9'
  Encoding  58 /widedot   put  % '10'
  Encoding  59 /closedot  put  % '11'
  Encoding  60 /patfill   put  % '12'

 /CharProcs 14 dict def
 CharProcs 
 begin
  /.notdef {} bind def
  /empty    { 8 8 true [1 0 0 1 0 0] { <0000000000000000> } imagemask } bind def
  /solid    { 8 8 true [1 0 0 1 0 0] { <ffffffffffffffff> } imagemask } bind def
  /lfill    { 8 8 true [1 0 0 1 0 0] { <ffff0000ffff0000> } imagemask } bind def
  /slash    { 8 8 true [1 0 0 1 0 0] { <0102040810204080> } imagemask } bind def 
  /hslash   { 8 8 true [1 0 0 1 0 0] { <e0c183070e1c3870> } imagemask } bind def 
  /hbkslash { 8 8 true [1 0 0 1 0 0] { <f0783c1e0f87c3e1> } imagemask } bind def 
  /bkslash  { 8 8 true [1 0 0 1 0 0] { <a5d269b45a2d964b> } imagemask } bind def 
  /hatch    { 8 8 true [1 0 0 1 0 0] { <ff888888ff888888> } imagemask } bind def 
  /xhatch   { 8 8 true [1 0 0 1 0 0] { <8142241818244281> } imagemask } bind def 
  /intleav  { 8 8 true [1 0 0 1 0 0] { <cc33cc33cc33cc33> } imagemask } bind def 
  /widedot  { 8 8 true [1 0 0 1 0 0] { <8000080080000800> } imagemask } bind def 
  /closedot { 8 8 true [1 0 0 1 0 0] { <8800220088002200> } imagemask } bind def 
  /patfill  { 8 8 true [1 0 0 1 0 0] { UserFillPat } imagemask } bind def 
 end

 /BuildChar
 {
    exch
    begin  
      dup UserChar eq{                 
        8 0 setcharwidth            % userfillstyle
      }{
        8 0 0 0 8 8 setcachedevice  % standard fillstyle
      }ifelse
      Encoding exch get  
      CharProcs exch get 
    end
    exec
 }def
end 

/FillFont newfont definefont pop
%----- End Of Area Fill Font Def--------------------------------------

%---------------------------------------------------------------------
%  PGL Redefinitions
%---------------------------------------------------------------------
/gs   { gsave } bind def         
/gr   { grestore } bind def  
/m    { moveto } bind def        
/l    { lineto currentpoint stroke moveto } bind def  
/rm   { rmoveto } bind def       
/rl   { rlineto } bind def  
/cp   { closepath } bind def     
/np   { newpath } bind def   
/sg   { setgray } bind def       
/st   { stroke } bind def     
/sd   { setdash } bind def       
/ex   { exch } bind def
/in   { index } bind def         
/sw   { stringwidth } bind def 
/cxy  { currentpoint } bind def  
/slw  { setlinewidth } bind def 

%---------------------------------------------------------------------
% str strlen nchars
%---------------------------------------------------------------------
/strlen
{
    dup           % str str
    /itmp 0 def
    { /itmp itmp 1 add def pop } forall  % count characters
    itmp          % nchars
} bind def

%---------------------------------------------------------------------
% string txtCtrH   % Center Justify a string Horiz
%---------------------------------------------------------------------
/txtCtrH { dup sw pop 2 div neg dup 0 rm /ctrFlagH exch def } bind def 

%---------------------------------------------------------------------
% wx wy string atxtCtrH   % Center Justify a string Horiz
%---------------------------------------------------------------------
/atxtCtrH { 
    3 -1 roll   % wy string wx
    dup        % wy string wx wx
    4 1 roll  % wx wy string wx
    /xW ex def % wx wy string
    strlen     % wx wy string nchars
    xW mul
    /xW ex def
    dup        % str str
    sw         % str wx wy
    pop        % str wx
    xW add     % str wx+xW
    2 div neg 
    dup 
    0 rm 
    /ctrFlagH exch def 
} bind def 

%---------------------------------------------------------------------
% txtCtrHend   % Finish Center Justifying a string Horiz
%                cp shoud be at center of string
%---------------------------------------------------------------------
/txtCtrHend { ctrFlagH 0 rm /ctrFlagH 0 def } bind def 

%---------------------------------------------------------------------
% string txtRtH   % Right Justify a string Horiz
%---------------------------------------------------------------------
/txtRtH  {dup sw pop neg 0 rm} bind def 

%---------------------------------------------------------------------
% string txtRtH   % Right Justify a string Horiz
%---------------------------------------------------------------------
/atxtRtH  {
    3 -1 roll   % wy string wx
    dup        % wy string wx wx
    4 1 roll  % wx wy string wx
    /xW ex def % wx wy string
    strlen     % wx wy string nchars
    xW mul
    /xW ex def
    dup 
    sw 
    pop 
    xW add     % str wx+xW
    neg 0 rm
} bind def 

%---------------------------------------------------------------------
% txtCtrV  % Center Justify a string Vertically
%---------------------------------------------------------------------
/txtCtrV { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 2 div 0 ex gr rm pop /ctrFlagV 1 def } bind def 

%---------------------------------------------------------------------
% txtCtrVend  % Center Justify a string Vertically
%---------------------------------------------------------------------
/txtCtrVend { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
              sub neg 2 div 0 ex gr neg rm pop /ctrFlagV 0 def } bind def 

%---------------------------------------------------------------------
% string txtTopV  % Top Justify a string Vertically
%---------------------------------------------------------------------
/txtTopV { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 0 ex gr rm pop /topFlagV 1 def } bind def 

%---------------------------------------------------------------------
% txtTopVend  % Top Justify a string Vertically
%---------------------------------------------------------------------
/txtTopVend { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 0 ex gr neg rm pop /topFlagV 0 def } bind def 

%---------------------------------------------------------------------
%  ash   display text & readjusts cp for Top & Center Vertical
%        text justification
%---------------------------------------------------------------------
/ash {
   ashow
   topFlagV 1 eq {
     txtTopVend
   } if
   ctrFlagV 1 eq {
     txtCtrVend
   } if
   ctrFlagH 0 ne {
     txtCtrHend
   } if
} bind def

%---------------------------------------------------------------------
%  sh   display text & readjusts cp for Top & Center Vertical
%       text justification
%---------------------------------------------------------------------
/sh {
   show
   topFlagV 1 eq {
     txtTopVend
   } if
   ctrFlagV 1 eq {
     txtCtrVend
   } if
   ctrFlagH 0 ne {
     txtCtrHend
   } if
} bind def

%---------------------------------------------------------------------
% xs  % Extended Stroke 
%---------------------------------------------------------------------
/xs { 
  LineColor -1 ne
  { cxy st m }{ cxy np m }ifelse 
} bind def                       

%---------------------------------------------------------------------
%  color SLC   % SetLineColor  % -1 turns off line drawing
%---------------------------------------------------------------------
/SLC { dup /LineColor exch def SCC }bind def

%---------------------------------------------------------------------
%  index [r g b] SRC   % SetRgbColor
%---------------------------------------------------------------------
/SRC { 
/rgbTmp   exch def
/rgbIndex exch def
/rgbAbs   0.0  def
rgbTmp 0 get 1. 255. div mul  rgbTmp exch 0 exch put
rgbTmp 1 get 1. 255. div mul  rgbTmp exch 1 exch put
rgbTmp 2 get 1. 255. div mul  rgbTmp exch 2 exch put
rgbColors rgbIndex rgbTmp put  
rgbTmp { dup mul rgbAbs add /rgbAbs exch def } forall
grayColors rgbIndex rgbAbs sqrt put
}bind def

%---------------------------------------------------------------------
%  color SCC  % SetCurColor
%---------------------------------------------------------------------
/SCC { 
  dup -1 ne 
  { % -1 turns of line drawing
     ColorMap exch get 
     dup type /arraytype ne { 
       setgray 
     }{ 
       {} forall setrgbcolor 
     } ifelse
  }{ 
     pop  % remove -1 from stack
  }ifelse
}bind def

%---------------------------------------------------------------------
%  [] phase SLS  % SetLineStyle
%---------------------------------------------------------------------
/SLS { 
   /Phase exch def
   /LineStyle exch def 
   LineStyle Phase setdash 
}bind def

%---------------------------------------------------------------------
%  width SLW % SetLineWidth ( 1/300 inch )
%---------------------------------------------------------------------
/SLW { 
   /LineWidth exch def 
   LineWidth UnitWidth mul setlinewidth 
}bind def

%---------------------------------------------------------------------
%   color SFC % SetFillColor
%---------------------------------------------------------------------
/SFC {  /AreaColor exch def }bind def

%---------------------------------------------------------------------
%  <pattern> SUF  % SetUserFill pattern = hex no 
%---------------------------------------------------------------------
/SUF {  
    /UserFillPat exch def  % set pattern
    /FillStyle 12 def      % set flag
}bind def

%---------------------------------------------------------------------
%  style SFS  % SetFillStyle style no (0-11)
%---------------------------------------------------------------------
/SFS {  /FillStyle exch def }bind def

%---------------------------------------------------------------------
%  mode SFM  % SetFillMode   ( 1-Opaque, 2-Transparent)
%---------------------------------------------------------------------
/SFM {  /FillMode exch def }bind def

%---------------------------------------------------------------------
%  fontno SCF SetCurFont
%---------------------------------------------------------------------
/SCF {
 dup  /CurFont exch def        % save font no.
 FontNames exch get findfont 
   [ FSX CurFont get FSXN mul FSXD div PX mul SX div 0 0
     FSY CurFont get FSYN mul FSYD div PY mul SY div 0 0 ]
   makefont setfont 
 }bind def

%---------------------------------------------------------------------
%  xn xd yn yd SFX    % SetFontScale
%---------------------------------------------------------------------
/SFX {
  /FSYD exch def    /FSYN exch def  
  /FSXD exch def    /FSXN exch def
  CurFont SCF
}bind def

%---------------------------------------------------------------------
%  [ f1 f2 f3 f4 f5 f6 f7 ] SFNS   % SetFontNames
%---------------------------------------------------------------------
/SFNS {
  /FontNames exch def
}bind def

%---------------------------------------------------------------------
% [7 xsizes] [7 ysizes] SFZ  % SetFontSizes
%---------------------------------------------------------------------
/SFSZ {
  /FSY exch def
  /FSX exch def
}bind def

%---------------------------------------------------------------------
%  px py SPS  % SetPageSize
%---------------------------------------------------------------------
/SPS { /PY exch def  /PX exch def }bind def

%---------------------------------------------------------------------
%  x y color Pix  % SetPixel  1-Pixel = 1/300" pixel!
%---------------------------------------------------------------------
/Pix { 
gsave                     %
SCC moveto                % set color & position
1 linewidth [] 0 setdash  % set attributes
1 0 rlineto stroke        % do it!
grestore                  %
} bind def                       

%---------------------------------------------------------------------
%  x1 x2 y2 y2 Ln  % Line
%---------------------------------------------------------------------
/Ln { gs np 4 -2 roll m l st gr } bind def                       

%---------------------------------------------------------------------
%  x1 y1 x2 y2 flag Rect   (flag: 1-outline,2-fill,3-both)
%---------------------------------------------------------------------
/Rect { 
    /FillFlag exch def 
    gs np DrawRect FillArea OutLine gr 
} bind def

%---------------------------------------------------------------------
% x1 y1 x2 y2 x3 y3 .... flag PolyF  % PolyFill - fill current path
%---------------------------------------------------------------------
/PolyF { 
    /FillFlag exch def 
    gs closepath FillArea OutLine gr 
} bind def

%---------------------------------------------------------------------
%  x1 y1 x2 y2 ClipR % ClipRect 
%---------------------------------------------------------------------
/ClipR { 
    cxy 6 2 roll       % cx cy x1 y1 x2 y2
    gr gs
    0 setlinewidth
    np DrawRect eoclip np 
    m 
    %-- Reset graphics state
    LineWidth SLW
    LineColor SLC
    FSXN FSXD FSYN FSYD SFX
    CurFont   SCF
    LineStyle 0 setdash
} bind def

%-PRIVATE-------------------------------------------------------------
%  x1 y1 x2 y2 DrawRect 
%---------------------------------------------------------------------
/DrawRect { 
    3 in 3 in moveto 
    1 in 3 in lineto 
    3 in 1 in 4 -2 roll lineto lineto pop pop closepath % lineto
} bind def

%-PRIVATE-------------------------------------------------------------
%  xc yc sa ea rx ry DrawArc    
%---------------------------------------------------------------------
/DrawArc { 
   /savematrix matrix currentmatrix def 
   6 -2 roll translate    
   scale 
   0 0 1 5 -2 roll 
   1 -1 scale arc 1 -1 scale
   savematrix setmatrix
}bind def

%---------------------------------------------------------------------
%  xc yc sa ea rx ry Arc
%---------------------------------------------------------------------
/Arc { gs np DrawArc [] 0 sd st gr } bind def   

%---------------------------------------------------------------------
%  xc yc sa ea rx ry flag Pie   (flag: 1-Outline,2-Fill,3-Both)
%---------------------------------------------------------------------
/Pie { 
    /FillFlag exch def
    gs np 6 -2 roll 2 copy 2 copy m 8 4 roll 
    DrawArc cp FillArea OutLine gr 
} bind def   

%---------------------------------------------------------------------
%  xc yc rx ry flag ELLIPSE (flag: 1-Outline,2-Fill,3-Both)
%---------------------------------------------------------------------
/Ellipse { 
    /FillFlag exch def
     gs np 0 360 4 2 roll DrawArc FillArea OutLine gr 
}bind def   

%-PRIVATE-------------------------------------------------------------
%  OutLine
%---------------------------------------------------------------------
/OutLine  { 
  FillFlag 1 and 1 eq { 
    [] 0 sd LineColor SCC st 
  }if 
}bind def

%-PRIVATE-------------------------------------------------------------
%  FillArea  - fills current path
%---------------------------------------------------------------------
/FillArea { 
  FillFlag 2 and 2 eq { 
     gs eoclip 
     AreaColor SCC
     PatternFill
     gr
  }if 
}bind def

%-PRIVATE-------------------------------------------------------------
%  PatternFill 
%---------------------------------------------------------------------
/PatternFill {
   /psize 8 PatSize mul def
   /FillFont findfont psize scalefont setfont % set Pattern font
   FillChar 0 FillStyle PatChar add put               % fill char index
   FillMode 1 eq { gsave 1 setgray fill grestore }if  % erase background
   pathbbox                                           % llx lly  urx ury
   newpath              
   ceiling cvi /fy2 exch def 
   ceiling cvi /fx2 exch def 
   cvi 7 not and /fy1 exch def 
   cvi 7 not and /fx1 exch def
   fx2 fx1 sub psize div ceiling cvi
   /fwidth exch def
   fy1 psize fy2                          %
   {                                      %
     fx1 exch moveto                      %
     fwidth { FillChar show } repeat      %
   } for                                  %
} bind def

%---------------------------------------------------------------------
%  savePGL
%---------------------------------------------------------------------
/savePGL{
   /saveObj save def
}bind def

%---------------------------------------------------------------------
%  #copies newPage
%---------------------------------------------------------------------
/newPage{
   /#copies exch def
   showpage saveObj restore
   /#copies 1 def
}bind def

%----------------------------------------------------------------------
% x,y,npixels bmRow  % Bitmap row data, 1 row at a time...
%----------------------------------------------------------------------
/bmRow {
  /bmPixels  exch def
  /bmY       exch def
  /bmX       exch def

  currentpoint stroke moveto % save x,y stroke and moveto
  gsave                      % save graphics state
  1 setlinewidth             % linewidth
  0 setlinecap               % but cap
  [] 0 setdash               % solid style
  bmX .5 add bmY .5 add moveto % move to start of row
  %
  %  Read & decompress  a whole row of pixel color data via RLE
  %
  currentfile rleFlag readhexstring pop 
  0 get 1 eq 
  { /cumBytes 0 def
    { 
      currentfile rleStr readhexstring pop 
      dup 
      0 get 1 add exch % count rleStr
      1 get SCC        % count 
      dup              % dup count
      0 rlineto        % draw
      currentpoint stroke moveto     
      /cumBytes exch cumBytes add def 
      cumBytes bmPixels ge { exit } if 
    }loop 
  }{ 
    1 1 bmPixels
    {
      pop
      currentfile bmStr readhexstring pop 
      0 get SCC
      1 0 rlineto
      currentpoint stroke moveto     
    }for
  }ifelse 

  grestore
}bind def

%----------------------------------------------------------------------
% DPI PMAXX PMAXY PageHght TopMgn LftMgn LandFlag ColorModel initPGL
%----------------------------------------------------------------------
/initPGL {
   %---Page Constants
   /ColorModel exch def  /LandFlag exch def 
   /LeftMgn exch def     /TopMgn exch def
   /PageHeight exch def  /PY exch def       /PX exch def

   %---Select/Set Color model
   /ColorMap ColorChoices ColorModel get def   % default colors=b&w
   
   %---Save state & set output res
   savePGL 
   
   %---Set output res scaling, dpi on stack(300?)
   /dpiRes  exch def             % dots per inch
   /dphiRes dpiRes 100 div def   % pots per 1/100 inches (hinches)
   72 dpiRes div dup scale

   %---Set coordinate origin, & dir
   LandFlag 1 ne { 
      % Portrait Setup
      LeftMgn dphiRes mul PageHeight TopMgn sub dphiRes mul 
   }{
      % Landscape Setup
      90 rotate LeftMgn dphiRes mul TopMgn dphiRes mul neg 
   }ifelse
   translate 1 -1 scale

   %---Adjust font scale factor sizes, relative to 5000x5000
   0 1 6 { dup FSX exch get 4999 PX div mul FSX 3 1 roll put } for
   0 1 6 { dup FSY exch get 4999 PY div mul FSY 3 1 roll put } for

   %---Set default graphics state
   np 0 0 m
   1  SLC
   1  SLW
   [] 0 SLS
   1 1 1 1 SFX
   0 SCF
   <0000000000000000> SUF
   10 setmiterlimit
    0 setlinejoin 
    0 setlinecap
    gs  % save for clipping
    xs 0 0 PX PY ClipR
}bind def

1 setlinecap

%%EndProlog
 %%Page: 1 1
 300 3295 2543 1100 0 0 1 0 initPGL
 0 SCF
 [] 0 SLS
 1 SLW
 <ffffffffffffffff> SUF
 1 SFC
 1 SFS
 1 SFC
 1 SFM
 0 0 3295 2543 ClipR
 0 0 3295 2543 ClipR
 xs 1 SLC
 [] 0 SLS
 1 SLW
 xs 0 SLC
 1 SLW
 xs 15 SLC
 229 2311 3145 2311 Ln
 229 158 3145 158 Ln
 228 2312 3145 2312 Ln
 228 158 3145 158 Ln
 227 2313 3145 2313 Ln
 227 157 3145 157 Ln
 226 2313 3145 2313 Ln
 226 156 3145 156 Ln
 226 2314 3145 2314 Ln
 226 155 3145 155 Ln
 229 2311 229 2285 Ln
 229 158 229 185 Ln
 593 2311 593 2285 Ln
 593 158 593 185 Ln
 494 2424 584 2424 Ln
 633 2364 687 2364 Ln
 687 2364 658 2405 Ln
 658 2405 672 2405 Ln
 672 2405 683 2410 Ln
 683 2410 687 2414 Ln
 687 2414 692 2430 Ln
 692 2430 692 2440 Ln
 692 2440 687 2454 Ln
 687 2454 678 2465 Ln
 678 2465 663 2470 Ln
 663 2470 647 2470 Ln
 647 2470 633 2465 Ln
 633 2465 628 2460 Ln
 628 2460 623 2450 Ln
 958 2311 958 2285 Ln
 958 158 958 185 Ln
 859 2424 948 2424 Ln
 992 2389 992 2384 Ln
 992 2384 997 2375 Ln
 997 2375 1002 2369 Ln
 1002 2369 1012 2364 Ln
 1012 2364 1032 2364 Ln
 1032 2364 1042 2369 Ln
 1042 2369 1047 2375 Ln
 1047 2375 1052 2384 Ln
 1052 2384 1052 2394 Ln
 1052 2394 1047 2405 Ln
 1047 2405 1037 2419 Ln
 1037 2419 988 2470 Ln
 988 2470 1057 2470 Ln
 1322 2311 1322 2285 Ln
 1322 158 1322 185 Ln
 1223 2424 1313 2424 Ln
 1367 2384 1376 2379 Ln
 1376 2379 1392 2364 Ln
 1392 2364 1392 2470 Ln
 1687 2311 1687 2285 Ln
 1687 158 1687 185 Ln
 1680 2364 1665 2369 Ln
 1665 2369 1655 2384 Ln
 1655 2384 1651 2410 Ln
 1651 2410 1651 2424 Ln
 1651 2424 1655 2450 Ln
 1655 2450 1665 2465 Ln
 1665 2465 1680 2470 Ln
 1680 2470 1690 2470 Ln
 1690 2470 1705 2465 Ln
 1705 2465 1715 2450 Ln
 1715 2450 1720 2424 Ln
 1720 2424 1720 2410 Ln
 1720 2410 1715 2384 Ln
 1715 2384 1705 2369 Ln
 1705 2369 1690 2364 Ln
 1690 2364 1680 2364 Ln
 2051 2311 2051 2285 Ln
 2051 158 2051 185 Ln
 2030 2384 2039 2379 Ln
 2039 2379 2055 2364 Ln
 2055 2364 2055 2470 Ln
 2416 2311 2416 2285 Ln
 2416 158 2416 185 Ln
 2384 2389 2384 2384 Ln
 2384 2384 2389 2375 Ln
 2389 2375 2394 2369 Ln
 2394 2369 2404 2364 Ln
 2404 2364 2424 2364 Ln
 2424 2364 2434 2369 Ln
 2434 2369 2439 2375 Ln
 2439 2375 2444 2384 Ln
 2444 2384 2444 2394 Ln
 2444 2394 2439 2405 Ln
 2439 2405 2429 2419 Ln
 2429 2419 2380 2470 Ln
 2380 2470 2449 2470 Ln
 2780 2311 2780 2285 Ln
 2780 158 2780 185 Ln
 2754 2364 2808 2364 Ln
 2808 2364 2779 2405 Ln
 2779 2405 2793 2405 Ln
 2793 2405 2804 2410 Ln
 2804 2410 2808 2414 Ln
 2808 2414 2813 2430 Ln
 2813 2430 2813 2440 Ln
 2813 2440 2808 2454 Ln
 2808 2454 2799 2465 Ln
 2799 2465 2784 2470 Ln
 2784 2470 2768 2470 Ln
 2768 2470 2754 2465 Ln
 2754 2465 2749 2460 Ln
 2749 2460 2744 2450 Ln
 3145 2311 3145 2285 Ln
 3145 158 3145 185 Ln
 3158 2364 3109 2435 Ln
 3109 2435 3183 2435 Ln
 3158 2364 3158 2470 Ln
 229 2311 229 158 Ln
 3145 2311 3145 158 Ln
 228 2310 228 158 Ln
 3146 2312 3146 158 Ln
 227 2309 227 158 Ln
 3146 2313 3146 157 Ln
 226 2309 226 158 Ln
 3147 2313 3147 156 Ln
 226 2308 226 158 Ln
 3148 2314 3148 155 Ln
 229 2311 255 2311 Ln
 3145 2311 3119 2311 Ln
 148 2411 148 2321 Ln
 103 2216 93 2220 Ln
 93 2220 88 2236 Ln
 88 2236 88 2246 Ln
 88 2246 93 2261 Ln
 93 2261 108 2271 Ln
 108 2271 133 2276 Ln
 133 2276 158 2276 Ln
 158 2276 177 2271 Ln
 177 2271 188 2261 Ln
 188 2261 193 2246 Ln
 193 2246 193 2241 Ln
 193 2241 188 2225 Ln
 188 2225 177 2216 Ln
 177 2216 163 2211 Ln
 163 2211 158 2211 Ln
 158 2211 143 2216 Ln
 143 2216 133 2225 Ln
 133 2225 128 2241 Ln
 128 2241 128 2246 Ln
 128 2246 133 2261 Ln
 133 2261 143 2271 Ln
 143 2271 158 2276 Ln
 229 2176 255 2176 Ln
 3145 2176 3119 2176 Ln
 229 2042 255 2042 Ln
 3145 2042 3119 2042 Ln
 229 1907 255 1907 Ln
 3145 1907 3119 1907 Ln
 148 2008 148 1917 Ln
 88 1867 88 1812 Ln
 88 1812 128 1842 Ln
 128 1842 128 1827 Ln
 128 1827 133 1817 Ln
 133 1817 138 1812 Ln
 138 1812 153 1807 Ln
 153 1807 163 1807 Ln
 163 1807 177 1812 Ln
 177 1812 188 1822 Ln
 188 1822 193 1837 Ln
 193 1837 193 1853 Ln
 193 1853 188 1867 Ln
 188 1867 183 1872 Ln
 183 1872 172 1877 Ln
 229 1773 255 1773 Ln
 3145 1773 3119 1773 Ln
 229 1638 255 1638 Ln
 3145 1638 3119 1638 Ln
 229 1504 255 1504 Ln
 3145 1504 3119 1504 Ln
 88 1510 93 1526 Ln
 93 1526 108 1536 Ln
 108 1536 133 1540 Ln
 133 1540 148 1540 Ln
 148 1540 172 1536 Ln
 172 1536 188 1526 Ln
 188 1526 193 1510 Ln
 193 1510 193 1501 Ln
 193 1501 188 1485 Ln
 188 1485 172 1475 Ln
 172 1475 148 1470 Ln
 148 1470 133 1470 Ln
 133 1470 108 1475 Ln
 108 1475 93 1485 Ln
 93 1485 88 1501 Ln
 88 1501 88 1510 Ln
 229 1369 255 1369 Ln
 3145 1369 3119 1369 Ln
 229 1235 255 1235 Ln
 3145 1235 3119 1235 Ln
 113 1267 108 1267 Ln
 108 1267 98 1262 Ln
 98 1262 93 1257 Ln
 93 1257 88 1247 Ln
 88 1247 88 1227 Ln
 88 1227 93 1216 Ln
 93 1216 98 1211 Ln
 98 1211 108 1206 Ln
 108 1206 118 1206 Ln
 118 1206 128 1211 Ln
 128 1211 143 1222 Ln
 143 1222 193 1271 Ln
 193 1271 193 1201 Ln
 229 1100 255 1100 Ln
 3145 1100 3119 1100 Ln
 229 966 255 966 Ln
 3145 966 3119 966 Ln
 88 953 158 1002 Ln
 158 1002 158 927 Ln
 88 953 193 953 Ln
 229 831 255 831 Ln
 3145 831 3119 831 Ln
 229 697 255 697 Ln
 3145 697 3119 697 Ln
 103 668 93 673 Ln
 93 673 88 688 Ln
 88 688 88 698 Ln
 88 698 93 714 Ln
 93 714 108 724 Ln
 108 724 133 728 Ln
 133 728 158 728 Ln
 158 728 177 724 Ln
 177 724 188 714 Ln
 188 714 193 698 Ln
 193 698 193 693 Ln
 193 693 188 678 Ln
 188 678 177 668 Ln
 177 668 163 663 Ln
 163 663 158 663 Ln
 158 663 143 668 Ln
 143 668 133 678 Ln
 133 678 128 693 Ln
 128 693 128 698 Ln
 128 698 133 714 Ln
 133 714 143 724 Ln
 143 724 158 728 Ln
 229 562 255 562 Ln
 3145 562 3119 562 Ln
 229 428 255 428 Ln
 3145 428 3119 428 Ln
 88 440 93 454 Ln
 93 454 103 459 Ln
 103 459 113 459 Ln
 113 459 123 454 Ln
 123 454 128 445 Ln
 128 445 133 424 Ln
 133 424 138 409 Ln
 138 409 148 399 Ln
 148 399 158 394 Ln
 158 394 172 394 Ln
 172 394 183 399 Ln
 183 399 188 404 Ln
 188 404 193 419 Ln
 193 419 193 440 Ln
 193 440 188 454 Ln
 188 454 183 459 Ln
 183 459 172 464 Ln
 172 464 158 464 Ln
 158 464 148 459 Ln
 148 459 138 450 Ln
 138 450 133 434 Ln
 133 434 128 415 Ln
 128 415 123 404 Ln
 123 404 113 399 Ln
 113 399 103 399 Ln
 103 399 93 404 Ln
 93 404 88 419 Ln
 88 419 88 440 Ln
 229 293 255 293 Ln
 3145 293 3119 293 Ln
 229 158 255 158 Ln
 3145 158 3119 158 Ln
 108 233 103 224 Ln
 103 224 88 208 Ln
 88 208 193 208 Ln
 88 113 93 128 Ln
 93 128 108 138 Ln
 108 138 133 143 Ln
 133 143 148 143 Ln
 148 143 172 138 Ln
 172 138 188 128 Ln
 188 128 193 113 Ln
 193 113 193 103 Ln
 193 103 188 88 Ln
 188 88 172 78 Ln
 172 78 148 73 Ln
 148 73 133 73 Ln
 133 73 108 78 Ln
 108 78 93 88 Ln
 93 88 88 103 Ln
 88 103 88 113 Ln
 xs 10 SLC
 1 SLW
 656 158 671 189 Ln
 671 189 700 249 Ln
 700 249 729 307 Ln
 729 307 759 363 Ln
 759 363 789 418 Ln
 789 418 818 470 Ln
 818 470 848 521 Ln
 848 521 877 570 Ln
 877 570 906 618 Ln
 906 618 936 663 Ln
 936 663 965 707 Ln
 965 707 995 750 Ln
 995 750 1024 790 Ln
 1024 790 1054 829 Ln
 1054 829 1083 865 Ln
 1083 865 1112 900 Ln
 1112 900 1142 934 Ln
 1142 934 1171 966 Ln
 1171 966 1201 996 Ln
 1201 996 1231 1024 Ln
 1231 1024 1260 1050 Ln
 1260 1050 1289 1075 Ln
 1289 1075 1318 1098 Ln
 1318 1098 1348 1119 Ln
 1348 1119 1378 1138 Ln
 1378 1138 1407 1156 Ln
 1407 1156 1437 1171 Ln
 1437 1171 1466 1185 Ln
 1466 1185 1495 1197 Ln
 1495 1197 1525 1208 Ln
 1525 1208 1554 1217 Ln
 1554 1217 1584 1224 Ln
 1584 1224 1613 1229 Ln
 1613 1229 1643 1233 Ln
 1643 1233 1672 1235 Ln
 1672 1235 1701 1235 Ln
 1701 1235 1731 1233 Ln
 1731 1233 1761 1229 Ln
 1761 1229 1790 1224 Ln
 1790 1224 1820 1217 Ln
 1820 1217 1849 1208 Ln
 1849 1208 1878 1197 Ln
 1878 1197 1908 1185 Ln
 1908 1185 1937 1171 Ln
 1937 1171 1967 1156 Ln
 1967 1156 1996 1138 Ln
 1996 1138 2026 1119 Ln
 2026 1119 2055 1098 Ln
 2055 1098 2084 1075 Ln
 2084 1075 2114 1050 Ln
 2114 1050 2143 1024 Ln
 2143 1024 2173 996 Ln
 2173 996 2203 966 Ln
 2203 966 2232 934 Ln
 2232 934 2261 900 Ln
 2261 900 2290 865 Ln
 2290 865 2320 829 Ln
 2320 829 2350 790 Ln
 2350 790 2379 750 Ln
 2379 750 2409 707 Ln
 2409 707 2438 663 Ln
 2438 663 2467 618 Ln
 2467 618 2497 570 Ln
 2497 570 2526 521 Ln
 2526 521 2556 470 Ln
 2556 470 2585 418 Ln
 2585 418 2615 363 Ln
 2615 363 2644 307 Ln
 2644 307 2673 249 Ln
 2673 249 2703 189 Ln
 2703 189 2718 158 Ln
 xs 11 SLC
 593 2311 612 2297 Ln
 612 2297 641 2276 Ln
 641 2276 659 2262 Ln
 723 2215 724 2215 Ln
 723 2215 759 2189 Ln
 759 2189 787 2167 Ln
 852 2119 853 2119 Ln
 852 2119 906 2080 Ln
 906 2080 917 2072 Ln
 981 2024 983 2024 Ln
 981 2024 1024 1993 Ln
 1024 1993 1046 1977 Ln
 1110 1929 1112 1929 Ln
 1110 1929 1142 1906 Ln
 1142 1906 1171 1885 Ln
 1171 1885 1175 1881 Ln
 1239 1833 1241 1833 Ln
 1239 1833 1289 1797 Ln
 1289 1797 1304 1786 Ln
 1368 1739 1370 1739 Ln
 1368 1739 1407 1710 Ln
 1407 1710 1433 1690 Ln
 1498 1642 1499 1642 Ln
 1498 1642 1554 1602 Ln
 1554 1602 1562 1595 Ln
 1626 1548 1628 1548 Ln
 1626 1548 1672 1514 Ln
 1672 1514 1692 1500 Ln
 1756 1452 1758 1452 Ln
 1756 1452 1790 1428 Ln
 1790 1428 1820 1406 Ln
 1820 1406 1822 1405 Ln
 1885 1357 1886 1357 Ln
 1885 1357 1937 1319 Ln
 1937 1319 1950 1309 Ln
 2014 1261 2016 1261 Ln
 2014 1261 2055 1232 Ln
 2055 1232 2079 1214 Ln
 2143 1166 2145 1166 Ln
 2143 1166 2173 1145 Ln
 2173 1145 2203 1123 Ln
 2203 1123 2208 1118 Ln
 2273 1071 2274 1071 Ln
 2273 1071 2320 1037 Ln
 2320 1037 2337 1024 Ln
 2401 976 2403 976 Ln
 2401 976 2438 949 Ln
 2438 949 2467 927 Ln
 2531 880 2533 880 Ln
 2531 880 2585 841 Ln
 2585 841 2595 833 Ln
 2660 785 2661 785 Ln
 2660 785 2703 754 Ln
 2703 754 2725 737 Ln
 2789 689 2791 689 Ln
 2789 689 2821 666 Ln
 2821 666 2850 645 Ln
 2850 645 2854 642 Ln
 2918 595 2920 595 Ln
 2918 595 2968 558 Ln
 2968 558 2983 546 Ln
 3047 498 3049 498 Ln
 3047 498 3086 471 Ln
 3086 471 3112 451 Ln
 xs 12 SLC
 229 1504 230 1504 Ln
 229 1504 231 1504 Ln
 262 1504 263 1504 Ln
 294 1504 296 1504 Ln
 326 1504 328 1504 Ln
 358 1504 360 1504 Ln
 391 1504 392 1504 Ln
 423 1504 424 1504 Ln
 455 1504 457 1504 Ln
 487 1504 489 1504 Ln
 519 1504 521 1504 Ln
 551 1504 553 1504 Ln
 584 1504 585 1504 Ln
 616 1504 617 1504 Ln
 648 1504 650 1504 Ln
 680 1504 682 1504 Ln
 712 1504 714 1504 Ln
 745 1504 746 1504 Ln
 777 1504 778 1504 Ln
 809 1504 811 1504 Ln
 841 1504 843 1504 Ln
 873 1504 875 1504 Ln
 906 1504 907 1504 Ln
 938 1504 939 1504 Ln
 970 1504 972 1504 Ln
 1002 1504 1004 1504 Ln
 1034 1504 1036 1504 Ln
 1066 1504 1068 1504 Ln
 1099 1504 1100 1504 Ln
 1131 1504 1132 1504 Ln
 1163 1504 1165 1504 Ln
 1195 1504 1197 1504 Ln
 1227 1504 1229 1504 Ln
 1260 1504 1261 1504 Ln
 1292 1504 1293 1504 Ln
 1324 1504 1326 1504 Ln
 1356 1504 1358 1504 Ln
 1388 1504 1390 1504 Ln
 1420 1504 1422 1504 Ln
 1453 1504 1454 1504 Ln
 1485 1504 1486 1504 Ln
 1517 1504 1519 1504 Ln
 1549 1504 1551 1504 Ln
 1581 1504 1583 1504 Ln
 1614 1504 1615 1504 Ln
 1646 1504 1647 1504 Ln
 1678 1504 1680 1504 Ln
 1710 1504 1712 1504 Ln
 1742 1504 1744 1504 Ln
 1775 1504 1776 1504 Ln
 1807 1504 1808 1504 Ln
 1839 1504 1841 1504 Ln
 1871 1504 1873 1504 Ln
 1903 1504 1905 1504 Ln
 1935 1504 1937 1504 Ln
 1968 1504 1969 1504 Ln
 2000 1504 2001 1504 Ln
 2032 1504 2034 1504 Ln
 2064 1504 2066 1504 Ln
 2096 1504 2098 1504 Ln
 2129 1504 2130 1504 Ln
 2161 1504 2162 1504 Ln
 2193 1504 2195 1504 Ln
 2225 1504 2227 1504 Ln
 2257 1504 2259 1504 Ln
 2290 1504 2291 1504 Ln
 2322 1504 2323 1504 Ln
 2354 1504 2355 1504 Ln
 2386 1504 2388 1504 Ln
 2418 1504 2420 1504 Ln
 2450 1504 2452 1504 Ln
 2483 1504 2484 1504 Ln
 2515 1504 2516 1504 Ln
 2547 1504 2549 1504 Ln
 2579 1504 2581 1504 Ln
 2611 1504 2613 1504 Ln
 2644 1504 2645 1504 Ln
 2676 1504 2677 1504 Ln
 2708 1504 2710 1504 Ln
 2740 1504 2742 1504 Ln
 2772 1504 2774 1504 Ln
 2804 1504 2806 1504 Ln
 2837 1504 2838 1504 Ln
 2869 1504 2870 1504 Ln
 2901 1504 2903 1504 Ln
 2933 1504 2935 1504 Ln
 2965 1504 2967 1504 Ln
 2998 1504 2999 1504 Ln
 3030 1504 3031 1504 Ln
 3062 1504 3064 1504 Ln
 3094 1504 3096 1504 Ln
 3126 1504 3128 1504 Ln
 xs 15 SLC
 1 newPage
 %%Trailer
 %!END
