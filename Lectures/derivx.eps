%!PS-Adobe-2.0 EPSF-1.2
%%Creator: PGL v-2.00 by AnSoft, Inc.
%%Pages:   1
%%BoundingBox: 0 0 611 791
%%EndComments
%---------------------------------------------------------------------
%
%------------------ Copyright (C) 1991 AnSoft,Inc.--------------------
%
%---------------------------------------------------------------------
% Temporary variables used
%---------------------------------------------------------------------
%  PROC          VARIABLES
%  PatternFill : fx1,fx2,fy1,fy2,fwidth
%
%---------------------------------------------------------------------
%  PGL Global Data
%---------------------------------------------------------------------
/LineColor 1   def  % -1 turns off Line & Outline drawing
/LineStyle []  def  % 
/Phase     0   def  %
/AreaColor 1   def  % -1 turns off Area Fills
/FillFlag  1   def  % 1-Outline, 2-Fill, 3-Both
/FillStyle 0   def  % 
/FillMode  1   def  %  1-opaque, 0-transparent
/MaxColor  15  def  %
/CurFont   0   def  % FontNames index
/topFlagV  0   def  % Text Justification(Vertical) Flags 
/ctrFlagV  0   def  %                   (Vertical)
/ctrFlagH  0   def  %                   (Horizonal)
/LineWidth 1   def  %
/UnitWidth 1   def  % Unit Line thickness in 1/300'ths inches
/PatSize   3   def  % Fill Pattern Scale Factor
/PatChar   48  def  % Fill Pattern Ascii Value
/UserChar  60  def  % UserFill Pattern Ascii Value
/FillChar  (?) def  % UserFill Pattern Ascii Value
/UserFillPat <0000000000000000> def %- empty fill by default

%--------------------------------------------------------------------
% Bitmap support
%--------------------------------------------------------------------
/rleFlag   1 string def
/rleStr    2 string def
/bmStr     1 string def

%--------------------------------------------------------------------
%  Color Tables and Mappings
%--------------------------------------------------------------------
/bwColors 256 array def
0 1 255 { bwColors exch 0 put } for  % zero all colors to black
bwColors 0 1 put                     % index 0 - white, all others black

/grayColors 256 array def
0 1 255 { grayColors exch 0 put } for  % zero all colors to black
grayColors  0  1.00 put 
grayColors  1  0.11 put 
grayColors  2  0.59 put 
grayColors  3  0.70 put 
grayColors  4  0.30 put 
grayColors  5  0.41 put 
grayColors  6  0.40 put 
grayColors  7  0.97 put 
grayColors  8  0.50 put 
grayColors  9  0.40 put 
grayColors  10 0.73 put 
grayColors  11 0.80 put 
grayColors  12 0.53 put 
grayColors  13 0.60 put 
grayColors  14 0.93 put 
grayColors  15 0.00 put 

/rgbColors 256 array def
0 1 255 { rgbColors exch [0 0 0] put } for  % zero all colors to black
rgbColors  0  [1 1 1]           put         % white
rgbColors  1  [0 0 1]           put         % blue
rgbColors  2  [0 1 0]           put         % green
rgbColors  3  [0 1 1]           put         % cyan
rgbColors  4  [1 0 0]           put         % red
rgbColors  5  [1 0 1]           put         % magenta
rgbColors  6  [0.67  0.33  0]   put         % brown
rgbColors  7  [0.9 0.9 0.9]     put         % darkgray
rgbColors  8  [0.75 0.75 0.75]  put         % lightgray
rgbColors  9  [0.33 0.33 1]     put         % lightblue
rgbColors  10 [0.33  1 0.33]    put         % lightgreen
rgbColors  11 [0.33 1 1]        put         % lightcyan
rgbColors  12 [1 0.33  0.33]    put         % lightred
rgbColors  13 [1 0.33  1]       put         % lightmagenta
rgbColors  14 [1 1 0.33]        put         % yellow
rgbColors  15 [0 0 0]           put         % black
        
/ColorModel  0 def
/ColorChoices [ bwColors grayColors rgbColors ] def
/ColorMap ColorChoices ColorModel get def   % default colors=b&w

%--------------------------------------------------------------------
%----Page Size, Set By Main Pgm
%--------------------------------------------------------------------
%
/PX  1950 def
/PY  1194 def

%--------------------------------------------------------------------
%----Text Scale Factors
%--------------------------------------------------------------------
/SX  1800 def   % Base size of page width/height, 
/SY  1194 def   % for scaling fonts against

/FSX  [  6  7   8  10  12  9  10 ] def  % Unit Font Scale factors
/FSY  [ -2.3  -4.6 -4.6 -4.6 -4.6 -4.6 -4.6 ] def  % Neg's to invert Y axis

%--------------------------------------------------------------------
%---- Users Font Scale Factors
%--------------------------------------------------------------------
/FSXN 1 def
/FSXD 1 def
/FSYN 1 def
/FSYD 1 def

%---------------------------------------------------------------------
%  Fonts Names Used by PGL
%  These replace the following vector fonts provided with PGL
%  If you change these you may need to change the scale factors
%  in FSX and FSY.
%---------------------------------------------------------------------
/FontNames
[
  /Helvetica          % small
  /Courier            % simplex
  /Helvetica          % duplex
  /Times-Roman        % triplex
  /Times-BoldItalic   % gothic 
  /Courier-Oblique    % script simplex
  /Helvetica-Oblique  % script duplex
] def

%---------------------------------------------------------------------
%  Fill Pattern Font based on "PS Lang Ref Man (Red Book) - Chap 5"
%---------------------------------------------------------------------
/newfont 10 dict def
newfont 
begin
 /FontType 3 def
 /FontMatrix [ .125 0 0 .125 0 0 ] def
 /FontBBox   [ 0 0 8 8 ]     def

 /Encoding 256 array def
 0 1 255 { Encoding exch /.notdef put } for
  Encoding  48 /empty     put  % '0'
  Encoding  49 /solid     put  % '1'
  Encoding  50 /lfill     put  % '2'
  Encoding  51 /slash     put  % '3'
  Encoding  52 /hslash    put  % '4'
  Encoding  53 /hbkslash  put  % '5'
  Encoding  54 /bkslash   put  % '6'
  Encoding  55 /hatch     put  % '7'
  Encoding  56 /xhatch    put  % '8'
  Encoding  57 /intleav   put  % '9'
  Encoding  58 /widedot   put  % '10'
  Encoding  59 /closedot  put  % '11'
  Encoding  60 /patfill   put  % '12'

 /CharProcs 14 dict def
 CharProcs 
 begin
  /.notdef {} bind def
  /empty    { 8 8 true [1 0 0 1 0 0] { <0000000000000000> } imagemask } bind def
  /solid    { 8 8 true [1 0 0 1 0 0] { <ffffffffffffffff> } imagemask } bind def
  /lfill    { 8 8 true [1 0 0 1 0 0] { <ffff0000ffff0000> } imagemask } bind def
  /slash    { 8 8 true [1 0 0 1 0 0] { <0102040810204080> } imagemask } bind def 
  /hslash   { 8 8 true [1 0 0 1 0 0] { <e0c183070e1c3870> } imagemask } bind def 
  /hbkslash { 8 8 true [1 0 0 1 0 0] { <f0783c1e0f87c3e1> } imagemask } bind def 
  /bkslash  { 8 8 true [1 0 0 1 0 0] { <a5d269b45a2d964b> } imagemask } bind def 
  /hatch    { 8 8 true [1 0 0 1 0 0] { <ff888888ff888888> } imagemask } bind def 
  /xhatch   { 8 8 true [1 0 0 1 0 0] { <8142241818244281> } imagemask } bind def 
  /intleav  { 8 8 true [1 0 0 1 0 0] { <cc33cc33cc33cc33> } imagemask } bind def 
  /widedot  { 8 8 true [1 0 0 1 0 0] { <8000080080000800> } imagemask } bind def 
  /closedot { 8 8 true [1 0 0 1 0 0] { <8800220088002200> } imagemask } bind def 
  /patfill  { 8 8 true [1 0 0 1 0 0] { UserFillPat } imagemask } bind def 
 end

 /BuildChar
 {
    exch
    begin  
      dup UserChar eq{                 
        8 0 setcharwidth            % userfillstyle
      }{
        8 0 0 0 8 8 setcachedevice  % standard fillstyle
      }ifelse
      Encoding exch get  
      CharProcs exch get 
    end
    exec
 }def
end 

/FillFont newfont definefont pop
%----- End Of Area Fill Font Def--------------------------------------

%---------------------------------------------------------------------
%  PGL Redefinitions
%---------------------------------------------------------------------
/gs   { gsave } bind def         
/gr   { grestore } bind def  
/m    { moveto } bind def        
/l    { lineto currentpoint stroke moveto } bind def  
/rm   { rmoveto } bind def       
/rl   { rlineto } bind def  
/cp   { closepath } bind def     
/np   { newpath } bind def   
/sg   { setgray } bind def       
/st   { stroke } bind def     
/sd   { setdash } bind def       
/ex   { exch } bind def
/in   { index } bind def         
/sw   { stringwidth } bind def 
/cxy  { currentpoint } bind def  
/slw  { setlinewidth } bind def 

%---------------------------------------------------------------------
% str strlen nchars
%---------------------------------------------------------------------
/strlen
{
    dup           % str str
    /itmp 0 def
    { /itmp itmp 1 add def pop } forall  % count characters
    itmp          % nchars
} bind def

%---------------------------------------------------------------------
% string txtCtrH   % Center Justify a string Horiz
%---------------------------------------------------------------------
/txtCtrH { dup sw pop 2 div neg dup 0 rm /ctrFlagH exch def } bind def 

%---------------------------------------------------------------------
% wx wy string atxtCtrH   % Center Justify a string Horiz
%---------------------------------------------------------------------
/atxtCtrH { 
    3 -1 roll   % wy string wx
    dup        % wy string wx wx
    4 1 roll  % wx wy string wx
    /xW ex def % wx wy string
    strlen     % wx wy string nchars
    xW mul
    /xW ex def
    dup        % str str
    sw         % str wx wy
    pop        % str wx
    xW add     % str wx+xW
    2 div neg 
    dup 
    0 rm 
    /ctrFlagH exch def 
} bind def 

%---------------------------------------------------------------------
% txtCtrHend   % Finish Center Justifying a string Horiz
%                cp shoud be at center of string
%---------------------------------------------------------------------
/txtCtrHend { ctrFlagH 0 rm /ctrFlagH 0 def } bind def 

%---------------------------------------------------------------------
% string txtRtH   % Right Justify a string Horiz
%---------------------------------------------------------------------
/txtRtH  {dup sw pop neg 0 rm} bind def 

%---------------------------------------------------------------------
% string txtRtH   % Right Justify a string Horiz
%---------------------------------------------------------------------
/atxtRtH  {
    3 -1 roll   % wy string wx
    dup        % wy string wx wx
    4 1 roll  % wx wy string wx
    /xW ex def % wx wy string
    strlen     % wx wy string nchars
    xW mul
    /xW ex def
    dup 
    sw 
    pop 
    xW add     % str wx+xW
    neg 0 rm
} bind def 

%---------------------------------------------------------------------
% txtCtrV  % Center Justify a string Vertically
%---------------------------------------------------------------------
/txtCtrV { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 2 div 0 ex gr rm pop /ctrFlagV 1 def } bind def 

%---------------------------------------------------------------------
% txtCtrVend  % Center Justify a string Vertically
%---------------------------------------------------------------------
/txtCtrVend { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
              sub neg 2 div 0 ex gr neg rm pop /ctrFlagV 0 def } bind def 

%---------------------------------------------------------------------
% string txtTopV  % Top Justify a string Vertically
%---------------------------------------------------------------------
/txtTopV { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 0 ex gr rm pop /topFlagV 1 def } bind def 

%---------------------------------------------------------------------
% txtTopVend  % Top Justify a string Vertically
%---------------------------------------------------------------------
/txtTopVend { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 0 ex gr neg rm pop /topFlagV 0 def } bind def 

%---------------------------------------------------------------------
%  ash   display text & readjusts cp for Top & Center Vertical
%        text justification
%---------------------------------------------------------------------
/ash {
   ashow
   topFlagV 1 eq {
     txtTopVend
   } if
   ctrFlagV 1 eq {
     txtCtrVend
   } if
   ctrFlagH 0 ne {
     txtCtrHend
   } if
} bind def

%---------------------------------------------------------------------
%  sh   display text & readjusts cp for Top & Center Vertical
%       text justification
%---------------------------------------------------------------------
/sh {
   show
   topFlagV 1 eq {
     txtTopVend
   } if
   ctrFlagV 1 eq {
     txtCtrVend
   } if
   ctrFlagH 0 ne {
     txtCtrHend
   } if
} bind def

%---------------------------------------------------------------------
% xs  % Extended Stroke 
%---------------------------------------------------------------------
/xs { 
  LineColor -1 ne
  { cxy st m }{ cxy np m }ifelse 
} bind def                       

%---------------------------------------------------------------------
%  color SLC   % SetLineColor  % -1 turns off line drawing
%---------------------------------------------------------------------
/SLC { dup /LineColor exch def SCC }bind def

%---------------------------------------------------------------------
%  index [r g b] SRC   % SetRgbColor
%---------------------------------------------------------------------
/SRC { 
/rgbTmp   exch def
/rgbIndex exch def
/rgbAbs   0.0  def
rgbTmp 0 get 1. 255. div mul  rgbTmp exch 0 exch put
rgbTmp 1 get 1. 255. div mul  rgbTmp exch 1 exch put
rgbTmp 2 get 1. 255. div mul  rgbTmp exch 2 exch put
rgbColors rgbIndex rgbTmp put  
rgbTmp { dup mul rgbAbs add /rgbAbs exch def } forall
grayColors rgbIndex rgbAbs sqrt put
}bind def

%---------------------------------------------------------------------
%  color SCC  % SetCurColor
%---------------------------------------------------------------------
/SCC { 
  dup -1 ne 
  { % -1 turns of line drawing
     ColorMap exch get 
     dup type /arraytype ne { 
       setgray 
     }{ 
       {} forall setrgbcolor 
     } ifelse
  }{ 
     pop  % remove -1 from stack
  }ifelse
}bind def

%---------------------------------------------------------------------
%  [] phase SLS  % SetLineStyle
%---------------------------------------------------------------------
/SLS { 
   /Phase exch def
   /LineStyle exch def 
   LineStyle Phase setdash 
}bind def

%---------------------------------------------------------------------
%  width SLW % SetLineWidth ( 1/300 inch )
%---------------------------------------------------------------------
/SLW { 
   /LineWidth exch def 
   LineWidth UnitWidth mul setlinewidth 
}bind def

%---------------------------------------------------------------------
%   color SFC % SetFillColor
%---------------------------------------------------------------------
/SFC {  /AreaColor exch def }bind def

%---------------------------------------------------------------------
%  <pattern> SUF  % SetUserFill pattern = hex no 
%---------------------------------------------------------------------
/SUF {  
    /UserFillPat exch def  % set pattern
    /FillStyle 12 def      % set flag
}bind def

%---------------------------------------------------------------------
%  style SFS  % SetFillStyle style no (0-11)
%---------------------------------------------------------------------
/SFS {  /FillStyle exch def }bind def

%---------------------------------------------------------------------
%  mode SFM  % SetFillMode   ( 1-Opaque, 2-Transparent)
%---------------------------------------------------------------------
/SFM {  /FillMode exch def }bind def

%---------------------------------------------------------------------
%  fontno SCF SetCurFont
%---------------------------------------------------------------------
/SCF {
 dup  /CurFont exch def        % save font no.
 FontNames exch get findfont 
   [ FSX CurFont get FSXN mul FSXD div PX mul SX div 0 0
     FSY CurFont get FSYN mul FSYD div PY mul SY div 0 0 ]
   makefont setfont 
 }bind def

%---------------------------------------------------------------------
%  xn xd yn yd SFX    % SetFontScale
%---------------------------------------------------------------------
/SFX {
  /FSYD exch def    /FSYN exch def  
  /FSXD exch def    /FSXN exch def
  CurFont SCF
}bind def

%---------------------------------------------------------------------
%  [ f1 f2 f3 f4 f5 f6 f7 ] SFNS   % SetFontNames
%---------------------------------------------------------------------
/SFNS {
  /FontNames exch def
}bind def

%---------------------------------------------------------------------
% [7 xsizes] [7 ysizes] SFZ  % SetFontSizes
%---------------------------------------------------------------------
/SFSZ {
  /FSY exch def
  /FSX exch def
}bind def

%---------------------------------------------------------------------
%  px py SPS  % SetPageSize
%---------------------------------------------------------------------
/SPS { /PY exch def  /PX exch def }bind def

%---------------------------------------------------------------------
%  x y color Pix  % SetPixel  1-Pixel = 1/300" pixel!
%---------------------------------------------------------------------
/Pix { 
gsave                     %
SCC moveto                % set color & position
1 linewidth [] 0 setdash  % set attributes
1 0 rlineto stroke        % do it!
grestore                  %
} bind def                       

%---------------------------------------------------------------------
%  x1 x2 y2 y2 Ln  % Line
%---------------------------------------------------------------------
/Ln { gs np 4 -2 roll m l st gr } bind def                       

%---------------------------------------------------------------------
%  x1 y1 x2 y2 flag Rect   (flag: 1-outline,2-fill,3-both)
%---------------------------------------------------------------------
/Rect { 
    /FillFlag exch def 
    gs np DrawRect FillArea OutLine gr 
} bind def

%---------------------------------------------------------------------
% x1 y1 x2 y2 x3 y3 .... flag PolyF  % PolyFill - fill current path
%---------------------------------------------------------------------
/PolyF { 
    /FillFlag exch def 
    gs closepath FillArea OutLine gr 
} bind def

%---------------------------------------------------------------------
%  x1 y1 x2 y2 ClipR % ClipRect 
%---------------------------------------------------------------------
/ClipR { 
    cxy 6 2 roll       % cx cy x1 y1 x2 y2
    gr gs
    0 setlinewidth
    np DrawRect eoclip np 
    m 
    %-- Reset graphics state
    LineWidth SLW
    LineColor SLC
    FSXN FSXD FSYN FSYD SFX
    CurFont   SCF
    LineStyle 0 setdash
} bind def

%-PRIVATE-------------------------------------------------------------
%  x1 y1 x2 y2 DrawRect 
%---------------------------------------------------------------------
/DrawRect { 
    3 in 3 in moveto 
    1 in 3 in lineto 
    3 in 1 in 4 -2 roll lineto lineto pop pop closepath % lineto
} bind def

%-PRIVATE-------------------------------------------------------------
%  xc yc sa ea rx ry DrawArc    
%---------------------------------------------------------------------
/DrawArc { 
   /savematrix matrix currentmatrix def 
   6 -2 roll translate    
   scale 
   0 0 1 5 -2 roll 
   1 -1 scale arc 1 -1 scale
   savematrix setmatrix
}bind def

%---------------------------------------------------------------------
%  xc yc sa ea rx ry Arc
%---------------------------------------------------------------------
/Arc { gs np DrawArc [] 0 sd st gr } bind def   

%---------------------------------------------------------------------
%  xc yc sa ea rx ry flag Pie   (flag: 1-Outline,2-Fill,3-Both)
%---------------------------------------------------------------------
/Pie { 
    /FillFlag exch def
    gs np 6 -2 roll 2 copy 2 copy m 8 4 roll 
    DrawArc cp FillArea OutLine gr 
} bind def   

%---------------------------------------------------------------------
%  xc yc rx ry flag ELLIPSE (flag: 1-Outline,2-Fill,3-Both)
%---------------------------------------------------------------------
/Ellipse { 
    /FillFlag exch def
     gs np 0 360 4 2 roll DrawArc FillArea OutLine gr 
}bind def   

%-PRIVATE-------------------------------------------------------------
%  OutLine
%---------------------------------------------------------------------
/OutLine  { 
  FillFlag 1 and 1 eq { 
    [] 0 sd LineColor SCC st 
  }if 
}bind def

%-PRIVATE-------------------------------------------------------------
%  FillArea  - fills current path
%---------------------------------------------------------------------
/FillArea { 
  FillFlag 2 and 2 eq { 
     gs eoclip 
     AreaColor SCC
     PatternFill
     gr
  }if 
}bind def

%-PRIVATE-------------------------------------------------------------
%  PatternFill 
%---------------------------------------------------------------------
/PatternFill {
   /psize 8 PatSize mul def
   /FillFont findfont psize scalefont setfont % set Pattern font
   FillChar 0 FillStyle PatChar add put               % fill char index
   FillMode 1 eq { gsave 1 setgray fill grestore }if  % erase background
   pathbbox                                           % llx lly  urx ury
   newpath              
   ceiling cvi /fy2 exch def 
   ceiling cvi /fx2 exch def 
   cvi 7 not and /fy1 exch def 
   cvi 7 not and /fx1 exch def
   fx2 fx1 sub psize div ceiling cvi
   /fwidth exch def
   fy1 psize fy2                          %
   {                                      %
     fx1 exch moveto                      %
     fwidth { FillChar show } repeat      %
   } for                                  %
} bind def

%---------------------------------------------------------------------
%  savePGL
%---------------------------------------------------------------------
/savePGL{
   /saveObj save def
}bind def

%---------------------------------------------------------------------
%  #copies newPage
%---------------------------------------------------------------------
/newPage{
   /#copies exch def
   showpage saveObj restore
   /#copies 1 def
}bind def

%----------------------------------------------------------------------
% x,y,npixels bmRow  % Bitmap row data, 1 row at a time...
%----------------------------------------------------------------------
/bmRow {
  /bmPixels  exch def
  /bmY       exch def
  /bmX       exch def

  currentpoint stroke moveto % save x,y stroke and moveto
  gsave                      % save graphics state
  1 setlinewidth             % linewidth
  0 setlinecap               % but cap
  [] 0 setdash               % solid style
  bmX .5 add bmY .5 add moveto % move to start of row
  %
  %  Read & decompress  a whole row of pixel color data via RLE
  %
  currentfile rleFlag readhexstring pop 
  0 get 1 eq 
  { /cumBytes 0 def
    { 
      currentfile rleStr readhexstring pop 
      dup 
      0 get 1 add exch % count rleStr
      1 get SCC        % count 
      dup              % dup count
      0 rlineto        % draw
      currentpoint stroke moveto     
      /cumBytes exch cumBytes add def 
      cumBytes bmPixels ge { exit } if 
    }loop 
  }{ 
    1 1 bmPixels
    {
      pop
      currentfile bmStr readhexstring pop 
      0 get SCC
      1 0 rlineto
      currentpoint stroke moveto     
    }for
  }ifelse 

  grestore
}bind def

%----------------------------------------------------------------------
% DPI PMAXX PMAXY PageHght TopMgn LftMgn LandFlag ColorModel initPGL
%----------------------------------------------------------------------
/initPGL {
   %---Page Constants
   /ColorModel exch def  /LandFlag exch def 
   /LeftMgn exch def     /TopMgn exch def
   /PageHeight exch def  /PY exch def       /PX exch def

   %---Select/Set Color model
   /ColorMap ColorChoices ColorModel get def   % default colors=b&w
   
   %---Save state & set output res
   savePGL 
   
   %---Set output res scaling, dpi on stack(300?)
   /dpiRes  exch def             % dots per inch
   /dphiRes dpiRes 100 div def   % pots per 1/100 inches (hinches)
   72 dpiRes div dup scale

   %---Set coordinate origin, & dir
   LandFlag 1 ne { 
      % Portrait Setup
      LeftMgn dphiRes mul PageHeight TopMgn sub dphiRes mul 
   }{
      % Landscape Setup
      90 rotate LeftMgn dphiRes mul TopMgn dphiRes mul neg 
   }ifelse
   translate 1 -1 scale

   %---Adjust font scale factor sizes, relative to 5000x5000
   0 1 6 { dup FSX exch get 4999 PX div mul FSX 3 1 roll put } for
   0 1 6 { dup FSY exch get 4999 PY div mul FSY 3 1 roll put } for

   %---Set default graphics state
   np 0 0 m
   1  SLC
   1  SLW
   [] 0 SLS
   1 1 1 1 SFX
   0 SCF
   <0000000000000000> SUF
   10 setmiterlimit
    0 setlinejoin 
    0 setlinecap
    gs  % save for clipping
    xs 0 0 PX PY ClipR
}bind def

1 setlinecap

%%EndProlog
 %%Page: 1 1
 300 3295 2543 1100 0 0 1 0 initPGL
 0 SCF
 [] 0 SLS
 1 SLW
 <ffffffffffffffff> SUF
 1 SFC
 1 SFS
 1 SFC
 1 SFM
 0 0 3295 2543 ClipR
 0 0 3295 2543 ClipR
 xs 1 SLC
 [] 0 SLS
 1 SLW
 xs 0 SLC
 1 SLW
 xs 15 SLC
 229 2311 3145 2311 Ln
 229 106 3145 106 Ln
 228 2312 3145 2312 Ln
 228 105 3145 105 Ln
 227 2313 3145 2313 Ln
 227 105 3145 105 Ln
 226 2313 3145 2313 Ln
 226 104 3145 104 Ln
 226 2314 3145 2314 Ln
 226 103 3145 103 Ln
 229 2311 229 2285 Ln
 229 106 229 132 Ln
 593 2311 593 2285 Ln
 593 106 593 132 Ln
 494 2424 584 2424 Ln
 633 2364 687 2364 Ln
 687 2364 658 2405 Ln
 658 2405 672 2405 Ln
 672 2405 683 2410 Ln
 683 2410 687 2414 Ln
 687 2414 692 2430 Ln
 692 2430 692 2440 Ln
 692 2440 687 2454 Ln
 687 2454 678 2465 Ln
 678 2465 663 2470 Ln
 663 2470 647 2470 Ln
 647 2470 633 2465 Ln
 633 2465 628 2460 Ln
 628 2460 623 2450 Ln
 958 2311 958 2285 Ln
 958 106 958 132 Ln
 859 2424 948 2424 Ln
 992 2389 992 2384 Ln
 992 2384 997 2375 Ln
 997 2375 1002 2369 Ln
 1002 2369 1012 2364 Ln
 1012 2364 1032 2364 Ln
 1032 2364 1042 2369 Ln
 1042 2369 1047 2375 Ln
 1047 2375 1052 2384 Ln
 1052 2384 1052 2394 Ln
 1052 2394 1047 2405 Ln
 1047 2405 1037 2419 Ln
 1037 2419 988 2470 Ln
 988 2470 1057 2470 Ln
 1322 2311 1322 2285 Ln
 1322 106 1322 132 Ln
 1223 2424 1313 2424 Ln
 1367 2384 1376 2379 Ln
 1376 2379 1392 2364 Ln
 1392 2364 1392 2470 Ln
 1687 2311 1687 2285 Ln
 1687 106 1687 132 Ln
 1680 2364 1665 2369 Ln
 1665 2369 1655 2384 Ln
 1655 2384 1651 2410 Ln
 1651 2410 1651 2424 Ln
 1651 2424 1655 2450 Ln
 1655 2450 1665 2465 Ln
 1665 2465 1680 2470 Ln
 1680 2470 1690 2470 Ln
 1690 2470 1705 2465 Ln
 1705 2465 1715 2450 Ln
 1715 2450 1720 2424 Ln
 1720 2424 1720 2410 Ln
 1720 2410 1715 2384 Ln
 1715 2384 1705 2369 Ln
 1705 2369 1690 2364 Ln
 1690 2364 1680 2364 Ln
 2051 2311 2051 2285 Ln
 2051 106 2051 132 Ln
 2030 2384 2039 2379 Ln
 2039 2379 2055 2364 Ln
 2055 2364 2055 2470 Ln
 2416 2311 2416 2285 Ln
 2416 106 2416 132 Ln
 2384 2389 2384 2384 Ln
 2384 2384 2389 2375 Ln
 2389 2375 2394 2369 Ln
 2394 2369 2404 2364 Ln
 2404 2364 2424 2364 Ln
 2424 2364 2434 2369 Ln
 2434 2369 2439 2375 Ln
 2439 2375 2444 2384 Ln
 2444 2384 2444 2394 Ln
 2444 2394 2439 2405 Ln
 2439 2405 2429 2419 Ln
 2429 2419 2380 2470 Ln
 2380 2470 2449 2470 Ln
 2780 2311 2780 2285 Ln
 2780 106 2780 132 Ln
 2754 2364 2808 2364 Ln
 2808 2364 2779 2405 Ln
 2779 2405 2793 2405 Ln
 2793 2405 2804 2410 Ln
 2804 2410 2808 2414 Ln
 2808 2414 2813 2430 Ln
 2813 2430 2813 2440 Ln
 2813 2440 2808 2454 Ln
 2808 2454 2799 2465 Ln
 2799 2465 2784 2470 Ln
 2784 2470 2768 2470 Ln
 2768 2470 2754 2465 Ln
 2754 2465 2749 2460 Ln
 2749 2460 2744 2450 Ln
 3145 2311 3145 2285 Ln
 3145 106 3145 132 Ln
 3158 2364 3109 2435 Ln
 3109 2435 3183 2435 Ln
 3158 2364 3158 2470 Ln
 229 2311 229 106 Ln
 3145 2311 3145 106 Ln
 228 2310 228 106 Ln
 3146 2312 3146 105 Ln
 227 2309 227 106 Ln
 3146 2313 3146 105 Ln
 226 2309 226 106 Ln
 3147 2313 3147 104 Ln
 226 2308 226 106 Ln
 3148 2314 3148 103 Ln
 229 2311 255 2311 Ln
 3145 2311 3119 2311 Ln
 148 2411 148 2321 Ln
 88 2231 158 2281 Ln
 158 2281 158 2206 Ln
 88 2231 193 2231 Ln
 229 2035 255 2035 Ln
 3145 2035 3119 2035 Ln
 229 1760 255 1760 Ln
 3145 1760 3119 1760 Ln
 148 1860 148 1770 Ln
 113 1725 108 1725 Ln
 108 1725 98 1720 Ln
 98 1720 93 1715 Ln
 93 1715 88 1705 Ln
 88 1705 88 1685 Ln
 88 1685 93 1674 Ln
 93 1674 98 1669 Ln
 98 1669 108 1664 Ln
 108 1664 118 1664 Ln
 118 1664 128 1669 Ln
 128 1669 143 1680 Ln
 143 1680 193 1730 Ln
 193 1730 193 1660 Ln
 229 1484 255 1484 Ln
 3145 1484 3119 1484 Ln
 229 1209 255 1209 Ln
 3145 1209 3119 1209 Ln
 88 1215 93 1231 Ln
 93 1231 108 1240 Ln
 108 1240 133 1245 Ln
 133 1245 148 1245 Ln
 148 1245 172 1240 Ln
 172 1240 188 1231 Ln
 188 1231 193 1215 Ln
 193 1215 193 1205 Ln
 193 1205 188 1190 Ln
 188 1190 172 1180 Ln
 172 1180 148 1175 Ln
 148 1175 133 1175 Ln
 133 1175 108 1180 Ln
 108 1180 93 1190 Ln
 93 1190 88 1205 Ln
 88 1205 88 1215 Ln
 229 933 255 933 Ln
 3145 933 3119 933 Ln
 108 955 103 945 Ln
 103 945 88 930 Ln
 88 930 193 930 Ln
 229 657 255 657 Ln
 3145 657 3119 657 Ln
 113 689 108 689 Ln
 108 689 98 684 Ln
 98 684 93 679 Ln
 93 679 88 670 Ln
 88 670 88 649 Ln
 88 649 93 639 Ln
 93 639 98 634 Ln
 98 634 108 629 Ln
 108 629 118 629 Ln
 118 629 128 634 Ln
 128 634 143 644 Ln
 143 644 193 694 Ln
 193 694 193 624 Ln
 229 382 255 382 Ln
 3145 382 3119 382 Ln
 88 409 88 353 Ln
 88 353 128 384 Ln
 128 384 128 369 Ln
 128 369 133 358 Ln
 133 358 138 353 Ln
 138 353 153 348 Ln
 153 348 163 348 Ln
 163 348 177 353 Ln
 177 353 188 363 Ln
 188 363 193 379 Ln
 193 379 193 394 Ln
 193 394 188 409 Ln
 188 409 183 414 Ln
 183 414 172 419 Ln
 229 106 255 106 Ln
 3145 106 3119 106 Ln
 88 93 158 143 Ln
 158 143 158 68 Ln
 88 93 193 93 Ln
 xs 10 SLC
 1 SLW
 229 2311 230 2311 Ln
 229 2311 259 2289 Ln
 259 2289 288 2266 Ln
 288 2266 317 2244 Ln
 317 2244 346 2222 Ln
 346 2222 376 2199 Ln
 376 2199 406 2177 Ln
 406 2177 435 2155 Ln
 435 2155 465 2132 Ln
 465 2132 494 2110 Ln
 494 2110 523 2088 Ln
 523 2088 553 2066 Ln
 553 2066 582 2044 Ln
 582 2044 612 2022 Ln
 612 2022 641 1999 Ln
 641 1999 671 1977 Ln
 671 1977 700 1955 Ln
 700 1955 729 1933 Ln
 729 1933 759 1910 Ln
 759 1910 789 1888 Ln
 789 1888 818 1866 Ln
 818 1866 848 1843 Ln
 848 1843 877 1821 Ln
 877 1821 906 1799 Ln
 906 1799 936 1776 Ln
 936 1776 965 1754 Ln
 965 1754 995 1732 Ln
 995 1732 1024 1710 Ln
 1024 1710 1054 1687 Ln
 1054 1687 1083 1665 Ln
 1083 1665 1112 1643 Ln
 1112 1643 1142 1620 Ln
 1142 1620 1171 1598 Ln
 1171 1598 1201 1576 Ln
 1201 1576 1231 1554 Ln
 1231 1554 1260 1531 Ln
 1260 1531 1289 1509 Ln
 1289 1509 1318 1487 Ln
 1318 1487 1348 1465 Ln
 1348 1465 1378 1443 Ln
 1378 1443 1407 1420 Ln
 1407 1420 1437 1398 Ln
 1437 1398 1466 1376 Ln
 1466 1376 1495 1354 Ln
 1495 1354 1525 1331 Ln
 1525 1331 1554 1309 Ln
 1554 1309 1584 1287 Ln
 1584 1287 1613 1264 Ln
 1613 1264 1643 1242 Ln
 1643 1242 1672 1220 Ln
 1672 1220 1701 1197 Ln
 1701 1197 1731 1175 Ln
 1731 1175 1761 1153 Ln
 1761 1153 1790 1130 Ln
 1790 1130 1820 1108 Ln
 1820 1108 1849 1086 Ln
 1849 1086 1878 1063 Ln
 1878 1063 1908 1041 Ln
 1908 1041 1937 1019 Ln
 1937 1019 1967 997 Ln
 1967 997 1996 975 Ln
 1996 975 2026 953 Ln
 2026 953 2055 931 Ln
 2055 931 2084 908 Ln
 2084 908 2114 886 Ln
 2114 886 2143 864 Ln
 2143 864 2173 841 Ln
 2173 841 2203 819 Ln
 2203 819 2232 797 Ln
 2232 797 2261 774 Ln
 2261 774 2290 752 Ln
 2290 752 2320 730 Ln
 2320 730 2350 707 Ln
 2350 707 2379 685 Ln
 2379 685 2409 663 Ln
 2409 663 2438 641 Ln
 2438 641 2467 618 Ln
 2467 618 2497 596 Ln
 2497 596 2526 574 Ln
 2526 574 2556 551 Ln
 2556 551 2585 529 Ln
 2585 529 2615 507 Ln
 2615 507 2644 485 Ln
 2644 485 2673 463 Ln
 2673 463 2703 441 Ln
 2703 441 2733 418 Ln
 2733 418 2762 396 Ln
 2762 396 2792 374 Ln
 2792 374 2821 351 Ln
 2821 351 2850 329 Ln
 2850 329 2880 307 Ln
 2880 307 2909 285 Ln
 2909 285 2939 262 Ln
 2939 262 2968 240 Ln
 2968 240 2998 218 Ln
 2998 218 3027 195 Ln
 3027 195 3056 173 Ln
 3056 173 3086 151 Ln
 3086 151 3115 128 Ln
 3115 128 3145 106 Ln
 xs 11 SLC
 229 933 230 933 Ln
 229 933 259 933 Ln
 259 933 288 933 Ln
 288 933 294 933 Ln
 358 933 360 933 Ln
 358 933 406 933 Ln
 406 933 423 933 Ln
 487 933 489 933 Ln
 487 933 523 933 Ln
 523 933 552 933 Ln
 617 933 618 933 Ln
 617 933 671 933 Ln
 671 933 681 933 Ln
 745 933 747 933 Ln
 745 933 789 933 Ln
 789 933 811 933 Ln
 875 933 877 933 Ln
 875 933 906 933 Ln
 906 933 936 933 Ln
 936 933 939 933 Ln
 1004 933 1005 933 Ln
 1004 933 1054 933 Ln
 1054 933 1069 933 Ln
 1133 933 1135 933 Ln
 1133 933 1171 933 Ln
 1171 933 1198 933 Ln
 1262 933 1264 933 Ln
 1262 933 1318 933 Ln
 1318 933 1327 933 Ln
 1392 933 1393 933 Ln
 1392 933 1437 933 Ln
 1437 933 1456 933 Ln
 1520 933 1522 933 Ln
 1520 933 1554 933 Ln
 1554 933 1584 933 Ln
 1584 933 1587 933 Ln
 1650 933 1651 933 Ln
 1650 933 1701 933 Ln
 1701 933 1714 933 Ln
 1779 933 1780 933 Ln
 1779 933 1820 933 Ln
 1820 933 1844 933 Ln
 1908 933 1910 933 Ln
 1908 933 1937 933 Ln
 1937 933 1967 933 Ln
 1967 933 1972 933 Ln
 2037 933 2038 933 Ln
 2037 933 2084 933 Ln
 2084 933 2102 933 Ln
 2166 933 2168 933 Ln
 2166 933 2203 933 Ln
 2203 933 2231 933 Ln
 2295 933 2297 933 Ln
 2295 933 2350 933 Ln
 2350 933 2360 933 Ln
 2425 933 2426 933 Ln
 2425 933 2467 933 Ln
 2467 933 2489 933 Ln
 2553 933 2555 933 Ln
 2553 933 2585 933 Ln
 2585 933 2615 933 Ln
 2615 933 2619 933 Ln
 2683 933 2685 933 Ln
 2683 933 2733 933 Ln
 2733 933 2747 933 Ln
 2812 933 2813 933 Ln
 2812 933 2850 933 Ln
 2850 933 2877 933 Ln
 2941 933 2943 933 Ln
 2941 933 2998 933 Ln
 2998 933 3006 933 Ln
 3070 933 3072 933 Ln
 3070 933 3115 933 Ln
 3115 933 3135 933 Ln
 xs 15 SLC
 1 newPage
 %%Trailer
 %!END
