%!PS-Adobe-2.0 EPSF-1.2
%%Creator: PGL v-2.00 by AnSoft, Inc.
%%Pages:   1
%%BoundingBox: 0 0 611 791
%%EndComments
%---------------------------------------------------------------------
%
%------------------ Copyright (C) 1991 AnSoft,Inc.--------------------
%
%---------------------------------------------------------------------
% Temporary variables used
%---------------------------------------------------------------------
%  PROC          VARIABLES
%  PatternFill : fx1,fx2,fy1,fy2,fwidth
%
%---------------------------------------------------------------------
%  PGL Global Data
%---------------------------------------------------------------------
/LineColor 1   def  % -1 turns off Line & Outline drawing
/LineStyle []  def  % 
/Phase     0   def  %
/AreaColor 1   def  % -1 turns off Area Fills
/FillFlag  1   def  % 1-Outline, 2-Fill, 3-Both
/FillStyle 0   def  % 
/FillMode  1   def  %  1-opaque, 0-transparent
/MaxColor  15  def  %
/CurFont   0   def  % FontNames index
/topFlagV  0   def  % Text Justification(Vertical) Flags 
/ctrFlagV  0   def  %                   (Vertical)
/ctrFlagH  0   def  %                   (Horizonal)
/LineWidth 1   def  %
/UnitWidth 1   def  % Unit Line thickness in 1/300'ths inches
/PatSize   3   def  % Fill Pattern Scale Factor
/PatChar   48  def  % Fill Pattern Ascii Value
/UserChar  60  def  % UserFill Pattern Ascii Value
/FillChar  (?) def  % UserFill Pattern Ascii Value
/UserFillPat <0000000000000000> def %- empty fill by default

%--------------------------------------------------------------------
% Bitmap support
%--------------------------------------------------------------------
/rleFlag   1 string def
/rleStr    2 string def
/bmStr     1 string def

%--------------------------------------------------------------------
%  Color Tables and Mappings
%--------------------------------------------------------------------
/bwColors 256 array def
0 1 255 { bwColors exch 0 put } for  % zero all colors to black
bwColors 0 1 put                     % index 0 - white, all others black

/grayColors 256 array def
0 1 255 { grayColors exch 0 put } for  % zero all colors to black
grayColors  0  1.00 put 
grayColors  1  0.11 put 
grayColors  2  0.59 put 
grayColors  3  0.70 put 
grayColors  4  0.30 put 
grayColors  5  0.41 put 
grayColors  6  0.40 put 
grayColors  7  0.97 put 
grayColors  8  0.50 put 
grayColors  9  0.40 put 
grayColors  10 0.73 put 
grayColors  11 0.80 put 
grayColors  12 0.53 put 
grayColors  13 0.60 put 
grayColors  14 0.93 put 
grayColors  15 0.00 put 

/rgbColors 256 array def
0 1 255 { rgbColors exch [0 0 0] put } for  % zero all colors to black
rgbColors  0  [1 1 1]           put         % white
rgbColors  1  [0 0 1]           put         % blue
rgbColors  2  [0 1 0]           put         % green
rgbColors  3  [0 1 1]           put         % cyan
rgbColors  4  [1 0 0]           put         % red
rgbColors  5  [1 0 1]           put         % magenta
rgbColors  6  [0.67  0.33  0]   put         % brown
rgbColors  7  [0.9 0.9 0.9]     put         % darkgray
rgbColors  8  [0.75 0.75 0.75]  put         % lightgray
rgbColors  9  [0.33 0.33 1]     put         % lightblue
rgbColors  10 [0.33  1 0.33]    put         % lightgreen
rgbColors  11 [0.33 1 1]        put         % lightcyan
rgbColors  12 [1 0.33  0.33]    put         % lightred
rgbColors  13 [1 0.33  1]       put         % lightmagenta
rgbColors  14 [1 1 0.33]        put         % yellow
rgbColors  15 [0 0 0]           put         % black
        
/ColorModel  0 def
/ColorChoices [ bwColors grayColors rgbColors ] def
/ColorMap ColorChoices ColorModel get def   % default colors=b&w

%--------------------------------------------------------------------
%----Page Size, Set By Main Pgm
%--------------------------------------------------------------------
%
/PX  1950 def
/PY  1194 def

%--------------------------------------------------------------------
%----Text Scale Factors
%--------------------------------------------------------------------
/SX  1800 def   % Base size of page width/height, 
/SY  1194 def   % for scaling fonts against

/FSX  [  6  7   8  10  12  9  10 ] def  % Unit Font Scale factors
/FSY  [ -2.3  -4.6 -4.6 -4.6 -4.6 -4.6 -4.6 ] def  % Neg's to invert Y axis

%--------------------------------------------------------------------
%---- Users Font Scale Factors
%--------------------------------------------------------------------
/FSXN 1 def
/FSXD 1 def
/FSYN 1 def
/FSYD 1 def

%---------------------------------------------------------------------
%  Fonts Names Used by PGL
%  These replace the following vector fonts provided with PGL
%  If you change these you may need to change the scale factors
%  in FSX and FSY.
%---------------------------------------------------------------------
/FontNames
[
  /Helvetica          % small
  /Courier            % simplex
  /Helvetica          % duplex
  /Times-Roman        % triplex
  /Times-BoldItalic   % gothic 
  /Courier-Oblique    % script simplex
  /Helvetica-Oblique  % script duplex
] def

%---------------------------------------------------------------------
%  Fill Pattern Font based on "PS Lang Ref Man (Red Book) - Chap 5"
%---------------------------------------------------------------------
/newfont 10 dict def
newfont 
begin
 /FontType 3 def
 /FontMatrix [ .125 0 0 .125 0 0 ] def
 /FontBBox   [ 0 0 8 8 ]     def

 /Encoding 256 array def
 0 1 255 { Encoding exch /.notdef put } for
  Encoding  48 /empty     put  % '0'
  Encoding  49 /solid     put  % '1'
  Encoding  50 /lfill     put  % '2'
  Encoding  51 /slash     put  % '3'
  Encoding  52 /hslash    put  % '4'
  Encoding  53 /hbkslash  put  % '5'
  Encoding  54 /bkslash   put  % '6'
  Encoding  55 /hatch     put  % '7'
  Encoding  56 /xhatch    put  % '8'
  Encoding  57 /intleav   put  % '9'
  Encoding  58 /widedot   put  % '10'
  Encoding  59 /closedot  put  % '11'
  Encoding  60 /patfill   put  % '12'

 /CharProcs 14 dict def
 CharProcs 
 begin
  /.notdef {} bind def
  /empty    { 8 8 true [1 0 0 1 0 0] { <0000000000000000> } imagemask } bind def
  /solid    { 8 8 true [1 0 0 1 0 0] { <ffffffffffffffff> } imagemask } bind def
  /lfill    { 8 8 true [1 0 0 1 0 0] { <ffff0000ffff0000> } imagemask } bind def
  /slash    { 8 8 true [1 0 0 1 0 0] { <0102040810204080> } imagemask } bind def 
  /hslash   { 8 8 true [1 0 0 1 0 0] { <e0c183070e1c3870> } imagemask } bind def 
  /hbkslash { 8 8 true [1 0 0 1 0 0] { <f0783c1e0f87c3e1> } imagemask } bind def 
  /bkslash  { 8 8 true [1 0 0 1 0 0] { <a5d269b45a2d964b> } imagemask } bind def 
  /hatch    { 8 8 true [1 0 0 1 0 0] { <ff888888ff888888> } imagemask } bind def 
  /xhatch   { 8 8 true [1 0 0 1 0 0] { <8142241818244281> } imagemask } bind def 
  /intleav  { 8 8 true [1 0 0 1 0 0] { <cc33cc33cc33cc33> } imagemask } bind def 
  /widedot  { 8 8 true [1 0 0 1 0 0] { <8000080080000800> } imagemask } bind def 
  /closedot { 8 8 true [1 0 0 1 0 0] { <8800220088002200> } imagemask } bind def 
  /patfill  { 8 8 true [1 0 0 1 0 0] { UserFillPat } imagemask } bind def 
 end

 /BuildChar
 {
    exch
    begin  
      dup UserChar eq{                 
        8 0 setcharwidth            % userfillstyle
      }{
        8 0 0 0 8 8 setcachedevice  % standard fillstyle
      }ifelse
      Encoding exch get  
      CharProcs exch get 
    end
    exec
 }def
end 

/FillFont newfont definefont pop
%----- End Of Area Fill Font Def--------------------------------------

%---------------------------------------------------------------------
%  PGL Redefinitions
%---------------------------------------------------------------------
/gs   { gsave } bind def         
/gr   { grestore } bind def  
/m    { moveto } bind def        
/l    { lineto currentpoint stroke moveto } bind def  
/rm   { rmoveto } bind def       
/rl   { rlineto } bind def  
/cp   { closepath } bind def     
/np   { newpath } bind def   
/sg   { setgray } bind def       
/st   { stroke } bind def     
/sd   { setdash } bind def       
/ex   { exch } bind def
/in   { index } bind def         
/sw   { stringwidth } bind def 
/cxy  { currentpoint } bind def  
/slw  { setlinewidth } bind def 

%---------------------------------------------------------------------
% str strlen nchars
%---------------------------------------------------------------------
/strlen
{
    dup           % str str
    /itmp 0 def
    { /itmp itmp 1 add def pop } forall  % count characters
    itmp          % nchars
} bind def

%---------------------------------------------------------------------
% string txtCtrH   % Center Justify a string Horiz
%---------------------------------------------------------------------
/txtCtrH { dup sw pop 2 div neg dup 0 rm /ctrFlagH exch def } bind def 

%---------------------------------------------------------------------
% wx wy string atxtCtrH   % Center Justify a string Horiz
%---------------------------------------------------------------------
/atxtCtrH { 
    3 -1 roll   % wy string wx
    dup        % wy string wx wx
    4 1 roll  % wx wy string wx
    /xW ex def % wx wy string
    strlen     % wx wy string nchars
    xW mul
    /xW ex def
    dup        % str str
    sw         % str wx wy
    pop        % str wx
    xW add     % str wx+xW
    2 div neg 
    dup 
    0 rm 
    /ctrFlagH exch def 
} bind def 

%---------------------------------------------------------------------
% txtCtrHend   % Finish Center Justifying a string Horiz
%                cp shoud be at center of string
%---------------------------------------------------------------------
/txtCtrHend { ctrFlagH 0 rm /ctrFlagH 0 def } bind def 

%---------------------------------------------------------------------
% string txtRtH   % Right Justify a string Horiz
%---------------------------------------------------------------------
/txtRtH  {dup sw pop neg 0 rm} bind def 

%---------------------------------------------------------------------
% string txtRtH   % Right Justify a string Horiz
%---------------------------------------------------------------------
/atxtRtH  {
    3 -1 roll   % wy string wx
    dup        % wy string wx wx
    4 1 roll  % wx wy string wx
    /xW ex def % wx wy string
    strlen     % wx wy string nchars
    xW mul
    /xW ex def
    dup 
    sw 
    pop 
    xW add     % str wx+xW
    neg 0 rm
} bind def 

%---------------------------------------------------------------------
% txtCtrV  % Center Justify a string Vertically
%---------------------------------------------------------------------
/txtCtrV { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 2 div 0 ex gr rm pop /ctrFlagV 1 def } bind def 

%---------------------------------------------------------------------
% txtCtrVend  % Center Justify a string Vertically
%---------------------------------------------------------------------
/txtCtrVend { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
              sub neg 2 div 0 ex gr neg rm pop /ctrFlagV 0 def } bind def 

%---------------------------------------------------------------------
% string txtTopV  % Top Justify a string Vertically
%---------------------------------------------------------------------
/txtTopV { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 0 ex gr rm pop /topFlagV 1 def } bind def 

%---------------------------------------------------------------------
% txtTopVend  % Top Justify a string Vertically
%---------------------------------------------------------------------
/txtTopVend { gs np 0 0 m (X) true charpath flattenpath pathbbox ex pop 
           sub neg 0 ex gr neg rm pop /topFlagV 0 def } bind def 

%---------------------------------------------------------------------
%  ash   display text & readjusts cp for Top & Center Vertical
%        text justification
%---------------------------------------------------------------------
/ash {
   ashow
   topFlagV 1 eq {
     txtTopVend
   } if
   ctrFlagV 1 eq {
     txtCtrVend
   } if
   ctrFlagH 0 ne {
     txtCtrHend
   } if
} bind def

%---------------------------------------------------------------------
%  sh   display text & readjusts cp for Top & Center Vertical
%       text justification
%---------------------------------------------------------------------
/sh {
   show
   topFlagV 1 eq {
     txtTopVend
   } if
   ctrFlagV 1 eq {
     txtCtrVend
   } if
   ctrFlagH 0 ne {
     txtCtrHend
   } if
} bind def

%---------------------------------------------------------------------
% xs  % Extended Stroke 
%---------------------------------------------------------------------
/xs { 
  LineColor -1 ne
  { cxy st m }{ cxy np m }ifelse 
} bind def                       

%---------------------------------------------------------------------
%  color SLC   % SetLineColor  % -1 turns off line drawing
%---------------------------------------------------------------------
/SLC { dup /LineColor exch def SCC }bind def

%---------------------------------------------------------------------
%  index [r g b] SRC   % SetRgbColor
%---------------------------------------------------------------------
/SRC { 
/rgbTmp   exch def
/rgbIndex exch def
/rgbAbs   0.0  def
rgbTmp 0 get 1. 255. div mul  rgbTmp exch 0 exch put
rgbTmp 1 get 1. 255. div mul  rgbTmp exch 1 exch put
rgbTmp 2 get 1. 255. div mul  rgbTmp exch 2 exch put
rgbColors rgbIndex rgbTmp put  
rgbTmp { dup mul rgbAbs add /rgbAbs exch def } forall
grayColors rgbIndex rgbAbs sqrt put
}bind def

%---------------------------------------------------------------------
%  color SCC  % SetCurColor
%---------------------------------------------------------------------
/SCC { 
  dup -1 ne 
  { % -1 turns of line drawing
     ColorMap exch get 
     dup type /arraytype ne { 
       setgray 
     }{ 
       {} forall setrgbcolor 
     } ifelse
  }{ 
     pop  % remove -1 from stack
  }ifelse
}bind def

%---------------------------------------------------------------------
%  [] phase SLS  % SetLineStyle
%---------------------------------------------------------------------
/SLS { 
   /Phase exch def
   /LineStyle exch def 
   LineStyle Phase setdash 
}bind def

%---------------------------------------------------------------------
%  width SLW % SetLineWidth ( 1/300 inch )
%---------------------------------------------------------------------
/SLW { 
   /LineWidth exch def 
   LineWidth UnitWidth mul setlinewidth 
}bind def

%---------------------------------------------------------------------
%   color SFC % SetFillColor
%---------------------------------------------------------------------
/SFC {  /AreaColor exch def }bind def

%---------------------------------------------------------------------
%  <pattern> SUF  % SetUserFill pattern = hex no 
%---------------------------------------------------------------------
/SUF {  
    /UserFillPat exch def  % set pattern
    /FillStyle 12 def      % set flag
}bind def

%---------------------------------------------------------------------
%  style SFS  % SetFillStyle style no (0-11)
%---------------------------------------------------------------------
/SFS {  /FillStyle exch def }bind def

%---------------------------------------------------------------------
%  mode SFM  % SetFillMode   ( 1-Opaque, 2-Transparent)
%---------------------------------------------------------------------
/SFM {  /FillMode exch def }bind def

%---------------------------------------------------------------------
%  fontno SCF SetCurFont
%---------------------------------------------------------------------
/SCF {
 dup  /CurFont exch def        % save font no.
 FontNames exch get findfont 
   [ FSX CurFont get FSXN mul FSXD div PX mul SX div 0 0
     FSY CurFont get FSYN mul FSYD div PY mul SY div 0 0 ]
   makefont setfont 
 }bind def

%---------------------------------------------------------------------
%  xn xd yn yd SFX    % SetFontScale
%---------------------------------------------------------------------
/SFX {
  /FSYD exch def    /FSYN exch def  
  /FSXD exch def    /FSXN exch def
  CurFont SCF
}bind def

%---------------------------------------------------------------------
%  [ f1 f2 f3 f4 f5 f6 f7 ] SFNS   % SetFontNames
%---------------------------------------------------------------------
/SFNS {
  /FontNames exch def
}bind def

%---------------------------------------------------------------------
% [7 xsizes] [7 ysizes] SFZ  % SetFontSizes
%---------------------------------------------------------------------
/SFSZ {
  /FSY exch def
  /FSX exch def
}bind def

%---------------------------------------------------------------------
%  px py SPS  % SetPageSize
%---------------------------------------------------------------------
/SPS { /PY exch def  /PX exch def }bind def

%---------------------------------------------------------------------
%  x y color Pix  % SetPixel  1-Pixel = 1/300" pixel!
%---------------------------------------------------------------------
/Pix { 
gsave                     %
SCC moveto                % set color & position
1 linewidth [] 0 setdash  % set attributes
1 0 rlineto stroke        % do it!
grestore                  %
} bind def                       

%---------------------------------------------------------------------
%  x1 x2 y2 y2 Ln  % Line
%---------------------------------------------------------------------
/Ln { gs np 4 -2 roll m l st gr } bind def                       

%---------------------------------------------------------------------
%  x1 y1 x2 y2 flag Rect   (flag: 1-outline,2-fill,3-both)
%---------------------------------------------------------------------
/Rect { 
    /FillFlag exch def 
    gs np DrawRect FillArea OutLine gr 
} bind def

%---------------------------------------------------------------------
% x1 y1 x2 y2 x3 y3 .... flag PolyF  % PolyFill - fill current path
%---------------------------------------------------------------------
/PolyF { 
    /FillFlag exch def 
    gs closepath FillArea OutLine gr 
} bind def

%---------------------------------------------------------------------
%  x1 y1 x2 y2 ClipR % ClipRect 
%---------------------------------------------------------------------
/ClipR { 
    cxy 6 2 roll       % cx cy x1 y1 x2 y2
    gr gs
    0 setlinewidth
    np DrawRect eoclip np 
    m 
    %-- Reset graphics state
    LineWidth SLW
    LineColor SLC
    FSXN FSXD FSYN FSYD SFX
    CurFont   SCF
    LineStyle 0 setdash
} bind def

%-PRIVATE-------------------------------------------------------------
%  x1 y1 x2 y2 DrawRect 
%---------------------------------------------------------------------
/DrawRect { 
    3 in 3 in moveto 
    1 in 3 in lineto 
    3 in 1 in 4 -2 roll lineto lineto pop pop closepath % lineto
} bind def

%-PRIVATE-------------------------------------------------------------
%  xc yc sa ea rx ry DrawArc    
%---------------------------------------------------------------------
/DrawArc { 
   /savematrix matrix currentmatrix def 
   6 -2 roll translate    
   scale 
   0 0 1 5 -2 roll 
   1 -1 scale arc 1 -1 scale
   savematrix setmatrix
}bind def

%---------------------------------------------------------------------
%  xc yc sa ea rx ry Arc
%---------------------------------------------------------------------
/Arc { gs np DrawArc [] 0 sd st gr } bind def   

%---------------------------------------------------------------------
%  xc yc sa ea rx ry flag Pie   (flag: 1-Outline,2-Fill,3-Both)
%---------------------------------------------------------------------
/Pie { 
    /FillFlag exch def
    gs np 6 -2 roll 2 copy 2 copy m 8 4 roll 
    DrawArc cp FillArea OutLine gr 
} bind def   

%---------------------------------------------------------------------
%  xc yc rx ry flag ELLIPSE (flag: 1-Outline,2-Fill,3-Both)
%---------------------------------------------------------------------
/Ellipse { 
    /FillFlag exch def
     gs np 0 360 4 2 roll DrawArc FillArea OutLine gr 
}bind def   

%-PRIVATE-------------------------------------------------------------
%  OutLine
%---------------------------------------------------------------------
/OutLine  { 
  FillFlag 1 and 1 eq { 
    [] 0 sd LineColor SCC st 
  }if 
}bind def

%-PRIVATE-------------------------------------------------------------
%  FillArea  - fills current path
%---------------------------------------------------------------------
/FillArea { 
  FillFlag 2 and 2 eq { 
     gs eoclip 
     AreaColor SCC
     PatternFill
     gr
  }if 
}bind def

%-PRIVATE-------------------------------------------------------------
%  PatternFill 
%---------------------------------------------------------------------
/PatternFill {
   /psize 8 PatSize mul def
   /FillFont findfont psize scalefont setfont % set Pattern font
   FillChar 0 FillStyle PatChar add put               % fill char index
   FillMode 1 eq { gsave 1 setgray fill grestore }if  % erase background
   pathbbox                                           % llx lly  urx ury
   newpath              
   ceiling cvi /fy2 exch def 
   ceiling cvi /fx2 exch def 
   cvi 7 not and /fy1 exch def 
   cvi 7 not and /fx1 exch def
   fx2 fx1 sub psize div ceiling cvi
   /fwidth exch def
   fy1 psize fy2                          %
   {                                      %
     fx1 exch moveto                      %
     fwidth { FillChar show } repeat      %
   } for                                  %
} bind def

%---------------------------------------------------------------------
%  savePGL
%---------------------------------------------------------------------
/savePGL{
   /saveObj save def
}bind def

%---------------------------------------------------------------------
%  #copies newPage
%---------------------------------------------------------------------
/newPage{
   /#copies exch def
   showpage saveObj restore
   /#copies 1 def
}bind def

%----------------------------------------------------------------------
% x,y,npixels bmRow  % Bitmap row data, 1 row at a time...
%----------------------------------------------------------------------
/bmRow {
  /bmPixels  exch def
  /bmY       exch def
  /bmX       exch def

  currentpoint stroke moveto % save x,y stroke and moveto
  gsave                      % save graphics state
  1 setlinewidth             % linewidth
  0 setlinecap               % but cap
  [] 0 setdash               % solid style
  bmX .5 add bmY .5 add moveto % move to start of row
  %
  %  Read & decompress  a whole row of pixel color data via RLE
  %
  currentfile rleFlag readhexstring pop 
  0 get 1 eq 
  { /cumBytes 0 def
    { 
      currentfile rleStr readhexstring pop 
      dup 
      0 get 1 add exch % count rleStr
      1 get SCC        % count 
      dup              % dup count
      0 rlineto        % draw
      currentpoint stroke moveto     
      /cumBytes exch cumBytes add def 
      cumBytes bmPixels ge { exit } if 
    }loop 
  }{ 
    1 1 bmPixels
    {
      pop
      currentfile bmStr readhexstring pop 
      0 get SCC
      1 0 rlineto
      currentpoint stroke moveto     
    }for
  }ifelse 

  grestore
}bind def

%----------------------------------------------------------------------
% DPI PMAXX PMAXY PageHght TopMgn LftMgn LandFlag ColorModel initPGL
%----------------------------------------------------------------------
/initPGL {
   %---Page Constants
   /ColorModel exch def  /LandFlag exch def 
   /LeftMgn exch def     /TopMgn exch def
   /PageHeight exch def  /PY exch def       /PX exch def

   %---Select/Set Color model
   /ColorMap ColorChoices ColorModel get def   % default colors=b&w
   
   %---Save state & set output res
   savePGL 
   
   %---Set output res scaling, dpi on stack(300?)
   /dpiRes  exch def             % dots per inch
   /dphiRes dpiRes 100 div def   % pots per 1/100 inches (hinches)
   72 dpiRes div dup scale

   %---Set coordinate origin, & dir
   LandFlag 1 ne { 
      % Portrait Setup
      LeftMgn dphiRes mul PageHeight TopMgn sub dphiRes mul 
   }{
      % Landscape Setup
      90 rotate LeftMgn dphiRes mul TopMgn dphiRes mul neg 
   }ifelse
   translate 1 -1 scale

   %---Adjust font scale factor sizes, relative to 5000x5000
   0 1 6 { dup FSX exch get 4999 PX div mul FSX 3 1 roll put } for
   0 1 6 { dup FSY exch get 4999 PY div mul FSY 3 1 roll put } for

   %---Set default graphics state
   np 0 0 m
   1  SLC
   1  SLW
   [] 0 SLS
   1 1 1 1 SFX
   0 SCF
   <0000000000000000> SUF
   10 setmiterlimit
    0 setlinejoin 
    0 setlinecap
    gs  % save for clipping
    xs 0 0 PX PY ClipR
}bind def

1 setlinecap

%%EndProlog
 %%Page: 1 1
 300 3295 2543 1100 0 0 1 0 initPGL
 0 SCF
 [] 0 SLS
 1 SLW
 <ffffffffffffffff> SUF
 1 SFC
 1 SFS
 1 SFC
 1 SFM
 0 0 3295 2543 ClipR
 0 0 3295 2543 ClipR
 xs 1 SLC
 [] 0 SLS
 1 SLW
 xs 0 SLC
 1 SLW
 xs 15 SLC
 229 2311 3146 2311 Ln
 229 106 3146 106 Ln
 228 2312 3146 2312 Ln
 228 105 3146 105 Ln
 227 2313 3146 2313 Ln
 227 105 3146 105 Ln
 226 2313 3146 2313 Ln
 226 104 3146 104 Ln
 226 2314 3146 2314 Ln
 226 103 3146 103 Ln
 229 2311 229 2285 Ln
 229 106 229 132 Ln
 646 2311 646 2285 Ln
 646 106 646 132 Ln
 249 2424 338 2424 Ln
 392 2384 402 2379 Ln
 402 2379 417 2364 Ln
 417 2364 417 2470 Ln
 639 2364 624 2369 Ln
 624 2369 614 2384 Ln
 614 2384 609 2410 Ln
 609 2410 609 2424 Ln
 609 2424 614 2450 Ln
 614 2450 624 2465 Ln
 624 2465 639 2470 Ln
 639 2470 649 2470 Ln
 649 2470 664 2465 Ln
 664 2465 674 2450 Ln
 674 2450 679 2424 Ln
 679 2424 679 2410 Ln
 679 2410 674 2384 Ln
 674 2384 664 2369 Ln
 664 2369 649 2364 Ln
 649 2364 639 2364 Ln
 1062 2311 1062 2285 Ln
 1062 106 1062 132 Ln
 1041 2384 1050 2379 Ln
 1050 2379 1066 2364 Ln
 1066 2364 1066 2470 Ln
 1479 2311 1479 2285 Ln
 1479 106 1479 132 Ln
 1448 2389 1448 2384 Ln
 1448 2384 1453 2375 Ln
 1453 2375 1458 2369 Ln
 1458 2369 1467 2364 Ln
 1467 2364 1487 2364 Ln
 1487 2364 1498 2369 Ln
 1498 2369 1503 2375 Ln
 1503 2375 1507 2384 Ln
 1507 2384 1507 2394 Ln
 1507 2394 1503 2405 Ln
 1503 2405 1492 2419 Ln
 1492 2419 1443 2470 Ln
 1443 2470 1512 2470 Ln
 1896 2311 1896 2285 Ln
 1896 106 1896 132 Ln
 1869 2364 1924 2364 Ln
 1924 2364 1894 2405 Ln
 1894 2405 1909 2405 Ln
 1909 2405 1919 2410 Ln
 1919 2410 1924 2414 Ln
 1924 2414 1929 2430 Ln
 1929 2430 1929 2440 Ln
 1929 2440 1924 2454 Ln
 1924 2454 1915 2465 Ln
 1915 2465 1899 2470 Ln
 1899 2470 1884 2470 Ln
 1884 2470 1869 2465 Ln
 1869 2465 1865 2460 Ln
 1865 2460 1860 2450 Ln
 2313 2311 2313 2285 Ln
 2313 106 2313 132 Ln
 2326 2364 2277 2435 Ln
 2277 2435 2351 2435 Ln
 2326 2364 2326 2470 Ln
 2730 2311 2730 2285 Ln
 2730 106 2730 132 Ln
 2753 2364 2703 2364 Ln
 2703 2364 2698 2410 Ln
 2698 2410 2703 2405 Ln
 2703 2405 2718 2399 Ln
 2718 2399 2733 2399 Ln
 2733 2399 2748 2405 Ln
 2748 2405 2758 2414 Ln
 2758 2414 2763 2430 Ln
 2763 2430 2763 2440 Ln
 2763 2440 2758 2454 Ln
 2758 2454 2748 2465 Ln
 2748 2465 2733 2470 Ln
 2733 2470 2718 2470 Ln
 2718 2470 2703 2465 Ln
 2703 2465 2698 2460 Ln
 2698 2460 2693 2450 Ln
 3146 2311 3146 2285 Ln
 3146 106 3146 132 Ln
 3175 2379 3170 2369 Ln
 3170 2369 3154 2364 Ln
 3154 2364 3145 2364 Ln
 3145 2364 3130 2369 Ln
 3130 2369 3120 2384 Ln
 3120 2384 3115 2410 Ln
 3115 2410 3115 2435 Ln
 3115 2435 3120 2454 Ln
 3120 2454 3130 2465 Ln
 3130 2465 3145 2470 Ln
 3145 2470 3150 2470 Ln
 3150 2470 3165 2465 Ln
 3165 2465 3175 2454 Ln
 3175 2454 3179 2440 Ln
 3179 2440 3179 2435 Ln
 3179 2435 3175 2419 Ln
 3175 2419 3165 2410 Ln
 3165 2410 3150 2405 Ln
 3150 2405 3145 2405 Ln
 3145 2405 3130 2410 Ln
 3130 2410 3120 2419 Ln
 3120 2419 3115 2435 Ln
 229 2311 229 106 Ln
 3146 2311 3146 106 Ln
 228 2310 228 106 Ln
 3147 2312 3147 105 Ln
 227 2309 227 106 Ln
 3148 2313 3148 105 Ln
 226 2309 226 106 Ln
 3149 2313 3149 104 Ln
 226 2308 226 106 Ln
 3150 2314 3150 103 Ln
 229 2311 255 2311 Ln
 3146 2311 3121 2311 Ln
 148 2411 148 2321 Ln
 88 2271 88 2216 Ln
 88 2216 128 2246 Ln
 128 2246 128 2231 Ln
 128 2231 133 2220 Ln
 133 2220 138 2216 Ln
 138 2216 153 2211 Ln
 153 2211 163 2211 Ln
 163 2211 177 2216 Ln
 177 2216 188 2225 Ln
 188 2225 193 2241 Ln
 193 2241 193 2256 Ln
 193 2256 188 2271 Ln
 188 2271 183 2276 Ln
 183 2276 172 2281 Ln
 229 2035 255 2035 Ln
 3146 2035 3121 2035 Ln
 229 1760 255 1760 Ln
 3146 1760 3121 1760 Ln
 148 1860 148 1770 Ln
 108 1715 103 1705 Ln
 103 1705 88 1690 Ln
 88 1690 193 1690 Ln
 229 1484 255 1484 Ln
 3146 1484 3121 1484 Ln
 88 1491 93 1506 Ln
 93 1506 108 1516 Ln
 108 1516 133 1521 Ln
 133 1521 148 1521 Ln
 148 1521 172 1516 Ln
 172 1516 188 1506 Ln
 188 1506 193 1491 Ln
 193 1491 193 1481 Ln
 193 1481 188 1465 Ln
 188 1465 172 1456 Ln
 172 1456 148 1451 Ln
 148 1451 133 1451 Ln
 133 1451 108 1456 Ln
 108 1456 93 1465 Ln
 93 1465 88 1481 Ln
 88 1481 88 1491 Ln
 229 1209 255 1209 Ln
 3146 1209 3121 1209 Ln
 108 1231 103 1221 Ln
 103 1221 88 1205 Ln
 88 1205 193 1205 Ln
 229 933 255 933 Ln
 3146 933 3121 933 Ln
 113 965 108 965 Ln
 108 965 98 960 Ln
 98 960 93 955 Ln
 93 955 88 945 Ln
 88 945 88 925 Ln
 88 925 93 914 Ln
 93 914 98 909 Ln
 98 909 108 905 Ln
 108 905 118 905 Ln
 118 905 128 909 Ln
 128 909 143 920 Ln
 143 920 193 970 Ln
 193 970 193 900 Ln
 229 657 255 657 Ln
 3146 657 3121 657 Ln
 88 684 88 629 Ln
 88 629 128 659 Ln
 128 659 128 644 Ln
 128 644 133 634 Ln
 133 634 138 629 Ln
 138 629 153 624 Ln
 153 624 163 624 Ln
 163 624 177 629 Ln
 177 629 188 639 Ln
 188 639 193 654 Ln
 193 654 193 670 Ln
 193 670 188 684 Ln
 188 684 183 689 Ln
 183 689 172 694 Ln
 229 382 255 382 Ln
 3146 382 3121 382 Ln
 88 369 158 419 Ln
 158 419 158 344 Ln
 88 369 193 369 Ln
 229 106 255 106 Ln
 3146 106 3121 106 Ln
 88 83 88 133 Ln
 88 133 133 138 Ln
 133 138 128 133 Ln
 128 133 123 119 Ln
 123 119 123 103 Ln
 123 103 128 88 Ln
 128 88 138 78 Ln
 138 78 153 73 Ln
 153 73 163 73 Ln
 163 73 177 78 Ln
 177 78 188 88 Ln
 188 88 193 103 Ln
 193 103 193 119 Ln
 193 119 188 133 Ln
 188 133 183 138 Ln
 183 138 172 143 Ln
 xs 10 SLC
 1 SLW
 585 106 586 110 Ln
 586 110 646 313 Ln
 646 313 705 504 Ln
 705 504 765 684 Ln
 765 684 824 853 Ln
 824 853 884 1011 Ln
 884 1011 943 1156 Ln
 943 1156 1003 1292 Ln
 1003 1292 1062 1415 Ln
 1062 1415 1122 1527 Ln
 1122 1527 1182 1629 Ln
 1182 1629 1241 1719 Ln
 1241 1719 1301 1798 Ln
 1301 1798 1360 1865 Ln
 1360 1865 1420 1921 Ln
 1420 1921 1479 1966 Ln
 1479 1966 1539 2000 Ln
 1539 2000 1598 2022 Ln
 1598 2022 1658 2034 Ln
 1658 2034 1717 2034 Ln
 1717 2034 1777 2022 Ln
 1777 2022 1836 2000 Ln
 1836 2000 1896 1966 Ln
 1896 1966 1956 1921 Ln
 1956 1921 2015 1865 Ln
 2015 1865 2075 1798 Ln
 2075 1798 2134 1719 Ln
 2134 1719 2194 1629 Ln
 2194 1629 2253 1527 Ln
 2253 1527 2313 1416 Ln
 2313 1416 2372 1292 Ln
 2372 1292 2432 1156 Ln
 2432 1156 2491 1011 Ln
 2491 1011 2551 853 Ln
 2551 853 2611 684 Ln
 2611 684 2670 504 Ln
 2670 504 2730 313 Ln
 2730 313 2789 110 Ln
 2789 110 2790 106 Ln
 xs 11 SLC
 229 1484 230 1484 Ln
 229 1484 288 1484 Ln
 288 1484 294 1484 Ln
 358 1484 360 1484 Ln
 358 1484 423 1484 Ln
 487 1484 489 1484 Ln
 487 1484 552 1484 Ln
 617 1484 618 1484 Ln
 617 1484 681 1484 Ln
 745 1484 747 1484 Ln
 745 1484 811 1484 Ln
 875 1484 877 1484 Ln
 875 1484 939 1484 Ln
 1004 1484 1005 1484 Ln
 1004 1484 1069 1484 Ln
 1133 1484 1135 1484 Ln
 1133 1484 1198 1484 Ln
 1262 1484 1264 1484 Ln
 1262 1484 1327 1484 Ln
 1392 1484 1393 1484 Ln
 1392 1484 1456 1484 Ln
 1520 1484 1522 1484 Ln
 1520 1484 1585 1484 Ln
 1650 1484 1651 1484 Ln
 1650 1484 1714 1484 Ln
 1779 1484 1780 1484 Ln
 1779 1484 1844 1484 Ln
 1908 1484 1910 1484 Ln
 1908 1484 1972 1484 Ln
 2037 1484 2038 1484 Ln
 2037 1484 2102 1484 Ln
 2166 1484 2168 1484 Ln
 2166 1484 2231 1484 Ln
 2295 1484 2297 1484 Ln
 2295 1484 2360 1484 Ln
 2425 1484 2426 1484 Ln
 2425 1484 2489 1484 Ln
 2553 1484 2555 1484 Ln
 2553 1484 2619 1484 Ln
 2683 1484 2685 1484 Ln
 2683 1484 2747 1484 Ln
 2812 1484 2813 1484 Ln
 2812 1484 2877 1484 Ln
 2941 1484 2943 1484 Ln
 2941 1484 3006 1484 Ln
 3070 1484 3072 1484 Ln
 3070 1484 3135 1484 Ln
 xs 15 SLC
 1 newPage
 %%Trailer
 %!END
